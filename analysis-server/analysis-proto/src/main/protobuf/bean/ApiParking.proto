/**
 * 车位地锁/车位传感器设备的API接口请求/应答的消息定义。
 */

syntax = "proto2";

package ChargerLink.Gateway;
option java_package     = "com.chargerlink.gateway.bean.api";
option go_package       = "com.chargerlink.gateway.bean.api";
option csharp_namespace = "com.chargerlink.gateway.bean.api";
option java_multiple_files = false;

import "bean/EnumParking.proto";

/** ChargeLink公司的车位地锁/车位传感器设备的命令请求的消息定义。*/
message CommandParkingCL_v2 {
	oneof                 command {                                 /// (必填)ChargeLink公司的车位地锁/车位传感器的命令请求。可选类型如下：
		CmdRemoteControl  remote_control  = 5;                      ///    设备远程控制的命令。终端设备返回命令应答。对应ChargeLink公司的Protobuf协议V1版的ParkLock.Request消息/V2版的RemoteControlReq消息。
		CmdSetConfig      set_config      = 10;                     ///    设置设备配置的命令。终端设备返回命令应答。对应ChargeLink公司的Protobuf协议V1版的SetConfiguration.Request消息/V2版的ChangeConfigurationReq消息。
		CmdGetConfig      get_config      = 11;                     ///    获取设备配置的命令。终端设备返回命令应答。对应ChargeLink公司的Protobuf协议V2版的GetConfigurationReq消息。
		CmdUpdateFirmware update_firmware = 13;                     ///    更新设备固件的命令。终端设备不返回命令应答。对应ChargeLink公司的Protobuf协议V1版的UpgradeFirmware.Request消息/V2版的UpdateFirmwareReq消息。
		CmdTriggerWarns   trigger_warns   = 21;                     ///    获取设备告警记录的命令。终端设备返回命令应答。对应ChargeLink公司的Protobuf协议V2版的GetWarningReq消息。
		CmdTriggerDiags   trigger_diags   = 22;                     ///    获取设备诊断日志的命令。终端设备返回命令应答。对应ChargeLink公司的Protobuf协议V2版的GetDiagnosticsReq消息。
		CmdTriggerMessage trigger_message = 23;                     ///    触发设备消息重发的命令。终端设备不返回命令应答。对应ChargeLink公司的Protobuf协议V2版的TriggerMessageReq消息。
	}

	/** 设备远程控制命令的消息定义。对应ChargeLink公司的Protobuf协议V1版的Reset.Request、ParkLock.Request消息/V2版的RemoteControlReq消息。*/
	message CmdRemoteControl {
		required string function  = 1;                              /// (必填)远程控制命令名称。其中：命令名称为FunctionName的值对应的字符串。
		optional string parameter = 2;                              /// (可选)远程控制命令参数。

		/** 远程控制命令名称的常量定义。对应ChargeLink公司的Protobuf协议V2版的远程控制功能列表。*/
		enum FunctionName {
			Reset              = 1;                                 /// 重启充电桩。参数：无。
			UnlockPark         = 5;                                 /// 车位锁开锁。参数：车位地锁或传感器ID。
			LockPark           = 6;                                 /// 车位锁上锁。参数：车位地锁或传感器ID。
			UpdateSSLCert      = 7;                                 /// 升级SSL证书。参数：证书内容字符串。
			ChangeAvailability = 8;                                 /// 设置服务状态。参数：0：不提供服务，1：提供服务。
		}
	}

	/** 设置设备配置命令的消息定义。对应ChargeLink公司的Protobuf协议V1版的SetConfiguration.Request消息/V2版的ChangeConfigurationReq消息。*/
	message CmdSetConfig {
		map<string, string> config_list = 1;                        /// (必填)设置的配置参数值列表。格式为：参数名称->参数值。其中：参数名称为ConfigName的值对应的字符串。

		/** 设备配置参数名称的常量定义。对应ChargeLink公司的Protobuf协议V2版的配置参数定义。*/
		enum ConfigName {
			ServerUrl     = 1;                                      /// 服务器地址及端口号。类型：string，可写。
			User          = 2;                                      /// 服务器登录用户名。类型：string，可写。
			Password      = 3;                                      /// 服务器登录密码。类型：string，可写。
			AdmPassword   = 4;                                      /// 本地管理员密码。类型：string，可写。
			BMSInt        = 5;                                      /// BMS信息上报时间间隔。类型：int，可写。
			MeterChgInt   = 6;                                      /// 充电时电表上报时间间隔。类型：int，可写。
			MeterIdleInt  = 7;                                      /// 空闲时电表上报时间间隔。类型：int，可写。
			HeartbeatInt  = 8;                                      /// 心跳时间间隔。类型：int，可写。
			ReconnectInt  = 9;                                      /// 断线后重连时间间隔。类型：int，可写。
			BootInt       = 10;                                     /// 启动通知重发时间间隔。类型：int，可写。
			SysInt        = 11;                                     /// 充电时系统遥测间隔。类型：int，可写。
			SysIdleInt    = 12;                                     /// 空闲时系统遥测间隔。类型：int，可写。
			ELossRatio    = 13;                                     /// 电损系数。类型：int，可写。
			MeterMAC1     = 14;                                     /// 电表1地址。类型：string，可写。
			MeterMAC2     = 15;                                     /// 电表2地址。类型：string，可写。
			MeterMAC3     = 16;                                     /// 电表3地址。类型：string，可写。
			MeterMAC4     = 17;                                     /// 电表4地址。类型：string，可写。
			MeterNum      = 18;                                     /// 电表数量。类型：int，只读。
			OffLineEnable = 19;                                     /// 允许离线充电。类型：bool(0：禁止，1：允许)，可写。
			Availability  = 20;                                     /// 充电服务状态，类型：bool(0：不提供服务，1：提供服务)，可写。
			PartNumber    = 21;                                     /// 设备型号。类型：string，只读。
			SerialNumber  = 22;                                     /// 设备序列号。类型：string，只读。
			VID           = 23;                                     /// 供应商代码。类型：string，只读。
			FWVersion     = 24;                                     /// 固件版本号。类型：string，只读。
			PTVersion     = 25;                                     /// 协议版本。类型：string，只读。
			ConNum        = 26;                                     /// 充电接口数量。类型：int，只读。
			ConType       = 27;                                     /// 充电接口类型。类型：int(0：交流，1：直流)，只读。
			MAC           = 28;                                     /// 设备MAC地址。类型：string，只读。
			SectionPath   = 29;                                     /// 分区路径。类型：string，可写。
			QRCodeHeader  = 30;                                     /// 充电桩二维码前缀。类型：string，可写。
			QRCode        = 31;                                     /// 充电桩二维码。类型：string，可写。
			ServiceNumber = 32;                                     /// 客服电话。类型：string，可写。
		}
	}

	/** 获取设备配置命令的消息定义。对应ChargeLink公司的Protobuf协议V2版的GetConfigurationReq消息。*/
	message CmdGetConfig {
		repeated string key_list = 1;                               /// (必填)获取的配置参数名称列表。其中：参数名称为ConfigName的值对应的字符串。
	}

	/** 更新设备固件命令的消息定义。对应ChargeLink公司的Protobuf协议V1版的UpgradeFirmware.Request消息/V2版的UpdateFirmwareReq消息。*/
	message CmdUpdateFirmware {
		required string firmware_url   = 1;                         /// (必填)固件下载地址。
		required string firmware_md5   = 2;                         /// (必填)固件MD5校验。
		optional uint32 retry_count    = 3;                         /// (可选)重试次数。缺省或0：表示一直重试。
		optional uint32 retry_interval = 4;                         /// (可选)重试间隔。单位：1秒。
		optional int64  download_time  = 5;                         /// (可选)开始下载时间(北京时间的毫秒时间戳)。单位：毫秒。
	}

	/** 获取设备告警记录命令的消息定义。对应ChargeLink公司的Protobuf协议V2版的GetWarningReq消息。*/
	message CmdTriggerWarns {
		optional PkDeviceType comp_type   = 1;                      /// (可选)指定组件类型。null：返回所有类型的告警记录。
		optional PkAlarmLevel alarm_level = 2;                      /// (可选)指定返回告警记录的告警等级。null：返回所有级别的告警记录。
		optional int64        start_time  = 3;                      /// (可选)指定返回告警记录的开始时间(北京时间的毫秒时间戳)。单位：毫秒。null：从最早的告警记录开始返回。
		optional int64        stop_time   = 4;                      /// (可选)指定返回告警记录的结束时间(北京时间的毫秒时间戳)。单位：毫秒。null：返回后续全部告警记录。
		optional int32        offset      = 5;                      /// (可选)指定返回告警记录的偏移量(相对于开始/结束数据之间的记录)。null：从第1个告警记录开始返回。
		optional int32        count       = 6;                      /// (可选)指定返回告警记录的总数量。null：返回全部告警数据。
		optional int32        size        = 7;                      /// (可选)指定每次返回的告警记录数量。null：1次返回全部告警记录。
	}

	/** 获取设备诊断日志命令的消息定义。对应ChargeLink公司的Protobuf协议V2版的GetDiagnosticsReq消息。*/
	message CmdTriggerDiags {
		required string upload_url     = 1;                         /// (必填)日志上传FTP服务器地址。
		optional uint32 retry_count    = 2;                         /// (可选)日志上传失败重试次数。
		optional uint32 retry_interval = 3;                         /// (可选)日志上传失败重试间隔时间。单位：1秒。
		optional int64  start_time     = 4;                         /// (可选)指定返回日志记录的开始时间(北京时间的毫秒时间戳)。单位：毫秒。null：从最早的日志记录开始返回。
		optional int64  stop_time      = 5;                         /// (可选)指定返回日志记录的结束时间(北京时间的毫秒时间戳)。单位：毫秒。null：返回后续全部日志记录。
	}

	/** 触发设备消息重发命令的消息定义。对应ChargeLink公司的Protobuf协议V2版的TriggerMessageReq消息。*/
	message CmdTriggerMessage {
		required MessageType request_msg = 1;                       /// (必填)请求重发的消息代码。

		enum MessageType {
			MESSAGE_BOOT_NOTIFICATION_REQ               = 0x01;     /// 启动通知的请求消息。
			MESSAGE_HEARTBEAT_REQ                       = 0x02;     /// 心跳的请求消息。
			MESSAGE_FIRMWARE_STATUS_NOTIFICATION_REQ    = 0x07;     /// 远程升级状态通知的请求消息。
			MESSAGE_DIAGNOSTICS_STATUS_NOTIFICATION_REQ = 0x09;     /// 诊断日志状态通知的请求消息。
			MESSAGE_SYSTEM_TELEMETRY_REQ                = 0x21;     /// 系统信息遥测的请求消息。
			MESSAGE_DEVICE_REPORT_REQ                   = 0x22;     /// 设备报告的请求消息。
			MESSAGE_WARNING_LIST_REQ                    = 0x33;     /// 上报告警记录请求消息。
		}
	}
}

/** ChargeLink公司的车位地锁/车位传感器设备的命令应答的消息定义。*/
message ResultParkingCL_v2 {
	oneof                    result {                               /// (必填)ChargeLink公司的车位地锁/车位传感器的命令响应，可选类型如下：
		ResultResponseStatus remote_control   = 5;                  ///    设备远程控制的执行结果。对应CmdRemoteControl命令请求。
		ResultSetConfig      set_config       = 10;                 ///    设置设备配置的执行结果。对应CmdSetConfig命令请求。
		ResultGetConfig      get_config       = 11;                 ///    获取设备配置的执行结果。对应CmdGetConfig命令请求。
		ResultTriggerList    trigger_warnings = 21;                 ///    获取设备告警记录的执行结果。对应CmdTriggerWarns命令请求。
		ResultTriggerDiags   trigger_diags    = 22;                 ///    获取设备诊断日志的执行结果。对应CmdTriggerDiags命令请求。
	}

	/** 通用终端命令的应答消息的常量定义。对应ChargeLink公司的Protobuf协议V1版的RequestStop.Confirm、Reset.Confirm、ParkLock.Confirm、SetPricing.Confirm消息/V2版的RemoteStopTransactionConf、CancelReservationConf、RemoteControlConf、SetPriceConf消息。*/
	enum ResultResponseStatus {
		RESULT_RESPONSE_ACCEPTED  = 0;                              /// 命令成功。
		RESULT_RESPONSE_REJECTED  = 1;                              /// 命令被拒绝。
		RESULT_RESPONSE_UNSUPPORT = 2;                              /// 命令不支持。
		RESULT_RESPONSE_INVALID   = 3;                              /// 命令无效参数。
	}

	/** 设置设备配置的应答消息的常量定义。对应ChargeLink公司的Protobuf协议V1版的SetConfiguration.Confirm消息/V2版的ChangeConfigurationConf消息。*/
	enum ResultSetConfig {
		RESULT_SET_CONFIG_ACCEPTED   = 0;                           /// 参数支持且设置成功。
		RESULT_SET_CONFIG_REJECTED   = 1;                           /// 参数支持但设置失败。
		RESULT_SET_CONFIG_NEEDREBOOT = 2;                           /// 参数支持且设置成功。但需要重启生效。
		RESULT_SET_CONFIG_UNSUPPORT  = 3;                           /// 参数不支持。
	}

	/** 获取设备配置的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V2版的GetConfigurationConf消息。*/
	message ResultGetConfig {
		map<string, string> config_list = 1;                        /// (必填)设置的配置参数值列表。格式为：参数名称->参数值。其中：参数名称为ConfigName的值对应的字符串。
	}

	/** 获取设备告警记录的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V2版的GetWarningConf消息。*/
	message ResultTriggerList {
		optional int32 total_count = 1;                             /// (可选)返回的总记录数。
	}

	/** 获取设备诊断日志的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V2版的GetDiagnosticsConf消息。*/
	message ResultTriggerDiags {
		optional string file_name = 1;                              /// (可选)上传的日志文件名。
	}
}
