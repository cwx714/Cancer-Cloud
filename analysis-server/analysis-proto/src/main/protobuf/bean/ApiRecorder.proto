/**
 * 行车记录仪/后视镜设备的API接口请求/应答的消息定义。
 */

syntax = "proto2";

package ChargerLink.Gateway;
option java_package     = "com.chargerlink.gateway.bean.api";
option go_package       = "com.chargerlink.gateway.bean.api";
option csharp_namespace = "com.chargerlink.gateway.bean.api";
option java_multiple_files = false;

import "bean/EnumBase.proto";

/** Amitek公司的行车记录仪/后视镜设备的命令请求的消息定义。*/
message CommandRecorderAMI_v1 {
	oneof              command {                                    /// (必填)Amitek公司的行车记录仪/后视镜设备的命令请求。可选类型如下：
		ConfigStatus   config_status   = 4;                         ///    修改终端设备的配置参数。终端设备不返回命令应答。
		BindStatus     bind_status     = 5;                         ///    用户绑定/解绑状态通知。终端设备不返回命令应答。
		GroupStatus    group_status    = 6;                         ///    群组加入/退出状态通知。终端设备不返回命令应答。
		ChargeStatus   charge_status   = 7;                         ///    设备SIM卡计费信息通知。终端设备不返回命令应答。
		SystemRequest  system_request  = 8;                         ///    系统操作请求。终端设备返回命令应答。
		NaviRequest    navi_request    = 9;                         ///    导航设置请求。终端设备返回命令应答。
		TrackRequest   track_request   = 10;                        ///    进入/退出跟踪模式请求。终端设备返回命令应答。
		MonitorRequest monitor_request = 11;                        ///    上传监控请求。终端设备返回命令应答。
	}

	/** 终端设备配置参数的消息定义。*/
	message ConfigStatus {
		optional string     mqttUrl     = 1;                        /// (必填)MQTT服务器的URL。如："tcp://mqtt.server.com:1883"
		optional string     mqttTopic   = 2;                        /// (必填)MQTT上报消息的Topic。
		optional string     wxStatusUrl = 3;                        /// (必填)查询微信绑定状态的HTTP服务器的URL。
		optional string     wxQrCodeUrl = 4;                        /// (必填)返回微信绑定二维码的HTTP服务器的URL。
		optional bool       adjustTime  = 5;                        /// (可选)设备是否需要校准时间。当服务器发现设备上时间可能错误时，需要设置该字段为true，以便设备根据服务器时间校准设备时间。
		optional BindStatus bindStatus  = 6;                        /// (可选)设备当前绑定的用户信息。只有当设备已绑定用户时，此字段才存在。
		optional OtaStatus  otaStatus   = 7;                        /// (可选)OTA版本升级信息。只有当存在升级包时，此字段才存在。
		repeated UserConfig userConfig  = 8;                        /// (可选)设备自定义配置信息。

		/** OTA升级信息的消息定义。*/
		message OtaStatus {
			optional string version     = 1;                        /// (必填)软件版本号。
			optional string updateInfo  = 2;                        /// (必填)软件更新信息。
			optional string downloadUrl = 3;                        /// (必填)更新下载地址。
			optional uint64 fileSize    = 4;                        /// (必填)更新文件大小。
			optional string fileMd5     = 5;                        /// (可选)更新文件MD5校验。
			optional bool   forceUpdate = 6;                        /// (可选)是否强制升级。缺省为false。
		}

		/** 设备自定义配置信息的消息定义。*/
		message UserConfig {
			required string name  = 1;                              /// (必填)设置的名称
			required string value = 2;                              /// (必填)设置的参数
		}
	}

	/** 用户绑定/解绑状态通知消息的消息定义。*/
	message BindStatus {
		optional bool     bindStatus = 1;                           /// (必填)用户绑定状态。true为已绑定，false为未绑定。
		optional uint64   timestamp  = 2;                           /// (可选)绑定/解绑时间。若用户已绑定,则为绑定时间；若已解绑,则为解绑时间；若未绑定，则为空。
		optional string   phone      = 3;                           /// (可选)绑定用户的手机号码。如果不能获取到，则为空。
		optional string   email      = 4;                           /// (可选)绑定用户的邮箱。如果不能获取到，则为空。
		optional UserInfo qq         = 5;                           /// (可选)绑定用户的QQ信息。如果不能获取到，则为空。
		optional UserInfo weixin     = 6;                           /// (可选)绑定用户的微信信息。如果不能获取到，则为空。
		optional UserInfo weibo      = 7;                           /// (可选)绑定用户的微博信息。如果不能获取到，则为空。
		optional UserInfo other      = 8;                           /// (可选)绑定用户的其他信息。如果不能获取到，则为空。

		/** 用户信息的消息定义。*/
		message UserInfo {
			optional string openId    = 1;                          /// (可选)公开API返回的用户id。如果不能获取到，则为空。
			optional string nickName  = 2;                          /// (可选)用户的昵称。如果不能获取到，则为空。
			optional string avatarUrl = 3;                          /// (可选)用户头像的URL。如果不能获取到，则为空。
			optional bytes  avatarPic = 4;                          /// (可选)用户头像的数据。如果不能获取到，则为空。
			optional string sex       = 5;                          /// (可选)用户的性别，'M'为男性，'F'为女性。如果不能获取到，则为空。
			optional string location  = 6;                          /// (可选)用户所在的区域。如果不能获取到，则为空。
			optional string language  = 7;                          /// (可选)用户使用的语言。如果不能获取到，则为空。
		}
	}

	/** 群组加入/退出状态通知的消息定义。*/
	message GroupStatus {
		optional bool   groupStatus = 1;                            /// (必填)群组状态。true为加入群组，false为退出群组。
		optional string groupId     = 2;                            /// (可选)群组的id。
		optional string groupName   = 3;                            /// (必填)群组的名称。
	}

	/** 设备SIM卡计费信息通知的消息定义。*/
	message ChargeStatus {
		optional bool   monthAlert = 1;                             /// (可选)本月流量是否告警。缺省为false。
		optional uint32 monthUsage = 2;                             /// (必填)本月使用流量。单位：KB。
		optional uint32 monthLeft  = 3;                             /// (必填)本月剩余流量。单位：KB。
		optional bool   totalAlert = 4;                             /// (可选)累积流量是否告警。缺省为false。
		optional uint32 totalUsage = 5;                             /// (必填)累积使用流量。单位：KB。
		optional uint32 totalLeft  = 6;                             /// (必填)累积剩余流量。单位：KB。
		optional string chargeInfo = 7;                             /// (必填)套餐情况。
	}

	/** 系统操作请求的消息定义。*/
	message SystemRequest {
		required uint64  requestId   = 1;                           /// (必填)请求消息ID。上行的请求应答消息必须使用此ID。
		required ReqType requestType = 2;                           /// (必填)请求类型。
		repeated string  paramName   = 3;                           /// (可选)请求的参数名称。
		repeated string  paramValue  = 4;                           /// (可选)请求的参数数据。

		/** 系统操作的请求类型的常量定义。*/
		enum ReqType {
			REQ_RESTART    = 0;                                     /// 请求设备软件重启。
			REQ_REBOOT     = 1;                                     /// 请求设备硬件重启。
			REQ_RESTORE    = 2;                                     /// 请求设备恢复出厂设置。
			REQ_SET_VALUE  = 3;                                     /// 请求设置设备参数。
			REQ_GET_VALUE  = 4;                                     /// 请求读取设备参数。
			REQ_SHOW_ALERT = 5;                                     /// 请求显示报警信息。报警内容在paramValue内定义，报警内容显示方式在paramName内定义，缺省由设备决定显示方式。
		}
	}

	/** 导航设置请求的消息定义。*/
	message NaviRequest {
		required uint64   requestId = 1;                            /// (必填)请求消息ID。上行的请求应答消息必须使用此ID。
		optional string   groupName = 2;                            /// (可选)群组名称。如果不是群组导航消息，则为空。
		repeated DestInfo destArray = 3;                            /// (必填)目标点数值。

		/** 导航目标点的消息定义。*/
		message DestInfo {
			optional string address   = 1;                          /// (可选)目标点名称。
			optional double latitude  = 2;                          /// (必填)目标点纬度数据。ddd.ddddd格式，负数：南纬；正数：北纬。
			optional double longitude = 3;                          /// (必填)目标点经度数据。ddd.ddddd格式，负数：西经；正数：东经。
		}
	}

	/** 跟踪模式请求的消息定义。*/
	message TrackRequest {
		required uint64 requestId      = 1;                         /// (必填)请求消息ID。上行的请求应答消息必须使用此ID。
		required bool   enterTrack     = 2;                         /// (必填)是否为进入跟踪模式。true为请求设备进入跟踪模式；false为请求设备退出跟踪模式。
		optional uint32 gatherInterval = 3;                         /// (请求类型为进入跟踪模式时必填)采集时间间隔。单位：秒。如果为退出跟踪请求，则为空。
		optional uint32 reportInterval = 4;                         /// (请求类型为进入跟踪模式时必填)上报时间间隔。单位：秒。如果为退出跟踪请求，则为空。
		oneof           start {                                     /// (必填)请求的启动时间点。可选类型如下：
			uint64      startTime      = 5;                         ///     在指定的时间点进入/退出跟踪模式。格式：北京时间的毫秒时间戳。
			uint32      startInterval  = 6;                         ///     在指定时间后进入/退出跟踪模式。格式：秒。如果<=0，则马上启动。
		}
		oneof           stop {                                      /// (必填)请求的结束时间点。可选类型如下：
			uint64      stopTime       = 7;                         ///     在指定的时间点结束操作。格式：北京时间的毫秒时间戳。
			uint32      stopInterval   = 8;                         ///     在指定时间后结束操作。格式：秒。如果<=0，则永远不结束。
		}
	}

	/** 上传监控请求的消息定义。*/
	message MonitorRequest {
		required uint64     requestId   = 1;                        /// (必填)请求消息ID。上行的请求应答消息必须使用此ID。
		required MediaType  mediaType   = 2;                        /// (必填)请求类型。
		optional int32      requestNum  = 3;                        /// (可选)请求的数量。对应图片，为上传图片数量；对应视频/音频/视频流，为上传视频/音频时间的秒数。
		optional UploadType uploadType  = 4;                        /// (可选)终端上传文件时的上传类型。缺省为：UPLOAD_MONITOR。
		optional uint32     cameraIndex = 5;                        /// (可选)请求视频/视频流时采用的摄像头。缺省为：0。

		/** 请求类型的常量定义。*/
		enum MediaType {
			MEDIA_PHOTO  = 0;                                       /// 请求设备上传图片。
			MEDIA_VIDEO  = 1;                                       /// 请求设备上传视频。
			MEDIA_VOICE  = 2;                                       /// 请求设备上传音频。
			MEDIA_STREAM = 3;                                       /// 请求设备上传视频流。
		}
	}
}

/** Amitek的行车记录仪的命令应答的消息定义。*/
message ResultRecorderAMI_v1 {
	oneof             result {                                      /// (必填)Amitek的行车记录仪的命令应答。可选类型如下：
		RequestResult system_result  = 8;                           ///    系统操作请求的执行结果。对应SystemRequest命令请求。
		RequestResult navi_result    = 9;                           ///    导航设置请求的执行结果。对应NaviRequest等命令请求。
		RequestResult track_result   = 10;                          ///    跟踪模式请求的执行结果。对应TrackRequest等命令请求。
		MonitorResult monitor_result = 11;                          ///    上传监控请求的执行结果。对应MonitorRequest命令请求。
	}

	/** 下行请求执行应答的消息定义。*/
	message RequestResult {
		required uint64 requestId  = 1;                             /// (必填)请求消息的ID。必须跟对应的下发请求消息的ID一致。
		optional int32  resultCode = 2;                             /// (必填)请求结果代码。0：成功，其他：错误代码。
		optional string resultMsg  = 3;                             /// (可选)请求结果描述。
		repeated string paramName  = 4;                             /// (可选)返回的参数名称。
		repeated string paramValue = 5;                             /// (可选)返回的参数数据。
	}

	/** 上传监控请求应答的消息定义。*/
	message MonitorResult {
		required uint64     requestId  = 1;                         /// (必填)请求消息的ID。必须跟对应的下发请求消息的ID一致。
		required UploadType uploadType = 2;                         /// (必填)上传类型。
		optional string     fileType   = 3;                         /// (可选)媒体文件类型。使用文件名后缀，以区别文件类型，如："jpg"。只有在预先约定好文件类型的情况下，此字段才可为空。
		required uint64     fileLength = 4;                         /// (必填)媒体文件总长度。
		required uint64     offset     = 5;                         /// (必填)当前内容的偏移量。
		required bytes      content    = 6;                         /// (必填)当前内容的数据。
	}
}
