/**
 * 通用常量定义。包括：设备类型/DeviceType、实时消息类型/DataType、报警消息类型/AlarmType、事件消息类型/EventType等。
 */

syntax = "proto2";

package ChargerLink.Gateway;
option java_package     = "com.chargerlink.gateway.bean.common";
option go_package       = "com.chargerlink.gateway.bean.common";
option csharp_namespace = "com.chargerlink.gateway.bean.common";
option java_multiple_files = false;

/** 终端设备的设备类型的常量定义。*/
enum DeviceType {
	DEVICE_VEHICLE_GB_V1   = 100;                                   /// 基于国标GB/T32960-2016协议的电动汽车TBOX设备。
	DEVICE_RECORDER_AMI_V1 = 200;                                   /// Amitek公司基于v1版MQTT协议的行车记录仪/后视镜设备。
	DEVICE_CHARGER_CL_V1   = 300;                                   /// ChargeLink公司基于v1版MQTT协议的充电桩TCU设备。
	DEVICE_CHARGER_CL_V2   = 301;                                   /// ChargeLink公司基于v2版MQTT协议的充电桩TCU设备。
	DEVICE_PARKING_CL_V1   = 400;                                   /// ChargeLink公司基于v1版MQTT协议的车位地锁/车位探测器设备。
	DEVICE_PARKING_CL_V2   = 401;                                   /// ChargeLink公司基于v2版MQTT协议的车位地锁/车位探测器设备。
}

/** 终端设备的实时消息类型的常量定义。*/
enum DataType {
	DATA_VEHICLE          = 0x0100;                                 /// 电动车TBOX设备的实时上报数据。
	DATA_VEHICLE_OVERALL  = 0x0101;                                 /// 电动车TBOX设备的实时上报的整车数据。
	DATA_VEHICLE_DRIVE    = 0x0102;                                 /// 电动车TBOX设备的实时上报的驱动电机数据。
	DATA_VEHICLE_BATTERY  = 0x0104;                                 /// 电动车TBOX设备的实时上报的燃料电池数据。
	DATA_VEHICLE_MOTOR    = 0x0108;                                 /// 电动车TBOX设备的实时上报的发动机数据。
	DATA_VEHICLE_POS      = 0x0110;                                 /// 电动车TBOX设备的实时上报的车辆位置数据。
	DATA_VEHICLE_EXTREME  = 0x0120;                                 /// 电动车TBOX设备的实时上报的极值数据。
	DATA_VEHICLE_ALARM    = 0x0140;                                 /// 电动车TBOX设备的实时上报的报警数据。
	DATA_VEHICLE_BMS      = 0x0180;                                 /// 电动车TBOX设备的实时上报的可充电储能装置电压/温度数据。
	DATA_RECORDER         = 0x0200;                                 /// 行车记录仪/后视镜设备的实时上报数据。
	DATA_RECORDER_POS     = 0x0201;                                 /// 行车记录仪/后视镜设备的实时上报的位置数据。
	DATA_RECORDER_STAT    = 0x0202;                                 /// 行车记录仪/后视镜设备的实时上报的统计数据。
	DATA_CHARGER          = 0x0300;                                 /// 充电桩TCU设备的实时上报数据。
	DATA_CHARGER_EVSE     = 0x0301;                                 /// 充电桩TCU设备的实时上报的充电桩数据。
	DATA_CHARGER_PLUG     = 0x0302;                                 /// 充电桩TCU设备的实时上报的充电枪数据。
	DATA_CHARGER_ORDER    = 0x0304;                                 /// 充电桩TCU设备的实时上报的当前订单数据。
	DATA_CHARGER_CHARGE   = 0x0308;                                 /// 充电桩TCU设备的实时上报的当前充电车辆数据。
	DATA_PARKING_LOCKER   = 0x0401;                                 /// 车位地锁设备的实时上报数据。
	DATA_PARKING_DETECTOR = 0x0402;                                 /// 车位探测器设备的实时上报数据。
}

/** 终端设备的报警消息类型的常量定义。*/
enum AlarmType {
	ALARM_VEHICLE     = 100;                                        /// 电动车TBOX设备的报警消息。
	ALARM_VEHICLE_RA  = 101;                                        /// 接入平台根据电动车TBOX设备的实时上报数据计算出的报警消息。
	ALARM_RECORDER    = 200;                                        /// 行车记录仪/后视镜设备的报警消息。
	ALARM_RECORDER_RA = 201;                                        /// 接入平台根据行车记录仪/后视镜设备的实时上报数据计算出的报警消息。
	ALARM_CHARGER     = 300;                                        /// 充电桩TCU设备的报警消息。
	ALARM_CHARGER_RA  = 301;                                        /// 接入平台根据充电桩TCU设备的实时上报数据计算出的报警消息。
	ALARM_PARKING     = 400;                                        /// 车位地锁/车位传感器设备的报警消息。
	ALARM_PARKING_RA  = 401;                                        /// 接入平台根据车位地锁/车位传感器设备的实时上报数据计算出的报警消息。
}

/** 终端设备的事件消息类型的常量定义。*/
enum EventType {
	option allow_alias = true;
	EVENT_DEVICE_REPORT_LOGIN    = 10;                              /// 通用终端设备登录/登出状态的通知事件。
	EVENT_DEVICE_REPORT_ACTIVITY = 11;                              /// 通用终端设备活跃/离线状态的通知事件。
	EVENT_DEVICE_REPORT_FIRMWARE = 12;                              /// 通用终端设备固件更新状态的通知事件。
	EVENT_DEVICE_REPORT_DIAG     = 13;                              /// 通用终端设备诊断信息状态的通知事件。
	EVENT_DEVICE_CHECK_REGISTER  = 20;                              /// 通用终端设备注册激活的请求事件。
	EVENT_DEVICE_CHECK_CONFIG    = 21;                              /// 通用终端设备查询配置更新的请求事件。
	EVENT_DEVICE_CHECK_SIMINFO   = 22;                              /// 通用终端设备查询SIM卡流量的请求事件。
	EVENT_DEVICE_CHECK_BIND      = 23;                              /// 通用终端设备查询绑定/解绑的请求事件。

	EVENT_RECORDER_TRACK_START   = 200;                             /// 行车记录仪/后视镜设备行程启动的通知事件。
	EVENT_RECORDER_TRACK_STOP    = 201;                             /// 行车记录仪/后视镜设备行程停止的通知事件。
	EVENT_RECORDER_MEDIA_UPLOAD  = 202;                             /// 行车记录仪/后视镜设备媒体文件上传的通知事件。

	EVENT_CHARGER_CHARGE_STARTED = 300;                             /// 充电桩TCU设备充电开始的请求事件。
	EVENT_CHARGER_CHARGE_STOPPED = 301;                             /// 充电桩TCU设备充电停止的请求事件。
	EVENT_CHARGER_CHARGE_AUTH    = 302;                             /// 充电桩TCU设备充电鉴权的请求事件。
	EVENT_CHARGER_CHARGE_PROCESS = 303;                             /// 充电桩TCU设备充电过程的请求事件。
	EVENT_CHARGER_ORDER_LIST     = 304;                             /// 充电桩TCU设备充电订单上传的通知事件。

	EVENT_PARKING_LOCKER_UNLOCK  = 400;                             /// 车位地锁设备解锁的通知事件。
	EVENT_PARKING_LOCKER_LOCK    = 401;                             /// 车位地锁设备上锁的通知事件。
	EVENT_PARKING_DETECTOR_FREE  = 410;                             /// 车位探测器设备空闲的通知事件。
	EVENT_PARKING_DETECTOR_USED  = 411;                             /// 车位探测器设备占用的通知事件。

    // 重复的、定义范围的常量值定义需要放在最后。
	EVENT_DEVICE_FIRST           = 10;                              /// 通用终端设备通用事件消息的开始。
	EVENT_DEVICE_LAST            = 99;                              /// 通用终端设备通用事件消息的结束。
	EVENT_VEHICLE_FIRST          = 100;                             /// 电动车TBOX设备事件消息的开始。
	EVENT_VEHICLE_LAST           = 199;                             /// 电动车TBOX设备事件消息的结束。
	EVENT_RECORDER_FIRST         = 200;                             /// 行车记录仪/后视镜设备事件消息的开始。
	EVENT_RECORDER_LAST          = 299;                             /// 行车记录仪/后视镜设备事件消息的结束。
	EVENT_CHARGER_FIRST          = 300;                             /// 充电桩TCU设备事件消息的开始。
	EVENT_CHARGER_LAST           = 399;                             /// 充电桩TCU设备事件消息的结束。
	EVENT_PARKING_FIRST          = 400;                             /// 车位地锁/车位探测器设备事件消息的开始。
	EVENT_PARKING_LAST           = 499;                             /// 车位地锁/车位探测器设备事件消息的结束。
}

/** 终端设备的文件上传类型的常量定义。*/
enum UploadType {
	UPLOAD_TRACK   = 0;                                             /// 行程结束图片。
	UPLOAD_SHARE   = 1;                                             /// 媒体分享。
	UPLOAD_MONITOR = 2;                                             /// 监控上传。
	UPLOAD_ALARM   = 3;                                             /// 报警上传。
	UPLOAD_DIAG    = 10;                                            /// 诊断日志上传。
	UPLOAD_OTHER   = 100;                                           /// 其他上传。
}
