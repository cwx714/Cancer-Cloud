/**
 * 充电桩TCU设备的事件消息/事件应对的消息定义。目前事件消息/事件应答与终端实际上传消息的对应关系如下：
 *
 * 1、EventChgChargeStarted/EVENT_CHARGER_CHARGE_STARTED：
 *
 *    接入平台接收到充电桩TCU设备上传的充电开始通知消息(StartTransaction)会产生此事件消息。
 *
 *    接入平台不会自动发送应答消息到终端设备。充电业务平台必须监听该事件消息，并回复ResultChgChargeStarted的事件应答消息。
 *
 * 2、EventChgChargeStopped/EVENT_CHARGER_CHARGE_STOPPED：
 *
 *    接入平台接收到充电桩TCU设备上传的充电结束通知消息(StopTransaction)会产生此事件消息。
 *
 *    接入平台不会自动发送应答消息到终端设备。充电业务平台必须监听该事件消息，并回复ResultChgChargeStopped的事件应答消息。
 *
 * 3、EventChgChargeAuth/EVENT_CHARGER_CHARGE_AUTH：
 *
 *    接入平台接收到充电桩TCU设备上传的充电鉴权请求消息(Authorize)会产生此事件消息。
 *
 *    接入平台不会自动发送应答消息到终端设备。充电业务平台必须监听该事件消息，并回复ResultChgChargeAuth的事件应答消息。
 *
 * 4、EventChgChargeProcess/EVENT_CHARGER_CHARGE_PROCESS：
 *
 *    接入平台接收到充电桩TCU设备上传的充电过程信息消息(ChargingProcessInfo)会产生此事件消息。
 *
 *    接入平台不会自动发送应答消息到终端设备。充电业务平台必须监听该事件消息，并回复ResultChgChargeProcess的事件应答消息。
 *
 * 5、EventChgOrderList/EVENT_CHARGER_ORDER_LIST：
 *
 *    接入平台接收到充电桩TCU设备上传的离线订单上报消息(TransactionList)会产生此事件消息。
 *
 *    接入平台不会自动发送应答消息到终端设备。充电业务平台必须监听该事件消息，并回复ResultChgOrderList的事件应答消息。
 */

syntax = "proto2";

package ChargerLink.Gateway;
option java_package     = "com.chargerlink.gateway.bean.event";
option go_package       = "com.chargerlink.gateway.bean.event";
option csharp_namespace = "com.chargerlink.gateway.bean.event";
option java_multiple_files = false;

import "bean/DataCharger.proto";

/** 充电桩TCU设备充电开始请求事件的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message EventChgChargeStarted {
	required DataChgOrder order_info = 1;                           /// (必填)当前充电订单信息。
}

/** 充电桩TCU设备充电开始事件应答的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message ResultChgChargeStarted {
	required string      svp_order_id = 1;                          /// (必填)业务系统生成的全局唯一充电订单号。如果请求事件消息中的全局充电订单号为空，则返回业务系统重新生成的全局充电订单号；否则，返回原事件消息中的全局充电订单号。
	optional DataChgAuth auth_status  = 2;                          /// (可选)业务系统返回的鉴权结果。
}

/** 充电桩TCU设备充电停止请求事件的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message EventChgChargeStopped {
	required DataChgOrder order_info = 1;                           /// (必填)当前充电订单信息。
}

/** 充电桩TCU设备充电停止事件应答的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message ResultChgChargeStopped {
	required string      svp_order_id = 1;                          /// (必填)业务系统生成的全局唯一充电订单号。如果请求事件消息中的全局充电订单号为空，则返回业务系统重新生成的全局充电订单号；否则，返回原事件消息中的全局充电订单号。
	optional DataChgAuth auth_status  = 2;                          /// (可选)业务系统返回的鉴权结果。
	optional int32       total_cost   = 3;                          /// (可选)业务系统返回的总费用。
	optional bool        is_charged   = 4;                          /// (可选)业务系统返回的是否已扣费。
}

/** 充电桩TCU设备充电鉴权请求事件的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message EventChgChargeAuth {
	required DataChgUser user_info = 1;                             /// (必填)用户身份识别信息。
	optional uint32      pay_money = 2;                             /// (可选)用户请求扣费金额。单位：0.01元。
	optional uint32      plug_id   = 3;                             /// (可选)充电枪ID(从1开始)。
}

/** 充电桩TCU设备充电鉴权事件应答的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message ResultChgChargeAuth {
	optional DataChgAuth        auth_status  = 1;                   /// (可选)业务系统返回的鉴权结果。
	optional DataChgPriceScheme price_scheme = 2;                   /// (可选)业务系统返回的价格模板。
}

/** 充电桩TCU设备充电过程通知事件的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message EventChgChargeProcess {
	required DataChgOrder  order_info  = 1;                         /// (必填)当前充电订单信息。
	optional DataChgCharge charge_info = 2;                         /// (可选)当前充电车辆信息。
}

/** 充电桩TCU设备充电过程事件应答的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message ResultChgChargeProcess {
	optional DataChgBill bill_info = 1;                             /// (可选)充电计费账单的消费及价格明细。此数据只在平台计费的情况下有效。
}

/** 充电桩TCU设备充电订单上传通知事件的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message EventChgOrderList {
	repeated DataChgOrder order_list = 1;                           /// (必填)充电订单信息列表。
}

/** 充电桩TCU设备充电订单上传事件应答的消息定义。其中：event_id为请求消息的消息头的消息序列号。*/
message ResultChgOrderList {
}
