/**
 * 通用终端设备的事件消息/事件应答的消息定义。目前事件消息/事件应答与终端实际上传消息的对应关系如下：
 *
 * 1、EventDevCheckRegister/EVENT_DEVICE_CHECK_REGISTER：
 *
 *    接入平台接收到终端设备的下列消息会产生此事件消息。
 *
 *    (1)、接收到电动车国标TBOX设备上传的车辆登入消息(0x01)，且设备注册状态为false时。
 *
 *    (2)、接收到ChargeLink公司充电桩TCU设备上传的设备注册消息(DeviceRegistration)。
 *
 *    (3)、接收到Amitek公司行车记录仪/后视镜设备上传的行程开始上报消息(TrackStart)，且设备注册状态为false或设备序列号发生变化。
 *
 *    接入平台不会自动发送应答消息到终端设备。监控平台必须监听该事件消息，并回复ResultDevCheckRegister的事件应答消息。
 *
 *    注：如果设备的唯一ID是在设备注册时由业务平台生成的，则请求消息中的设备ID为空，而应答消息中返回生成的设备ID。
 *
 * 2、EventDevReportLogin/EVENT_DEVICE_REPORT_LOGIN：
 *
 *    接入平台接收到终端设备的下列消息会产生此事件消息。
 *
 *    (1)、接收到电动车国标TBOX设备上传的车辆登入消息(0x01)/车辆登出消息(0x04)。
 *
 *    (2)、接收到ChargeLink公司充电桩TCU设备上传的启动通知消息(BootNotification)。
 *
 *    (3)、接收到Amitek公司行车记录仪/后视镜设备上传的行程开始上报消息(TrackStart)/行程结束上报消息(TrackStop)。
 *
 *    接入平台会自动处理与终端设备的消息应答。监听该事件消息的业务平台，可以根据情况另外调用导入/更新终端设备信息的接口。
 *
 * 3、EventDevReportActivity/EVENT_DEVICE_REPORT_ACTIVITY：
 *
 *    接入平台接收到终端设备的任何上报消息，且设备处于离线状态时，则产生设备在线事件消息；接入平台在指定时间段内未收到终端设备的
 *    任何上报消息，且设备处于在线状态时，则产生设备离线事件消息。
 *
 *    接入平台会自动处理与终端设备的消息应答。监听该事件消息的业务平台，不需要下发任何应答消息。
 *
 * 4、EventDevReportFirmware/EVENT_DEVICE_REPORT_FIRMWARE：
 *
 *    接入平台接收到终端设备的下列消息会产生此事件消息。
 *
 *    (1)、接收到ChargeLink公司充电桩TCU设备上传的远程升级状态通知消息(FirmwareStatusNotifcation)。
 *
 *    接入平台会自动处理与终端设备的消息应答。监听该事件消息的业务平台，不需要下发任何应答消息。
 *
 * 5、EventDevReportDiag/EVENT_DEVICE_REPORT_DIAG：
 *
 *    接入平台接收到终端设备的下列消息会产生此事件消息。
 *
 *    (1)、接收到ChargeLink公司充电桩TCU设备上传的诊断日志状态通知消息(DiagnosticsStatusNotification)。
 *
 *    接入平台会自动处理与终端设备的消息应答。监听该事件消息的业务平台，不需要下发任何应答消息。
 *
 * 6、EventDevCheckConfig/EVENT_DEVICE_CHECK_CONFIG：
 *
 *    接入平台接收到终端设备的下列消息会产生此事件消息。
 *
 *    (1)、接收到电动车国标TBOX设备上传的车辆登入消息(0x01)。
 *
 *    (2)、接收到ChargeLink公司充电桩TCU设备上传的设备报告消息(DeviceReport)。
 *
 *    (3)、接收到Amitek公司行车记录仪/后视镜设备上传的行程开始上报消息(TrackStart)。
 *
 *    接入平台会自动处理与终端设备的消息应答。监听该事件消息的业务平台，可以根据情况另外下发对应设备的修改配置参数命令。
 *
 * 7、EventDevCheckSiminfo/EVENT_DEVICE_CHECK_SIMINFO：
 *
 *    接入平台接收到终端设备的下列消息会产生此事件消息。
 *
 *    (1)、接收到Amitek公司行车记录仪/后视镜设备上传的SIM卡计费查询消息(ChargeCheck)。
 *
 *    接入平台会自动处理与终端设备的消息应答。监听该事件消息的业务平台，可以根据情况另外下发对应设备的SIM卡计费信息通知命令。
 *
 * 8、EventDevCheckBind/EVENT_DEVICE_CHECK_BIND：
 *
 *    接入平台接收到终端设备的下列消息会产生此事件消息。
 *
 *    (1)、接收到Amitek公司行车记录仪/后视镜设备上传的设备绑定/解绑申请消息(BindRequest)。
 *
 *    接入平台会自动处理与终端设备的消息应答。监听该事件消息的业务平台，可以根据情况另外下发对应设备的用户绑定状态通知命令。
 */

syntax = "proto2";

package ChargerLink.Gateway;
option java_package     = "com.chargerlink.gateway.bean.event";
option go_package       = "com.chargerlink.gateway.bean.event";
option csharp_namespace = "com.chargerlink.gateway.bean.event";
option java_multiple_files = false;

import "bean/DeviceBase.proto";
import "google/protobuf/any.proto";

/** 终端设备注册激活请求事件的消息定义。*/
message EventDevCheckRegister {
	required DeviceInfo device_info   = 1;                          /// (必填)注册激活的设备信息。其中：regist_status必须为false；如果device_id为空串，则表示业务平台必须在应答消息中返回新生成的唯一设备ID。
	optional string     activate_code = 2;                          /// (可选)设备激活验证码。如果为空，则表示业务平台不通过激活码验证激活的设备。
}

/** 终端设备注册激活事件应答的消息定义。*/
message ResultDevCheckRegister {
	optional DeviceInfo device_info = 1;                          /// (必填)注册激活的设备信息。null或register_status为false：注册激活失败。如果注册成功且请求消息的device_id为空串，则业务平台必须在应答消息中返回新生成的唯一设备ID。
	optional string     error_msg   = 2;                          /// (可选)注册激活的失败原因。
	optional string     login_code  = 3;                          /// (可选)设备登录验证码。
}

/** 通用终端设备登录/登出状态通知事件的消息定义。*/
message EventDevReportLogin {
	required DeviceInfo device_info = 1;                            /// (必填)登录/登出的设备信息。登录通知：regist_status=true/online_status=true，登出通知：regist_status=true/online_status=false。
}

/** 通用终端设备活跃/离线状态通知事件的消息定义。*/
message EventDevReportActivity {
	required DeviceInfo device_info = 1;                            /// (必填)活跃/离线的设备信息。活跃通知：online_status=true，离线通知：online_status=false。
}

/** 通用终端设备固件更新状态通知事件的消息定义。*/
message EventDevReportFirmware {
	required FirmwareStatus firmware_status = 1;                    /// (必填)固件更新状态。

	/** 固件更新状态的常量定义。*/
	enum FirmwareStatus {
		FIRMWARE_STATUS_IDLE            = 0;                        /// 未进行升级任务。
		FIRMWARE_STATUS_ACCEPTED        = 1;                        /// 升级指令已接受。
		FIRMWARE_STATUS_DOWNLOADING     = 2;                        /// 正在下载文件。
		FIRMWARE_STATUS_DOWNLOADED      = 3;                        /// 文件下载成功。
		FIRMWARE_STATUS_DOWNLOAD_FAILED = 4;                        /// 文件下载失败。
		FIRMWARE_STATUS_INSTALL_FAILED  = 5;                        /// 固件升级失败。
		FIRMWARE_STATUS_INSTALLING      = 6;                        /// 固件升级中。
		FIRMWARE_STATUS_INSTALLED       = 7;                        /// 固件升级成功。
	}
}

/** 通用终端设备诊断信息状态通知事件的消息定义。*/
message EventDevReportDiag {
	required UploadStatus upload_status = 1;                        /// (必填)日志上传状态。

	/** 日志上传状态的常量定义。*/
	enum UploadStatus {
		UPLOAD_STATUS_IDLE          = 0;                            /// 未进行日志上传任务状态。
		UPLOAD_STATUS_ACCEPTED      = 1;                            /// 上传日志指令已接受。
		UPLOAD_STATUS_UPLOADING     = 2;                            /// 正在上传日志。
		UPLOAD_STATUS_UPLOADED      = 3;                            /// 日志上传成功。
		UPLOAD_STATUS_UPLOAD_FAILED = 4;                            /// 日志上传失败。
	}
}

/** 通用终端设备查询配置更新请求事件的消息定义。*/
message EventDevCheckConfig {
	required DeviceInfo          device_info = 1;                   /// (必填)查询的设备信息。
	map<string, string>          config_info = 2;                   /// (可选)设备的配置信息。
	optional google.protobuf.Any extend_data = 100;                 /// (可选)设备的扩展信息。
}

/** 通用终端设备查询SIM卡流量请求事件的消息定义。*/
message EventDevCheckSiminfo {
	optional string msisdn = 1;                                     /// (可选)设备SIM卡的手机号(去掉+86前缀)。
	optional string iccid  = 2;                                     /// (可选)设备SIM卡的ICCID号。
	optional string imsi   = 3;                                     /// (可选)设备SIM卡的IMSI号。
}

/** 通用终端设备查询绑定/解绑请求事件的消息定义。*/
message EventDevCheckBind {
	required BindType type   = 1;                                   /// (必填)绑定操作类型。
	optional string   phone  = 2;                                   /// (可选)绑定用户的手机号码。
	optional string   email  = 3;                                   /// (可选)绑定用户的邮箱。
	optional string   qq     = 4;                                   /// (可选)绑定用户的QQ号码。
	optional string   weixin = 5;                                   /// (可选)绑定用户的微信号。
	optional string   weibo  = 6;                                   /// (可选)绑定用户的微博号。
	optional string   other  = 7;                                   /// (可选)绑定用户的其他信息。

	/** 绑定操作类型的常量定义。*/
	enum BindType {
		BIND_REQUEST = 0;                                           /// 绑定请求。
		UNBIND_USER  = 1;                                           /// 手动解绑请求。
		UNBIND_RESET = 2;                                           /// 设备重置解绑请求。
	}
}
