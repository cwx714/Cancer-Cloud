/**
 * 充电桩TCU设备的通用常量定义。
 */

syntax = "proto2";

package ChargerLink.Gateway;
option java_package     = "com.chargerlink.gateway.bean.common";
option go_package       = "com.chargerlink.gateway.bean.common";
option csharp_namespace = "com.chargerlink.gateway.bean.common";
option java_multiple_files = false;

/** 充电桩设备的组件类型的常量定义。*/
enum ChgCompType {
	CHG_COMP_NONE  = 0;                                             /// 未分类。
	CHG_COMP_SYS   = 1;                                             /// 系统组件。
	CHG_COMP_TCU   = 2;                                             /// 计费控制单元。
	CHG_COMP_CCM   = 3;                                             /// 充电控制单元。
	CHG_COMP_BMS   = 4;                                             /// 电动汽车BMS。
	CHG_COMP_PKL   = 5;                                             /// 智能车位锁。
	CHG_COMP_PKD   = 6;                                             /// 智能车位探测器。
	CHG_COMP_METER = 7;                                             /// 电表。
	CHG_COMP_LCD   = 8;                                             /// 显示屏。
	CHG_COMP_CARD  = 9;                                             /// 读卡器。
	CHG_COMP_FAN   = 10;                                            /// 系统风扇。
	CHG_COMP_CONN  = 11;                                            /// 充电接口。
	CHG_COMP_PSM   = 12;                                            /// 电源模块。
}

/** 充电桩设备的充电枪类型的常量定义。*/
enum ChgPlugType {
	CHG_PLUG_UNKNOWN    = 0;                                        /// 未知类型。
	CHG_PLUG_AC_SOCKET  = 1;                                        /// 交流充电插座。
	CHG_PLUG_AC_GUN     = 2;                                        /// 交流充电枪。
	CHG_PLUG_DC_GUN     = 3;                                        /// 直流充电枪。
	CHG_PLUG_TRIANGLE   = 4;                                        /// 三角插座。
	CHG_PLUG_DISCHARGER = 100;                                      /// 放电枪。
}

/** 充电桩设备的充电桩工作状态的常量定义。*/
enum ChgEvseStatus {
	CHG_EVSE_STATUS_WORKING  = 0;                                   /// 充电桩正常工作状态。
	CHG_EVSE_STATUS_BOOTING  = 10;                                  /// 充电桩正在启动状态。
	CHG_EVSE_STATUS_OFFLINE  = 100;                                 /// 充电桩与后台的连接中断，状态未知。
	CHG_EVSE_STATUS_MAINTAIN = 101;                                 /// 充电桩维护或调试状态。
	CHG_EVSE_STATUS_DISABLED = 102;                                 /// 充电桩禁用状态。
	CHG_EVSE_STATUS_FAILURE  = 110;                                 /// 充电桩故障状态。
	CHG_EVSE_STATUS_POWEROFF = 200;                                 /// 充电桩处于关机状态。
}

/** 充电桩设备的充电枪工作状态的常量定义。*/
enum ChgPlugStatus {
	CHG_PLUG_STATUS_IDLE        = 0;                                /// 充电枪空闲状态。
	CHG_PLUG_STATUS_RESERVED    = 10;                               /// 充电枪被占⽤状态：处于被预约状态。
	CHG_PLUG_STATUS_PREPARING   = 11;                               /// 充电枪被占⽤状态：准备开始充电/放电。
	CHG_PLUG_STATUS_WAIT_EVSE   = 12;                               /// 充电枪被占⽤状态：充电接口未处于充电准备就绪状态。
	CHG_PLUG_STATUS_WAIT_CAR    = 13;                               /// 充电枪被占⽤状态：电动汽车未处于充电准备就绪状态。
	CHG_PLUG_STATUS_CHARGING    = 20;                               /// 充电枪被占⽤状态：正在充电。
	CHG_PLUG_STATUS_DISCHARGING = 21;                               /// 充电枪被占⽤状态：正在放电。
	CHG_PLUG_STATUS_PAUSED      = 22;                               /// 充电枪被占⽤状态：正在暂停充电/放电。
	CHG_PLUG_STATUS_STOPPING    = 30;                               /// 充电枪被占⽤状态：正在停止充电/放电。
	CHG_PLUG_STATUS_STOPPED     = 31;                               /// 充电枪被占⽤状态：充电/放电完成，但充电接口还处于占用状态。
	CHG_PLUG_STATUS_OFFLINE     = 100;                              /// 充电枪与TCU的连接中断。
	CHG_PLUG_STATUS_MAINTAIN    = 101;                              /// 充电枪维护或调试状态。
	CHG_PLUG_STATUS_DISABLED    = 102;                              /// 充电枪禁用状态。
	CHG_PLUG_STATUS_FAILURE     = 110;                              /// 充电枪故障状态。
}

/** 充电桩设备的充电服务类型的常量定义。*/
enum ChgServiceType {
	CHG_SERVICE_CHARGE_AUTO    = 0;                                 /// 自动充满充电模式。
	CHG_SERVICE_CHARGE_ELEC    = 1;                                 /// 预设电量充电模式。
	CHG_SERVICE_CHARGE_TIME    = 2;                                 /// 预设时间充电模式。
	CHG_SERVICE_CHARGE_MONEY   = 3;                                 /// 预设金额充电模式。
	CHG_SERVICE_DISCHARGE_ELEC = 4;                                 /// 预设电量放电模式。
	CHG_SERVICE_DISCHARGE_AUTO = 5;                                 /// 自动放电模式。
}

/** 充电桩设备的充电启动类型的常量定义。*/
enum ChgStartType {
	CHG_START_LOCAL_PLUG   = 1;                                     /// 本地即插即充启动。
	CHG_START_LOCAL_ADMIN  = 2;                                     /// 本地管理员启动。
	CHG_START_LOCAL_CARD   = 3;                                     /// 本地鉴权卡刷卡启动。
	CHG_START_ONLINE_CARD  = 4;                                     /// 在线鉴权卡刷卡启动。
	CHG_START_LOCAL_WALLET = 5;                                     /// 本地钱包卡刷卡启动。
	CHG_START_LOCAL_PLC    = 6;                                     /// 本地载波识别鉴权启动。
	CHG_START_ONLINE_PLC   = 7;                                     /// 在线载波识别鉴权启动。
	CHG_START_LOCAL_VIN    = 8;                                     /// 本地车辆VIN号鉴权启动。
	CHG_START_ONLINE_VIN   = 9;                                     /// 在线车辆VIN号鉴权启动。
	CHG_START_LOCAL_BT     = 10;                                    /// 本地通过蓝牙鉴权启动。
	CHG_START_LOACL_PIN    = 11;                                    /// 本地通过输入校验码启动。
	CHG_START_REMOTE_ADMIN = 12;                                    /// 远程管理员启动。
	CHG_START_REMOTE_USER  = 13;                                    /// 远程用户启动。
}

/** 充电桩设备的充电结束原因的常量定义。*/
enum ChgStopType {
	CHG_STOP_NORMAL         = 0;                                    /// 按照充电服务类型正常停止充电。
	CHG_STOP_LOCAL_CARD     = 1;                                    /// 用户本地刷卡停止充电。
	CHG_STOP_LOCAL_PIN      = 2;                                    /// 用户本地输入校验码停止充电。
	CHG_STOP_REMOTE_USER    = 3;                                    /// 用户远程结束充电。
	CHG_STOP_REMOTE_ADMIN   = 4;                                    /// 管理员远程结束充电。
	CHG_STOP_EMERGENCY_STOP = 5;                                    /// 用户本地按下急停停止充电。
	CHG_STOP_EV_DISCONNECT  = 6;                                    /// 检测到枪头断开而停止充电
	CHG_STOP_REBOOT         = 7;                                    /// 检测到系统重启而停止充电。
	CHG_STOP_OFFLINE        = 8;                                    /// 检测到充电桩断线而停止充电。注：只针对不允许离线充电的充电桩。
	CHG_STOP_POWER_LOSS     = 9;                                    /// 检测到充电桩掉电而停止充电。
	CHG_STOP_SYSTEM_FAULT   = 10;                                   /// 检测到充电桩故障而停止充电。
	CHG_STOP_BMS_FAULT      = 11;                                   /// 检测到电动车故障而停止充电。
	CHG_STOP_LOW_BALANCE    = 12;                                   /// 检测到余额不足而停止充电。
	CHG_STOP_OTHER          = 0xff;                                 /// 其它原因停止充电。
}

/** 充电桩设备的用户身份类型的常量定义。*/
enum ChgUserType {
	option allow_alias = true;
	CHG_USER_CHARGE_CARD    = 1;                                    /// 充电网充电卡用户。
	CHG_USER_BANK_CARD      = 2;                                    /// 授权的银行卡号。
	CHG_USER_PHONE_NUMBER   = 3;                                    /// 电话号码授权用户。
	CHG_USER_APP            = 4;                                    /// 手机App用户。
	CHG_USER_WECHAT         = 5;                                    /// 微信扫描用户。
	CHG_USER_BLUETOOTH      = 6;                                    /// 蓝牙验证用户。
	CHG_USER_PLUG           = 7;                                    /// 即插即充用户。

	CHG_USER_SHANGHAI_BUS   = 10000;                                /// 上海公交卡用户。卡端扣费。
	CHG_USER_FENXI_CPU_CARD = 10001;                                /// 汾西场站卡用户。卡端扣费。

	// 重复的、定义范围的常量值定义需要放在最后。
	CHG_USER_WALLET_FIRST   = 10000;                                /// 电子钱包卡类型的开始。
	CHG_USER_WALLET_LAST    = 19999;                                /// 电子钱包卡类型的结束。
}

/** 用户账户鉴权结果的常量定义。*/
enum ChgAuthStatus {
	AUTH_SUCCESS        = 0;                                        /// 鉴权通过。允许用户充电。
	AUTH_ERROR_REFUSED  = 1;                                        /// 鉴权被拒绝。不允许用户充电。
	AUTH_ERROR_EXPIRED  = 2;                                        /// 用户账户过期。不允许用户充电。
	AUTH_ERROR_INVALID  = 3;                                        /// 用户账户无效。不允许用户充电。
	AUTH_ERROR_CONFLICT = 4;                                        /// 用户账户有未结算的订单。不允许用户充电。
	AUTH_ERROR_BALANCE  = 5;                                        /// 用户账户余额不足。不允许用户充电。
	AUTH_ERROR_PASSWORD = 6;                                        /// 用户密码错误。不允许用户充电。
}

/** 充电桩设备的报警等级的常量定义。*/
enum ChgAlarmLevel {
	CHG_ALARM_LEVEL_CRITICAL = 0;                                   /// 系统严重故障，系统不能工作了。
	CHG_ALARM_LEVEL_ALERT    = 1;                                   /// 故障，需要立即中止本次充电，不影响下次充电。
	CHG_ALARM_LEVEL_WARNING  = 2;                                   /// 系统警告，不影响充电。
	CHG_ALARM_LEVEL_NOTICE   = 3;                                   /// 事件通知。
}

/** 充电桩设备的报警代码的常量定义。*/
enum ChgAlarmCode {
	option allow_alias = true;
	CHG_ALARM_SYS_STORAGE_FULL         = 100;                       /// 存储器已满。
	CHG_ALARM_SYS_COMM_FAULT           = 101;                       /// 通信模块故障。
	CHG_ALARM_SYS_SIM_FAULT            = 102;                       /// SIM卡异常。
	CHG_ALARM_SYS_DIAL_FAULT           = 103;                       /// 拨号异常。
	CHG_ALARM_SYS_CONNECT_FAULT        = 104;                       /// 连接服务器失败。
	CHG_ALARM_SYS_CONNECT_LOST         = 105;                       /// 与服务器通讯中断。
	CHG_ALARM_SYS_POWER_FAULT          = 106;                       /// 系统掉电。

	CHG_ALARM_METER_FAULT              = 107;                       /// 电表通信故障。
	CHG_ALARM_CARD_FAULT               = 108;                       /// 读卡器通信故障。
	CHG_ALARM_LCD_FAULT                = 109;                       /// 触摸屏故障。

	CHG_Alarm_TCU_SOCKET_FAULT         = 110;                       /// 进程间socket故障
	CHG_ALARM_TCU_CPU_HIGH_FAULT       = 111;                       /// Cpu占有率过高(90%)
	CHG_ALARM_TCU_MEM_LOW_FAULT        = 112;                       /// 内存过低(10%)

	CHG_ALARM_CCM_EMERGENCY_FAULT      = 300;                       /// 紧急停机。
	CHG_ALARM_CCM_LOCK_FAULT           = 301;                       /// 电子锁故障。
	CHG_ALARM_CCM_BREAKER_FAULT        = 302;                       /// 交流断路器故障。
	CHG_ALARM_CCM_SPD_FAULT            = 303;                       /// 避雷器故障。
	CHG_ALARM_CCM_SMOG_FAULT           = 304;                       /// 烟雾告警。
	CHG_ALARM_CCM_DOOR_FAULT           = 305;                       /// 门磁告警。
	CHG_ALARM_CCM_WATER_FAULT          = 306;                       /// 水浸告警。
	CHG_ALARM_CCM_DC_CONTACTOR_FAULT   = 307;                       /// 直流母线接触器故障。
	CHG_ALARM_CCM_DC_FUSE_FAULT        = 308;                       /// 直流母线输出熔断器故障。
	CHG_ALARM_CCM_INSULATION_MODULE    = 309;                       /// 绝缘模块故障。
	CHG_ALARM_CCM_INSULATION_CHECK     = 310;                       /// 绝缘检测故障。
	CHG_ALARM_CCM_FAN_FAULT            = 311;                       /// 系统风扇故障。
	CHG_ALARM_CCM_CC1_FAULT            = 312;                       /// CC1异常(充电中车辆控制引导异常)。
	CHG_ALARM_CCM_OVER_TEMP_WARN       = 313;                       /// 充电桩过温告警。
	CHG_ALARM_CCM_PLUG_OVER_TEMP_FAULT = 314;                       /// 充电接口过温故障。
	CHG_ALARM_CCM_GUN_HOLDER_FAULT     = 315;                       /// 充电枪未归位。
	CHG_ALARM_CCM_INPUT_UNDER_VOL      = 316;                       /// 输入电压欠压。
	CHG_ALARM_CCM_INPUT_OVER_VOL       = 317;                       /// 输入电压过压。
	CHG_ALARM_CCM_ASSIST_FAULT         = 318;                       /// 辅助电源异常。
	CHG_ALARM_CCM_BLEED_TIMEOUT        = 319;                       /// 泄放超时。
	CHG_ALARM_CCM_SWITCH_FAULT         = 320;                       /// 投切开关异常。
	CHG_ALARM_CCM_OUPUT_UNDER_VOL      = 321;                       /// 直流母线输出欠压。
	CHG_ALARM_CCM_OUTPUT_OVER_VOL      = 322;                       /// 直流母线输出过压。
	CHG_ALARM_CCM_OUTPUT_OVER_CUR      = 323;                       /// 直流母线输出过流。
	CHG_ALARM_CCM_INSULATION_WARN      = 324;                       /// 绝缘监测告警。
	CHG_ALARM_CCM_DC_ADHESION_FAULT    = 325;                       /// 直流输出接触器粘连故障。
	CHG_ALARM_CCM_PLUG_OVER_TEMP_WARN  = 326;                       /// 充电接口过温告警。
	CHG_ALARM_CCM_OVER_TEMP_FAULT      = 327;                       /// 充电桩过温故障。
	CHG_ALARM_CCM_AC_CONTACTOR_FAULT   = 328;                       /// 交流输入接触器故障。
	CHG_ALARM_CCM_AC_ADHESION_FAULT    = 329;                       /// 交流输入接触器粘连故障。
	CHG_ALARM_CCM_PARA_ADHESION_FAULT  = 330;                       /// 并联接触器粘连故障。

	CHG_ALARM_BMS_CELL_OVER_VOL        = 400;                       /// 单体电池电压过高。
	CHG_ALARM_BMS_CELL_OVER_TEMP       = 401;                       /// 单体电池温度过高。
	CHG_ALARM_BMS_COMM_FAULT           = 402;                       /// BMS通信故障，充电桩无法与BMS通信。
	CHG_ALARM_BMS_COMM_TIMEOUT         = 403;                       /// BMS通信超时，充电桩与BMS通信超时。
	CHG_ALARM_BMS_BATTERY_INVERSED     = 404;                       /// 电池反接。
	CHG_ALARM_BMS_BATTERY_MISSED       = 405;                       /// 电池未接。
	CHG_ALARM_BMS_BATTERY_OVER_VOL     = 406;                       /// 电池总电压过高。
	CHG_ALARM_BMS_OVER_SOC             = 407;                       /// 电池SOC过高。
	CHG_ALARM_BMS_INSULATION_FAULT     = 408;                       /// 电池组绝缘故障。
	CHG_ALARM_BMS_CONTACTOR_FAULT      = 409;                       /// 电池组输出连接器故障。

	/**电源模块故障*/
	CHG_ALARM_PSM_FAULT                = 1200;                      /// 充电模块故障
	CHG_ALARM_PSM_INPUT_FAULT          = 1201;                      /// 充电模块交流输入故障
	CHG_ALARM_PSM_INPUT_OVER_VOL       = 1202;                      /// 充电模块交流输入过压
	CHG_ALARM_PSM_INPUT_UNDER_VOL      = 1203;                      /// 充电模块交流输入欠压
	CHG_ALARM_PSM_INPUT_MISS_PHASE     = 1204;                      /// 充电模块输入缺相
	CHG_ALARM_PSM_OUTPUT_SHORT         = 1205;                      /// 充电模块直流输出短路
	CHG_ALARM_PSM_OUTPUT_OVER_CUR      = 1206;                      /// 充电模块直流输出过流
	CHG_ALARM_PSM_OUTPUT_OVER_VOL      = 1207;                      /// 充电模块直流输出过压
	CHG_ALARM_PSM_OUTPUT_UNDER_VOL     = 1208;                      /// 充电模块直流输出欠压
	CHG_ALARM_PSM_OUTPUT_FAULT         = 1209;                      /// 充电模块输出异常
	CHG_ALARM_PSM_OVER_TEMP            = 1210;                      /// 充电模块过温
	CHG_ALARM_PSM_COMM_FAULT           = 1211;                      /// 充电模块通信告警
	CHG_ALARM_PSM_FAN_FAULT            = 1212;                      /// 充电模块风扇告警
	CHG_ALARM_PSM_CLOSE_EXCEPTION      = 1213;                      /// 充电模块关闭异常

	// 重复的、定义范围的常量值定义需要放在最后。
	CHG_ALARM_VENDOR_EXTENSION         = 0;                         /// 供应商扩展告警代码。
	CHG_ALARM_NONE_FIRST               = 1;                         /// 未分类故障告警代码的开始。
	CHG_ALARM_NONE_LAST                = 99;                        /// 未分类故障告警代码的结束。
	CHG_ALARM_SYS_FIRST                = 100;                       /// 系统故障告警代码的开始。
	CHG_ALARM_SYS_LAST                 = 199;                       /// 系统故障告警代码的结束。
	CHG_ALARM_BCM_FIRST                = 200;                       /// 计费控制单元告警代码的开始。
	CHG_ALARM_BCM_LAST                 = 299;                       /// 计费控制单元告警代码的结束。
	CHG_ALARM_CCM_FIRST                = 300;                       /// 充电控制单元告警代码的开始。
	CHG_ALARM_CCM_LAST                 = 399;                       /// 充电控制单元告警代码的结束。
	CHG_ALARM_BMS_FIRST                = 400;                       /// 电动汽车BMS告警代码的开始。
	CHG_ALARM_BMS_LAST                 = 499;                       /// 电动汽车BMS告警代码的结束。
	CHG_ALARM_PKL_FIRST                = 500;                       /// 智能车位锁告警代码的开始。
	CHG_ALARM_PKL_LAST                 = 599;                       /// 智能车位锁告警代码的结束。
	CHG_ALARM_PKD_FIRST                = 600;                       /// 智能车位探测告警代码的开始。
	CHG_ALARM_PKD_LAST                 = 699;                       /// 智能车位探测告警代码的结束。
	CHG_ALARM_METER_FIRST              = 700;                       /// 电表告警代码的开始。
	CHG_ALARM_METER_LAST               = 799;                       /// 电表告警代码的结束。
	CHG_ALARM_LCD_FIRST                = 800;                       /// 触摸显示屏告警代码的开始。
	CHG_ALARM_LCD_LAST                 = 899;                       /// 触摸显示屏告警代码的结束。
	CHG_ALARM_CARD_FIRST               = 900;                       /// 读卡器告警代码的开始。
	CHG_ALARM_CARD_LAST                = 999;                       /// 读卡器告警代码的结束。
	CHG_ALARM_FAN_FIRST                = 1000;                      /// 风扇告警代码的开始。
	CHG_ALARM_FAN_LAST                 = 1099;                      /// 风扇告警代码的结束。
	CHG_ALARM_CONN_FIRST               = 1100;                      /// 充电接口告警代码的开始。
	CHG_ALARM_CONN_LAST                = 1199;                      /// 充电接口告警代码的结束。
	CHG_ALARM_PSM_FIRST                = 1200;                      /// 电源模块告警代码的开始。
	CHG_ALARM_PSM_LAST                 = 1299;                      /// 电源模块告警代码的结束。
}

/** 充电桩设备的遥测参数的常量定义。*/
enum ChgMeasureType {
	CHG_MEASURE_VENDOR_EXTENSION  = 0;                              /// 供应商扩展遥测参数。
	CHG_MEASURE_WORKING_STATUS    = 1;                              /// 组件工作状态。0：正常，1：故障，2：通信故障。
	CHG_MEASURE_TEMPERATURE       = 100;                            /// 温度。单位：1°C。
	CHG_MEASURE_VOLTAGE           = 101;                            /// 电压。单位：0.1V。
	CHG_MEASURE_MILLI_VOL         = 102;                            /// 毫伏电压。单位：1mV。
	CHG_MEASURE_CURRENT           = 103;                            /// 电流。单位：0.1A。
	CHG_MEASURE_POWER_WATTS       = 104;                            /// 功率。单位：0.01W。
	CHG_MEASURE_RPM               = 105;                            /// 风扇转速。单位：1rpm。
	CHG_MEASURE_SOC               = 106;                            /// 电池剩余容量。单位：1％。
	CHG_MEASURE_GENERAL_INPUT     = 107;                            /// 通用输入状态。0：低电平，1：高电平。
	CHG_MEASURE_GENERAL_ADC       = 108;                            /// 通用ADC检测。单位：1mV。
	CHG_MEASURE_GUIDANCE_VOLTAGE  = 109;                            /// 充电接口导引电压。单位：0.01V。
	CHG_MEASURE_CONTACTOR_STATUS  = 110;                            /// 接触器状态。0：断开，1：吸合，2：状态不可信。
	CHG_MEASURE_LOCK_STATUS       = 111;                            /// 充电接口电子锁状态。0：打开，1：锁上，2：状态不可信。
	CHG_MEASURE_CP_STATUS         = 112;                            /// CP检测状态。0：12V状态，1：9V状态，2：6V状态，3：错误状态。
	CHG_MEASURE_CC_STATUS         = 113;                            /// CC检测状态。0：断开，1：连接，2：状态不可信。
	CHG_MEASURE_CC1_STATUS        = 114;                            /// CC1检测状态。0：断开，1：连接，2：状态不可信。
	CHG_MEASURE_GUN_POSITION      = 115;                            /// 充电枪位置状态。0：归位，1：未归位，2：状态不可信。
	CHG_MEASURE_DOOR_STATUS       = 116;                            /// 门禁状态。0：门关闭，1：门打开，2：状态不可信。
	CHG_MEASURE_INPUT_VOLTAGE     = 117;                            /// 输入电压。单位：0.1V。
	CHG_MEASURE_INPUT_VOLTAGE_A   = 118;                            /// 输入A相电压。单位：0.1V。
	CHG_MEASURE_INPUT_VOLTAGE_B   = 119;                            /// 输入B相电压。单位：0.1V。
	CHG_MEASURE_INPUT_VOLTAGE_C   = 120;                            /// 输入C相电压。单位：0.1V。
	CHG_MEASURE_INPUT_CURRENT     = 121;                            /// 输入电流。单位：0.1A。
	CHG_MEASURE_INPUT_CURRENT_A   = 122;                            /// 输入A相电流。单位：0.1A。
	CHG_MEASURE_INPUT_CURRENT_B   = 123;                            /// 输入B相电流。单位：0.1A。
	CHG_MEASURE_INPUT_CURRENT_C   = 124;                            /// 输入C相电流。单位：0.1A。
	CHG_MEASURE_OUTPUT_VOLTAGE    = 125;                            /// 输出电压。单位：0.1V。
	CHG_MEASURE_OUTPUT_CURRENT    = 126;                            /// 输出电流。单位：0.1A。
	CHG_MEASURE_WIFI_RSSI         = 127;                            /// 移动网络信号强度。
	CHG_MEASURE_WIRELESS_SIGNAL   = 128;                            /// 无线局域网信号强度。
	CHG_MEASURE_CPU_USAGE         = 129;                            /// 处理器使用率。单位：1％。
	CHG_MEASURE_MEMORY_FREE       = 130;                            /// 剩余内存，单位：1％。
	CHG_MEASURE_STORAGE_FREE      = 131;                            /// 剩余存储容量。单位：1%。
	CHG_MEASURE_PARKING_STATUS    = 132;                            /// 车位检测状态。0：空闲，1：占用中。
	CHG_MEASURE_PARKLOCK_STATUS   = 133;                            /// 车位锁状态。0：解锁状态，1：解锁／上锁中，2：锁住状态。
	CHG_MEASURE_ELECTRICITY       = 134;                            /// 电量。单位：0.01kwh。
	CHG_MEASURE_PIECE_ELECTRICITY = 135;                            /// 分段费率电量。单位：0.01kwh。
	CHG_MEASURE_VOLTAGE_A         = 136;                            /// A相电压。单位：0.1V。
	CHG_MEASURE_VOLTAGE_B         = 137;                            /// B相电压。单位：0.1V。
	CHG_MEASURE_VOLTAGE_C         = 138;                            /// C相电压。单位：0.1V。
	CHG_MEASURE_CURRENT_A         = 139;                            /// A相电流。单位：0.1A。
	CHG_MEASURE_CURRENT_B         = 140;                            /// B相电流。单位：0.1A。
	CHG_MEASURE_CURRENT_C         = 141;                            /// C相电流。单位：0.1A。
	CHG_MEASURE_POWER_KILOWATTS   = 142;                            /// 功率。单位：0.01kw。
}

/** 充电桩设备的遥测位置的常量定义。*/
enum ChgMeasureLoc {
	CHG_MEASURE_LOC_OUTSIDE = 0;                                    /// 遥测位置在充电桩外部。
	CHG_MEASURE_LOC_INLET   = 1;                                    /// 遥测位置在电源输入口。
	CHG_MEASURE_LOC_OUTLET  = 2;                                    /// 遥测位置在电源输出口。
}

/** 充电桩设备的计费模板的费率类型的常量定义。*/
enum ChgTariffType {
	CHG_TARIFF_CHARGING_KWH  = 1;                                   /// 按充电度数计算充电费。单位：0.01元/度。
	CHG_TARIFF_CHARGING_HOUR = 2;                                   /// 按充电时长计算充电费。单位：0.01元/小时。
	CHG_TARIFF_SERVICE_KWH   = 3;                                   /// 按充电度数计算服务费。单位：0.01元/度。
	CHG_TARIFF_SERVICE_HOUR  = 4;                                   /// 按充电时长计算服务费。单位：0.01元/小时。
	CHG_TARIFF_SERVICE_COUNT = 6;                                   /// 按服务次数计算服务费。单位：0.01元/次。
	CHG_TARIFF_PARKING_HOUR  = 20;                                  /// 按时长计算停车费。单位：0.01元/小时。
	CHG_TARIFF_RESERVE_HOUR  = 30;                                  /// 按时长计算预约费。单位：0.01元/小时。
}

/** 充电桩设备的计费模板的费率时段的常量定义。*/
enum ChgTariffPeriod {
	CHG_TARIFF_PERIOD_TIP  = 1;                                     /// 尖时段。
	CHG_TARIFF_PERIOD_PEAK = 2;                                     /// 峰时段。
	CHG_TARIFF_PERIOD_FLAT = 3;                                     /// 平时段。
	CHG_TARIFF_PERIOD_VALE = 4;                                     /// 谷时段。
}
