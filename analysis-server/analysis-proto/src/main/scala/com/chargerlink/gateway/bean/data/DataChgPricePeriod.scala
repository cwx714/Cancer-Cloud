// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.data



/** * 充电桩计费时间段的消息定义。
  *
  * @param priceSchemeId
  *  / (必填)计费模板ID。在相同计费模板内，所有费率编号ID必须唯一。
  * @param startDate
  *  / (必填)计费模版生效的起始时间(北京时间的毫秒时间戳)。单位：毫秒。
  * @param stopDate
  *  / (必填)计费模版生效的截止时间(北京时间的毫秒时间戳)。单位：毫秒。
  */
@SerialVersionUID(0L)
final case class DataChgPricePeriod(
    priceSchemeId: Int,
    startDate: Long,
    stopDate: Long
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[DataChgPricePeriod] with com.trueaccord.lenses.Updatable[DataChgPricePeriod] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, priceSchemeId)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, startDate)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, stopDate)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeUInt32(1, priceSchemeId)
      _output__.writeInt64(2, startDate)
      _output__.writeInt64(3, stopDate)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.data.DataChgPricePeriod = {
      var __priceSchemeId = this.priceSchemeId
      var __startDate = this.startDate
      var __stopDate = this.stopDate
      var __requiredFields0: Long = 0x7L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __priceSchemeId = _input__.readUInt32()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 16 =>
            __startDate = _input__.readInt64()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 24 =>
            __stopDate = _input__.readInt64()
            __requiredFields0 &= 0xfffffffffffffffbL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.chargerlink.gateway.bean.data.DataChgPricePeriod(
          priceSchemeId = __priceSchemeId,
          startDate = __startDate,
          stopDate = __stopDate
      )
    }
    def withPriceSchemeId(__v: Int): DataChgPricePeriod = copy(priceSchemeId = __v)
    def withStartDate(__v: Long): DataChgPricePeriod = copy(startDate = __v)
    def withStopDate(__v: Long): DataChgPricePeriod = copy(stopDate = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => priceSchemeId
        case 2 => startDate
        case 3 => stopDate
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(priceSchemeId)
        case 2 => _root_.scalapb.descriptors.PLong(startDate)
        case 3 => _root_.scalapb.descriptors.PLong(stopDate)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.data.DataChgPricePeriod
}

object DataChgPricePeriod extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.data.DataChgPricePeriod] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.data.DataChgPricePeriod] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.data.DataChgPricePeriod = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.data.DataChgPricePeriod(
      __fieldsMap(__fields.get(0)).asInstanceOf[Int],
      __fieldsMap(__fields.get(1)).asInstanceOf[Long],
      __fieldsMap(__fields.get(2)).asInstanceOf[Long]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.data.DataChgPricePeriod] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.data.DataChgPricePeriod(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[Long],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[Long]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DataChargerProto.javaDescriptor.getMessageTypes.get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DataChargerProto.scalaDescriptor.messages(11)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.chargerlink.gateway.bean.data.DataChgPricePeriod(
    priceSchemeId = 0,
    startDate = 0L,
    stopDate = 0L
  )
  implicit class DataChgPricePeriodLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.data.DataChgPricePeriod]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.data.DataChgPricePeriod](_l) {
    def priceSchemeId: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.priceSchemeId)((c_, f_) => c_.copy(priceSchemeId = f_))
    def startDate: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.startDate)((c_, f_) => c_.copy(startDate = f_))
    def stopDate: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.stopDate)((c_, f_) => c_.copy(stopDate = f_))
  }
  final val PRICE_SCHEME_ID_FIELD_NUMBER = 1
  final val START_DATE_FIELD_NUMBER = 2
  final val STOP_DATE_FIELD_NUMBER = 3
}
