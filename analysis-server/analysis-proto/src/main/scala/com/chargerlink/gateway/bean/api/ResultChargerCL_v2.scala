// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.api



/** * ChargeLink公司的充电桩TCU设备的命令应答的消息定义。
  */
@SerialVersionUID(0L)
final case class ResultChargerCL_v2(
    result: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.Empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultChargerCL_v2] with com.trueaccord.lenses.Updatable[ResultChargerCL_v2] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (result.remoteStart.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.remoteStart.get.serializedSize) + result.remoteStart.get.serializedSize }
      if (result.remoteStop.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.remoteStop.get.serializedSize) + result.remoteStop.get.serializedSize }
      if (result.reserveStart.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.reserveStart.get.serializedSize) + result.reserveStart.get.serializedSize }
      if (result.reserveCancel.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, result.reserveCancel.get.value) }
      if (result.remoteControl.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, result.remoteControl.get.value) }
      if (result.setConfig.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(10, result.setConfig.get.value) }
      if (result.getConfig.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.getConfig.get.serializedSize) + result.getConfig.get.serializedSize }
      if (result.setPrice.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(12, result.setPrice.get.value) }
      if (result.triggerOrders.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.triggerOrders.get.serializedSize) + result.triggerOrders.get.serializedSize }
      if (result.triggerWarnings.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.triggerWarnings.get.serializedSize) + result.triggerWarnings.get.serializedSize }
      if (result.triggerDiags.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.triggerDiags.get.serializedSize) + result.triggerDiags.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      result.remoteStart.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.remoteStop.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.reserveStart.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.reserveCancel.foreach { __v =>
        _output__.writeEnum(4, __v.value)
      };
      result.remoteControl.foreach { __v =>
        _output__.writeEnum(5, __v.value)
      };
      result.setConfig.foreach { __v =>
        _output__.writeEnum(10, __v.value)
      };
      result.getConfig.foreach { __v =>
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.setPrice.foreach { __v =>
        _output__.writeEnum(12, __v.value)
      };
      result.triggerOrders.foreach { __v =>
        _output__.writeTag(20, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.triggerWarnings.foreach { __v =>
        _output__.writeTag(21, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.triggerDiags.foreach { __v =>
        _output__.writeTag(22, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultChargerCL_v2 = {
      var __result = this.result
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStart(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.remoteStart.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart.defaultInstance)))
          case 18 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStop(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.remoteStop.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop.defaultInstance)))
          case 26 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveStart(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.reserveStart.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart.defaultInstance)))
          case 32 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveCancel(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(_input__.readEnum()))
          case 40 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteControl(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(_input__.readEnum()))
          case 80 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetConfig(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig.fromValue(_input__.readEnum()))
          case 90 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.GetConfig(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.getConfig.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.defaultInstance)))
          case 96 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetPrice(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(_input__.readEnum()))
          case 162 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerOrders(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.triggerOrders.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList.defaultInstance)))
          case 170 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerWarnings(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.triggerWarnings.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList.defaultInstance)))
          case 178 =>
            __result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerDiags(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.triggerDiags.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.chargerlink.gateway.bean.api.ResultChargerCL_v2(
          result = __result
      )
    }
    def getRemoteStart: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart = result.remoteStart.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart.defaultInstance)
    def withRemoteStart(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStart(__v))
    def getRemoteStop: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop = result.remoteStop.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop.defaultInstance)
    def withRemoteStop(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStop(__v))
    def getReserveStart: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart = result.reserveStart.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart.defaultInstance)
    def withReserveStart(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveStart(__v))
    def getReserveCancel: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus = result.reserveCancel.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.RESULT_RESPONSE_ACCEPTED)
    def withReserveCancel(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveCancel(__v))
    def getRemoteControl: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus = result.remoteControl.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.RESULT_RESPONSE_ACCEPTED)
    def withRemoteControl(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteControl(__v))
    def getSetConfig: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig = result.setConfig.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig.RESULT_SET_CONFIG_ACCEPTED)
    def withSetConfig(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetConfig(__v))
    def getGetConfig: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig = result.getConfig.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.defaultInstance)
    def withGetConfig(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.GetConfig(__v))
    def getSetPrice: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus = result.setPrice.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.RESULT_RESPONSE_ACCEPTED)
    def withSetPrice(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetPrice(__v))
    def getTriggerOrders: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList = result.triggerOrders.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList.defaultInstance)
    def withTriggerOrders(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerOrders(__v))
    def getTriggerWarnings: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList = result.triggerWarnings.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList.defaultInstance)
    def withTriggerWarnings(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerWarnings(__v))
    def getTriggerDiags: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags = result.triggerDiags.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags.defaultInstance)
    def withTriggerDiags(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags): ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerDiags(__v))
    def clearResult: ResultChargerCL_v2 = copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.Empty)
    def withResult(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result): ResultChargerCL_v2 = copy(result = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => result.remoteStart.orNull
        case 2 => result.remoteStop.orNull
        case 3 => result.reserveStart.orNull
        case 4 => result.reserveCancel.map(_.javaValueDescriptor).orNull
        case 5 => result.remoteControl.map(_.javaValueDescriptor).orNull
        case 10 => result.setConfig.map(_.javaValueDescriptor).orNull
        case 11 => result.getConfig.orNull
        case 12 => result.setPrice.map(_.javaValueDescriptor).orNull
        case 20 => result.triggerOrders.orNull
        case 21 => result.triggerWarnings.orNull
        case 22 => result.triggerDiags.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => result.remoteStart.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => result.remoteStop.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => result.reserveStart.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => result.reserveCancel.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => result.remoteControl.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => result.setConfig.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => result.getConfig.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => result.setPrice.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 20 => result.triggerOrders.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 21 => result.triggerWarnings.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 22 => result.triggerDiags.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.api.ResultChargerCL_v2
}

object ResultChargerCL_v2 extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultChargerCL_v2 = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.api.ResultChargerCL_v2(
      result = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart]].map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStart) orElse
__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop]].map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStop) orElse
__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart]].map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveStart) orElse
__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveCancel(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__e.getNumber))) orElse
__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteControl(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__e.getNumber))) orElse
__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetConfig(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig.fromValue(__e.getNumber))) orElse
__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig]].map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.GetConfig) orElse
__fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetPrice(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__e.getNumber))) orElse
__fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList]].map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerOrders) orElse
__fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList]].map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerWarnings) orElse
__fieldsMap.get(__fields.get(10)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags]].map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerDiags) getOrElse com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.Empty
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultChargerCL_v2] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.api.ResultChargerCL_v2(
        result = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart]]).map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStart) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop]]).map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStop) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart]]).map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveStart) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveCancel(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__e.number))) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteControl(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__e.number))) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetConfig(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig.fromValue(__e.number))) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig]]).map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.GetConfig) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetPrice(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__e.number))) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList]]).map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerOrders) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList]]).map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerWarnings) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags]]).map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerDiags) getOrElse com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.Empty
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiChargerProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiChargerProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart
      case 2 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop
      case 3 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart
      case 11 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig
      case 20 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList
      case 21 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList
      case 22 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus
      case 5 => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus
      case 10 => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig
      case 12 => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus
    }
  }
  lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultChargerCL_v2(
  )
  sealed trait ResultResponseStatus extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = ResultResponseStatus
    def isResultResponseAccepted: Boolean = false
    def isResultResponseRejected: Boolean = false
    def isResultResponseUnsupport: Boolean = false
    def isResultResponseInvalid: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultResponseStatus] = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus
  }
  
  object ResultResponseStatus extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultResponseStatus] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultResponseStatus] = this
    @SerialVersionUID(0L)
    case object RESULT_RESPONSE_ACCEPTED extends ResultResponseStatus {
      val value = 0
      val index = 0
      val name = "RESULT_RESPONSE_ACCEPTED"
      override def isResultResponseAccepted: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_RESPONSE_REJECTED extends ResultResponseStatus {
      val value = 1
      val index = 1
      val name = "RESULT_RESPONSE_REJECTED"
      override def isResultResponseRejected: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_RESPONSE_UNSUPPORT extends ResultResponseStatus {
      val value = 2
      val index = 2
      val name = "RESULT_RESPONSE_UNSUPPORT"
      override def isResultResponseUnsupport: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_RESPONSE_INVALID extends ResultResponseStatus {
      val value = 3
      val index = 3
      val name = "RESULT_RESPONSE_INVALID"
      override def isResultResponseInvalid: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends ResultResponseStatus with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(RESULT_RESPONSE_ACCEPTED, RESULT_RESPONSE_REJECTED, RESULT_RESPONSE_UNSUPPORT, RESULT_RESPONSE_INVALID)
    def fromValue(value: Int): ResultResponseStatus = value match {
      case 0 => RESULT_RESPONSE_ACCEPTED
      case 1 => RESULT_RESPONSE_REJECTED
      case 2 => RESULT_RESPONSE_UNSUPPORT
      case 3 => RESULT_RESPONSE_INVALID
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.scalaDescriptor.enums(0)
  }
  sealed trait ResultSetConfig extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = ResultSetConfig
    def isResultSetConfigAccepted: Boolean = false
    def isResultSetConfigRejected: Boolean = false
    def isResultSetConfigNeedreboot: Boolean = false
    def isResultSetConfigUnsupport: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultSetConfig] = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig
  }
  
  object ResultSetConfig extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultSetConfig] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultSetConfig] = this
    @SerialVersionUID(0L)
    case object RESULT_SET_CONFIG_ACCEPTED extends ResultSetConfig {
      val value = 0
      val index = 0
      val name = "RESULT_SET_CONFIG_ACCEPTED"
      override def isResultSetConfigAccepted: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_SET_CONFIG_REJECTED extends ResultSetConfig {
      val value = 1
      val index = 1
      val name = "RESULT_SET_CONFIG_REJECTED"
      override def isResultSetConfigRejected: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_SET_CONFIG_NEEDREBOOT extends ResultSetConfig {
      val value = 2
      val index = 2
      val name = "RESULT_SET_CONFIG_NEEDREBOOT"
      override def isResultSetConfigNeedreboot: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_SET_CONFIG_UNSUPPORT extends ResultSetConfig {
      val value = 3
      val index = 3
      val name = "RESULT_SET_CONFIG_UNSUPPORT"
      override def isResultSetConfigUnsupport: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends ResultSetConfig with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(RESULT_SET_CONFIG_ACCEPTED, RESULT_SET_CONFIG_REJECTED, RESULT_SET_CONFIG_NEEDREBOOT, RESULT_SET_CONFIG_UNSUPPORT)
    def fromValue(value: Int): ResultSetConfig = value match {
      case 0 => RESULT_SET_CONFIG_ACCEPTED
      case 1 => RESULT_SET_CONFIG_REJECTED
      case 2 => RESULT_SET_CONFIG_NEEDREBOOT
      case 3 => RESULT_SET_CONFIG_UNSUPPORT
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.javaDescriptor.getEnumTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.scalaDescriptor.enums(1)
  }
  sealed trait Result extends _root_.com.trueaccord.scalapb.GeneratedOneof {
    def isEmpty: Boolean = false
    def isDefined: Boolean = true
    def isRemoteStart: Boolean = false
    def isRemoteStop: Boolean = false
    def isReserveStart: Boolean = false
    def isReserveCancel: Boolean = false
    def isRemoteControl: Boolean = false
    def isSetConfig: Boolean = false
    def isGetConfig: Boolean = false
    def isSetPrice: Boolean = false
    def isTriggerOrders: Boolean = false
    def isTriggerWarnings: Boolean = false
    def isTriggerDiags: Boolean = false
    def remoteStart: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart] = None
    def remoteStop: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop] = None
    def reserveStart: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart] = None
    def reserveCancel: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = None
    def remoteControl: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = None
    def setConfig: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig] = None
    def getConfig: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig] = None
    def setPrice: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = None
    def triggerOrders: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] = None
    def triggerWarnings: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] = None
    def triggerDiags: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags] = None
  }
  object Result extends {
    @SerialVersionUID(0L)
    case object Empty extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isEmpty: Boolean = true
      override def isDefined: Boolean = false
      override def number: Int = 0
      override def value: scala.Any = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    case class RemoteStart(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isRemoteStart: Boolean = true
      override def remoteStart: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart] = Some(value)
      override def number: Int = 1
    }
    @SerialVersionUID(0L)
    case class RemoteStop(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isRemoteStop: Boolean = true
      override def remoteStop: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop] = Some(value)
      override def number: Int = 2
    }
    @SerialVersionUID(0L)
    case class ReserveStart(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isReserveStart: Boolean = true
      override def reserveStart: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart] = Some(value)
      override def number: Int = 3
    }
    @SerialVersionUID(0L)
    case class ReserveCancel(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isReserveCancel: Boolean = true
      override def reserveCancel: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = Some(value)
      override def number: Int = 4
    }
    @SerialVersionUID(0L)
    case class RemoteControl(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isRemoteControl: Boolean = true
      override def remoteControl: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = Some(value)
      override def number: Int = 5
    }
    @SerialVersionUID(0L)
    case class SetConfig(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isSetConfig: Boolean = true
      override def setConfig: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig] = Some(value)
      override def number: Int = 10
    }
    @SerialVersionUID(0L)
    case class GetConfig(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isGetConfig: Boolean = true
      override def getConfig: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig] = Some(value)
      override def number: Int = 11
    }
    @SerialVersionUID(0L)
    case class SetPrice(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isSetPrice: Boolean = true
      override def setPrice: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = Some(value)
      override def number: Int = 12
    }
    @SerialVersionUID(0L)
    case class TriggerOrders(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isTriggerOrders: Boolean = true
      override def triggerOrders: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] = Some(value)
      override def number: Int = 20
    }
    @SerialVersionUID(0L)
    case class TriggerWarnings(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isTriggerWarnings: Boolean = true
      override def triggerWarnings: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] = Some(value)
      override def number: Int = 21
    }
    @SerialVersionUID(0L)
    case class TriggerDiags(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags) extends com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result {
      override def isTriggerDiags: Boolean = true
      override def triggerDiags: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags] = Some(value)
      override def number: Int = 22
    }
  }
  /** * 远程启动充电的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V1版的RequestStart.Confirm、TransactionStarted.Request消息/V2版的RemoteStartTransactionConf、StartTransactionReq消息。
    *
    * @param status
    *  / (必填)启动结果。
    * @param orderInfo
    *  / (可选)充电启动时充电订单消息。null：未收到充电桩的充电启动消息。
    */
  @SerialVersionUID(0L)
  final case class ResultRemoteStart(
      status: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus,
      orderInfo: scala.Option[com.chargerlink.gateway.bean.data.DataChgOrder] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultRemoteStart] with com.trueaccord.lenses.Updatable[ResultRemoteStart] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, status.value)
        if (orderInfo.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(orderInfo.get.serializedSize) + orderInfo.get.serializedSize }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeEnum(1, status.value)
        orderInfo.foreach { __v =>
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart = {
        var __status = this.status
        var __orderInfo = this.orderInfo
        var __requiredFields0: Long = 0x1L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __status = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(_input__.readEnum())
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __orderInfo = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __orderInfo.getOrElse(com.chargerlink.gateway.bean.data.DataChgOrder.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart(
            status = __status,
            orderInfo = __orderInfo
        )
      }
      def withStatus(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus): ResultRemoteStart = copy(status = __v)
      def getOrderInfo: com.chargerlink.gateway.bean.data.DataChgOrder = orderInfo.getOrElse(com.chargerlink.gateway.bean.data.DataChgOrder.defaultInstance)
      def clearOrderInfo: ResultRemoteStart = copy(orderInfo = None)
      def withOrderInfo(__v: com.chargerlink.gateway.bean.data.DataChgOrder): ResultRemoteStart = copy(orderInfo = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => status.javaValueDescriptor
          case 2 => orderInfo.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PEnum(status.scalaValueDescriptor)
          case 2 => orderInfo.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart
  }
  
  object ResultRemoteStart extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart(
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.data.DataChgOrder]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart(
          com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.data.DataChgOrder]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => __out = com.chargerlink.gateway.bean.data.DataChgOrder
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus
      }
    }
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart(
      status = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.RESULT_RESPONSE_ACCEPTED
    )
    implicit class ResultRemoteStartLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart](_l) {
      def status: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = field(_.status)((c_, f_) => c_.copy(status = f_))
      def orderInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.data.DataChgOrder] = field(_.getOrderInfo)((c_, f_) => c_.copy(orderInfo = Some(f_)))
      def optionalOrderInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.data.DataChgOrder]] = field(_.orderInfo)((c_, f_) => c_.copy(orderInfo = f_))
    }
    final val STATUS_FIELD_NUMBER = 1
    final val ORDER_INFO_FIELD_NUMBER = 2
  }
  
  /** * 远程停止充电的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V1版的RequestStop.Confirm、TransactionStopped.Request消息/V2版的RemoteStopTransactionConf、StopTransactionReq消息。
    *
    * @param status
    *  / (必填)停止结果。
    * @param orderInfo
    *  / (可选)充电停止时充电订单消息。null：未收到充电桩的充电停止消息。
    */
  @SerialVersionUID(0L)
  final case class ResultRemoteStop(
      status: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus,
      orderInfo: scala.Option[com.chargerlink.gateway.bean.data.DataChgOrder] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultRemoteStop] with com.trueaccord.lenses.Updatable[ResultRemoteStop] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, status.value)
        if (orderInfo.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(orderInfo.get.serializedSize) + orderInfo.get.serializedSize }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeEnum(1, status.value)
        orderInfo.foreach { __v =>
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop = {
        var __status = this.status
        var __orderInfo = this.orderInfo
        var __requiredFields0: Long = 0x1L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __status = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(_input__.readEnum())
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __orderInfo = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __orderInfo.getOrElse(com.chargerlink.gateway.bean.data.DataChgOrder.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop(
            status = __status,
            orderInfo = __orderInfo
        )
      }
      def withStatus(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus): ResultRemoteStop = copy(status = __v)
      def getOrderInfo: com.chargerlink.gateway.bean.data.DataChgOrder = orderInfo.getOrElse(com.chargerlink.gateway.bean.data.DataChgOrder.defaultInstance)
      def clearOrderInfo: ResultRemoteStop = copy(orderInfo = None)
      def withOrderInfo(__v: com.chargerlink.gateway.bean.data.DataChgOrder): ResultRemoteStop = copy(orderInfo = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => status.javaValueDescriptor
          case 2 => orderInfo.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PEnum(status.scalaValueDescriptor)
          case 2 => orderInfo.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop
  }
  
  object ResultRemoteStop extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop(
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.data.DataChgOrder]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop(
          com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.data.DataChgOrder]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => __out = com.chargerlink.gateway.bean.data.DataChgOrder
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus
      }
    }
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop(
      status = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.RESULT_RESPONSE_ACCEPTED
    )
    implicit class ResultRemoteStopLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop](_l) {
      def status: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = field(_.status)((c_, f_) => c_.copy(status = f_))
      def orderInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.data.DataChgOrder] = field(_.getOrderInfo)((c_, f_) => c_.copy(orderInfo = Some(f_)))
      def optionalOrderInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.data.DataChgOrder]] = field(_.orderInfo)((c_, f_) => c_.copy(orderInfo = f_))
    }
    final val STATUS_FIELD_NUMBER = 1
    final val ORDER_INFO_FIELD_NUMBER = 2
  }
  
  /** * 远程预约充电的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V2版的ReserveNowConf消息。
    *
    * @param status
    *  / (必填)预约结果。
    * @param plugId
    *  / (可选)已预约充电枪ID(从1开始)。
    * @param pinCode
    *  / (可选)充电站校验码。
    */
  @SerialVersionUID(0L)
  final case class ResultReserveStart(
      status: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus,
      plugId: scala.Option[Int] = None,
      pinCode: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultReserveStart] with com.trueaccord.lenses.Updatable[ResultReserveStart] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, status.value)
        if (plugId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(2, plugId.get) }
        if (pinCode.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, pinCode.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeEnum(1, status.value)
        plugId.foreach { __v =>
          _output__.writeUInt32(2, __v)
        };
        pinCode.foreach { __v =>
          _output__.writeString(3, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart = {
        var __status = this.status
        var __plugId = this.plugId
        var __pinCode = this.pinCode
        var __requiredFields0: Long = 0x1L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __status = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(_input__.readEnum())
              __requiredFields0 &= 0xfffffffffffffffeL
            case 16 =>
              __plugId = Some(_input__.readUInt32())
            case 26 =>
              __pinCode = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart(
            status = __status,
            plugId = __plugId,
            pinCode = __pinCode
        )
      }
      def withStatus(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus): ResultReserveStart = copy(status = __v)
      def getPlugId: Int = plugId.getOrElse(0)
      def clearPlugId: ResultReserveStart = copy(plugId = None)
      def withPlugId(__v: Int): ResultReserveStart = copy(plugId = Some(__v))
      def getPinCode: String = pinCode.getOrElse("")
      def clearPinCode: ResultReserveStart = copy(pinCode = None)
      def withPinCode(__v: String): ResultReserveStart = copy(pinCode = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => status.javaValueDescriptor
          case 2 => plugId.orNull
          case 3 => pinCode.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PEnum(status.scalaValueDescriptor)
          case 2 => plugId.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => pinCode.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart
  }
  
  object ResultReserveStart extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart(
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart(
          com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.javaDescriptor.getNestedTypes.get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus
      }
    }
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart(
      status = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus.RESULT_RESPONSE_ACCEPTED
    )
    implicit class ResultReserveStartLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart](_l) {
      def status: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = field(_.status)((c_, f_) => c_.copy(status = f_))
      def plugId: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getPlugId)((c_, f_) => c_.copy(plugId = Some(f_)))
      def optionalPlugId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.plugId)((c_, f_) => c_.copy(plugId = f_))
      def pinCode: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPinCode)((c_, f_) => c_.copy(pinCode = Some(f_)))
      def optionalPinCode: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.pinCode)((c_, f_) => c_.copy(pinCode = f_))
    }
    final val STATUS_FIELD_NUMBER = 1
    final val PLUG_ID_FIELD_NUMBER = 2
    final val PIN_CODE_FIELD_NUMBER = 3
  }
  
  /** * 获取设备配置的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V2版的GetConfigurationConf消息。
    *
    * @param configList
    *  / (必填)设置的配置参数值列表。格式为：参数名称-&gt;参数值。其中：参数名称为ConfigName的值对应的字符串。
    */
  @SerialVersionUID(0L)
  final case class ResultGetConfig(
      configList: scala.collection.immutable.Map[String, String] = scala.collection.immutable.Map.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultGetConfig] with com.trueaccord.lenses.Updatable[ResultGetConfig] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        configList.foreach(configList => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toBase(configList).serializedSize) + com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toBase(configList).serializedSize)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        configList.foreach { __v =>
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toBase(__v).serializedSize)
          com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toBase(__v).writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig = {
        val __configList = (scala.collection.immutable.Map.newBuilder[String, String] ++= this.configList)
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __configList += com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toCustom(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry.defaultInstance))
            case tag => _input__.skipField(tag)
          }
        }
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig(
            configList = __configList.result()
        )
      }
      def clearConfigList = copy(configList = scala.collection.immutable.Map.empty)
      def addConfigList(__vs: (String, String)*): ResultGetConfig = addAllConfigList(__vs)
      def addAllConfigList(__vs: TraversableOnce[(String, String)]): ResultGetConfig = copy(configList = configList ++ __vs)
      def withConfigList(__v: scala.collection.immutable.Map[String, String]): ResultGetConfig = copy(configList = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => configList.map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toBase)(_root_.scala.collection.breakOut)
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(configList.map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toBase(_).toPMessage)(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig
  }
  
  object ResultGetConfig extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig(
        __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry]].map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toCustom)(_root_.scala.collection.breakOut)
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry]]).getOrElse(_root_.scala.collection.Seq.empty).map(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig._typemapper_configList.toCustom)(_root_.scala.collection.breakOut)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.javaDescriptor.getNestedTypes.get(3)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.scalaDescriptor.nestedMessages(3)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig(
    )
    @SerialVersionUID(0L)
    final case class ConfigListEntry(
        key: scala.Option[String] = None,
        value: scala.Option[String] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ConfigListEntry] with com.trueaccord.lenses.Updatable[ConfigListEntry] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (key.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, key.get) }
          if (value.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, value.get) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          key.foreach { __v =>
            _output__.writeString(1, __v)
          };
          value.foreach { __v =>
            _output__.writeString(2, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry = {
          var __key = this.key
          var __value = this.value
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __key = Some(_input__.readString())
              case 18 =>
                __value = Some(_input__.readString())
              case tag => _input__.skipField(tag)
            }
          }
          com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry(
              key = __key,
              value = __value
          )
        }
        def getKey: String = key.getOrElse("")
        def clearKey: ConfigListEntry = copy(key = None)
        def withKey(__v: String): ConfigListEntry = copy(key = Some(__v))
        def getValue: String = value.getOrElse("")
        def clearValue: ConfigListEntry = copy(value = None)
        def withValue(__v: String): ConfigListEntry = copy(value = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => key.orNull
            case 2 => value.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => key.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => value.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
        def companion = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry
    }
    
    object ConfigListEntry extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry(
      )
      implicit class ConfigListEntryLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry](_l) {
        def key: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getKey)((c_, f_) => c_.copy(key = Some(f_)))
        def optionalKey: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.key)((c_, f_) => c_.copy(key = f_))
        def value: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getValue)((c_, f_) => c_.copy(value = Some(f_)))
        def optionalValue: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.value)((c_, f_) => c_.copy(value = f_))
      }
      final val KEY_FIELD_NUMBER = 1
      final val VALUE_FIELD_NUMBER = 2
      implicit val keyValueMapper: _root_.com.trueaccord.scalapb.TypeMapper[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry, (String, String)] =
        _root_.com.trueaccord.scalapb.TypeMapper[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry, (String, String)](__m => (__m.getKey, __m.getValue))(__p => com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry(Some(__p._1), Some(__p._2)))
    }
    
    implicit class ResultGetConfigLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig](_l) {
      def configList: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.collection.immutable.Map[String, String]] = field(_.configList)((c_, f_) => c_.copy(configList = f_))
    }
    final val CONFIG_LIST_FIELD_NUMBER = 1
    @transient
    private val _typemapper_configList: _root_.com.trueaccord.scalapb.TypeMapper[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry, (String, String)] = implicitly[_root_.com.trueaccord.scalapb.TypeMapper[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig.ConfigListEntry, (String, String)]]
  }
  
  /** * 获取离线交易记录/设备告警记录的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V1版的GetTransactions.Request消息/V2版的GetTransactionsConf、GetWarningConf消息。
    *
    * @param totalCount
    *  / (可选)返回的总记录数。
    */
  @SerialVersionUID(0L)
  final case class ResultTriggerList(
      totalCount: scala.Option[Int] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultTriggerList] with com.trueaccord.lenses.Updatable[ResultTriggerList] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (totalCount.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, totalCount.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        totalCount.foreach { __v =>
          _output__.writeInt32(1, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList = {
        var __totalCount = this.totalCount
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __totalCount = Some(_input__.readInt32())
            case tag => _input__.skipField(tag)
          }
        }
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList(
            totalCount = __totalCount
        )
      }
      def getTotalCount: Int = totalCount.getOrElse(0)
      def clearTotalCount: ResultTriggerList = copy(totalCount = None)
      def withTotalCount(__v: Int): ResultTriggerList = copy(totalCount = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => totalCount.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => totalCount.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList
  }
  
  object ResultTriggerList extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Int]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Int]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.javaDescriptor.getNestedTypes.get(4)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.scalaDescriptor.nestedMessages(4)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList(
    )
    implicit class ResultTriggerListLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList](_l) {
      def totalCount: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getTotalCount)((c_, f_) => c_.copy(totalCount = Some(f_)))
      def optionalTotalCount: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.totalCount)((c_, f_) => c_.copy(totalCount = f_))
    }
    final val TOTAL_COUNT_FIELD_NUMBER = 1
  }
  
  /** * 获取设备诊断日志的应答消息的消息定义。对应ChargeLink公司的Protobuf协议V2版的GetDiagnosticsConf消息。
    *
    * @param fileName
    *  / (可选)上传的日志文件名。
    */
  @SerialVersionUID(0L)
  final case class ResultTriggerDiags(
      fileName: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultTriggerDiags] with com.trueaccord.lenses.Updatable[ResultTriggerDiags] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (fileName.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, fileName.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        fileName.foreach { __v =>
          _output__.writeString(1, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags = {
        var __fileName = this.fileName
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __fileName = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags(
            fileName = __fileName
        )
      }
      def getFileName: String = fileName.getOrElse("")
      def clearFileName: ResultTriggerDiags = copy(fileName = None)
      def withFileName(__v: String): ResultTriggerDiags = copy(fileName = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => fileName.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => fileName.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags
  }
  
  object ResultTriggerDiags extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.javaDescriptor.getNestedTypes.get(5)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.scalaDescriptor.nestedMessages(5)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags(
    )
    implicit class ResultTriggerDiagsLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags](_l) {
      def fileName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getFileName)((c_, f_) => c_.copy(fileName = Some(f_)))
      def optionalFileName: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.fileName)((c_, f_) => c_.copy(fileName = f_))
    }
    final val FILE_NAME_FIELD_NUMBER = 1
  }
  
  implicit class ResultChargerCL_v2Lens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2](_l) {
    def remoteStart: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStart] = field(_.getRemoteStart)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStart(f_)))
    def remoteStop: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultRemoteStop] = field(_.getRemoteStop)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteStop(f_)))
    def reserveStart: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultReserveStart] = field(_.getReserveStart)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveStart(f_)))
    def reserveCancel: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = field(_.getReserveCancel)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.ReserveCancel(f_)))
    def remoteControl: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = field(_.getRemoteControl)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.RemoteControl(f_)))
    def setConfig: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultSetConfig] = field(_.getSetConfig)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetConfig(f_)))
    def getConfig: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultGetConfig] = field(_.getGetConfig)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.GetConfig(f_)))
    def setPrice: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultResponseStatus] = field(_.getSetPrice)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.SetPrice(f_)))
    def triggerOrders: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] = field(_.getTriggerOrders)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerOrders(f_)))
    def triggerWarnings: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerList] = field(_.getTriggerWarnings)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerWarnings(f_)))
    def triggerDiags: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.ResultTriggerDiags] = field(_.getTriggerDiags)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result.TriggerDiags(f_)))
    def result: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2.Result] = field(_.result)((c_, f_) => c_.copy(result = f_))
  }
  final val REMOTE_START_FIELD_NUMBER = 1
  final val REMOTE_STOP_FIELD_NUMBER = 2
  final val RESERVE_START_FIELD_NUMBER = 3
  final val RESERVE_CANCEL_FIELD_NUMBER = 4
  final val REMOTE_CONTROL_FIELD_NUMBER = 5
  final val SET_CONFIG_FIELD_NUMBER = 10
  final val GET_CONFIG_FIELD_NUMBER = 11
  final val SET_PRICE_FIELD_NUMBER = 12
  final val TRIGGER_ORDERS_FIELD_NUMBER = 20
  final val TRIGGER_WARNINGS_FIELD_NUMBER = 21
  final val TRIGGER_DIAGS_FIELD_NUMBER = 22
}
