// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.data



/** * 当前充电订单的用户验证信息的消息定义。只有当前充电桩处于充电状态时数据才有效。
  *
  * @param authStatus
  *  / (必填)用户账户鉴权结果。
  * @param expireTime
  *  / (可选)用户账户的失效时间(北京时间的毫秒时间戳)。单位：毫秒。
  * @param userBalance
  *  / (可选)用户账户的余额。单位：0.01元。
  */
@SerialVersionUID(0L)
final case class DataChgAuth(
    authStatus: com.chargerlink.gateway.bean.common.ChgAuthStatus,
    expireTime: scala.Option[Long] = None,
    userBalance: scala.Option[Int] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[DataChgAuth] with com.trueaccord.lenses.Updatable[DataChgAuth] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, authStatus.value)
      if (expireTime.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, expireTime.get) }
      if (userBalance.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, userBalance.get) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeEnum(1, authStatus.value)
      expireTime.foreach { __v =>
        _output__.writeInt64(2, __v)
      };
      userBalance.foreach { __v =>
        _output__.writeInt32(3, __v)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.data.DataChgAuth = {
      var __authStatus = this.authStatus
      var __expireTime = this.expireTime
      var __userBalance = this.userBalance
      var __requiredFields0: Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __authStatus = com.chargerlink.gateway.bean.common.ChgAuthStatus.fromValue(_input__.readEnum())
            __requiredFields0 &= 0xfffffffffffffffeL
          case 16 =>
            __expireTime = Some(_input__.readInt64())
          case 24 =>
            __userBalance = Some(_input__.readInt32())
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.chargerlink.gateway.bean.data.DataChgAuth(
          authStatus = __authStatus,
          expireTime = __expireTime,
          userBalance = __userBalance
      )
    }
    def withAuthStatus(__v: com.chargerlink.gateway.bean.common.ChgAuthStatus): DataChgAuth = copy(authStatus = __v)
    def getExpireTime: Long = expireTime.getOrElse(0L)
    def clearExpireTime: DataChgAuth = copy(expireTime = None)
    def withExpireTime(__v: Long): DataChgAuth = copy(expireTime = Some(__v))
    def getUserBalance: Int = userBalance.getOrElse(0)
    def clearUserBalance: DataChgAuth = copy(userBalance = None)
    def withUserBalance(__v: Int): DataChgAuth = copy(userBalance = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => authStatus.javaValueDescriptor
        case 2 => expireTime.orNull
        case 3 => userBalance.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(authStatus.scalaValueDescriptor)
        case 2 => expireTime.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => userBalance.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.data.DataChgAuth
}

object DataChgAuth extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.data.DataChgAuth] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.data.DataChgAuth] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.data.DataChgAuth = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.data.DataChgAuth(
      com.chargerlink.gateway.bean.common.ChgAuthStatus.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Long]],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Int]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.data.DataChgAuth] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.data.DataChgAuth(
        com.chargerlink.gateway.bean.common.ChgAuthStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Long]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Int]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DataChargerProto.javaDescriptor.getMessageTypes.get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DataChargerProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => com.chargerlink.gateway.bean.common.ChgAuthStatus
    }
  }
  lazy val defaultInstance = com.chargerlink.gateway.bean.data.DataChgAuth(
    authStatus = com.chargerlink.gateway.bean.common.ChgAuthStatus.AUTH_SUCCESS
  )
  implicit class DataChgAuthLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.data.DataChgAuth]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.data.DataChgAuth](_l) {
    def authStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.common.ChgAuthStatus] = field(_.authStatus)((c_, f_) => c_.copy(authStatus = f_))
    def expireTime: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getExpireTime)((c_, f_) => c_.copy(expireTime = Some(f_)))
    def optionalExpireTime: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.expireTime)((c_, f_) => c_.copy(expireTime = f_))
    def userBalance: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getUserBalance)((c_, f_) => c_.copy(userBalance = Some(f_)))
    def optionalUserBalance: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.userBalance)((c_, f_) => c_.copy(userBalance = f_))
  }
  final val AUTH_STATUS_FIELD_NUMBER = 1
  final val EXPIRE_TIME_FIELD_NUMBER = 2
  final val USER_BALANCE_FIELD_NUMBER = 3
}
