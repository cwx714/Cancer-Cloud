// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.event



/** * 通用终端设备诊断信息状态通知事件的消息定义。
  *
  * @param uploadStatus
  *  / (必填)日志上传状态。
  */
@SerialVersionUID(0L)
final case class EventDevReportDiag(
    uploadStatus: com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[EventDevReportDiag] with com.trueaccord.lenses.Updatable[EventDevReportDiag] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, uploadStatus.value)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeEnum(1, uploadStatus.value)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.event.EventDevReportDiag = {
      var __uploadStatus = this.uploadStatus
      var __requiredFields0: Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __uploadStatus = com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus.fromValue(_input__.readEnum())
            __requiredFields0 &= 0xfffffffffffffffeL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.chargerlink.gateway.bean.event.EventDevReportDiag(
          uploadStatus = __uploadStatus
      )
    }
    def withUploadStatus(__v: com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus): EventDevReportDiag = copy(uploadStatus = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => uploadStatus.javaValueDescriptor
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(uploadStatus.scalaValueDescriptor)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.event.EventDevReportDiag
}

object EventDevReportDiag extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.event.EventDevReportDiag] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.event.EventDevReportDiag] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.event.EventDevReportDiag = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.event.EventDevReportDiag(
      com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.event.EventDevReportDiag] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.event.EventDevReportDiag(
        com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = EventDeviceProto.javaDescriptor.getMessageTypes.get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = EventDeviceProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus
    }
  }
  lazy val defaultInstance = com.chargerlink.gateway.bean.event.EventDevReportDiag(
    uploadStatus = com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus.UPLOAD_STATUS_IDLE
  )
  sealed trait UploadStatus extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = UploadStatus
    def isUploadStatusIdle: Boolean = false
    def isUploadStatusAccepted: Boolean = false
    def isUploadStatusUploading: Boolean = false
    def isUploadStatusUploaded: Boolean = false
    def isUploadStatusUploadFailed: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[UploadStatus] = com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus
  }
  
  object UploadStatus extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[UploadStatus] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[UploadStatus] = this
    @SerialVersionUID(0L)
    case object UPLOAD_STATUS_IDLE extends UploadStatus {
      val value = 0
      val index = 0
      val name = "UPLOAD_STATUS_IDLE"
      override def isUploadStatusIdle: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object UPLOAD_STATUS_ACCEPTED extends UploadStatus {
      val value = 1
      val index = 1
      val name = "UPLOAD_STATUS_ACCEPTED"
      override def isUploadStatusAccepted: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object UPLOAD_STATUS_UPLOADING extends UploadStatus {
      val value = 2
      val index = 2
      val name = "UPLOAD_STATUS_UPLOADING"
      override def isUploadStatusUploading: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object UPLOAD_STATUS_UPLOADED extends UploadStatus {
      val value = 3
      val index = 3
      val name = "UPLOAD_STATUS_UPLOADED"
      override def isUploadStatusUploaded: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object UPLOAD_STATUS_UPLOAD_FAILED extends UploadStatus {
      val value = 4
      val index = 4
      val name = "UPLOAD_STATUS_UPLOAD_FAILED"
      override def isUploadStatusUploadFailed: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends UploadStatus with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(UPLOAD_STATUS_IDLE, UPLOAD_STATUS_ACCEPTED, UPLOAD_STATUS_UPLOADING, UPLOAD_STATUS_UPLOADED, UPLOAD_STATUS_UPLOAD_FAILED)
    def fromValue(value: Int): UploadStatus = value match {
      case 0 => UPLOAD_STATUS_IDLE
      case 1 => UPLOAD_STATUS_ACCEPTED
      case 2 => UPLOAD_STATUS_UPLOADING
      case 3 => UPLOAD_STATUS_UPLOADED
      case 4 => UPLOAD_STATUS_UPLOAD_FAILED
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.chargerlink.gateway.bean.event.EventDevReportDiag.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.chargerlink.gateway.bean.event.EventDevReportDiag.scalaDescriptor.enums(0)
  }
  implicit class EventDevReportDiagLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.event.EventDevReportDiag]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.event.EventDevReportDiag](_l) {
    def uploadStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.event.EventDevReportDiag.UploadStatus] = field(_.uploadStatus)((c_, f_) => c_.copy(uploadStatus = f_))
  }
  final val UPLOAD_STATUS_FIELD_NUMBER = 1
}
