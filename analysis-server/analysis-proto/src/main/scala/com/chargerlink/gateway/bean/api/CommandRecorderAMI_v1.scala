// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.api



/** * Amitek公司的行车记录仪/后视镜设备的命令请求的消息定义。
  */
@SerialVersionUID(0L)
final case class CommandRecorderAMI_v1(
    command: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.Empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CommandRecorderAMI_v1] with com.trueaccord.lenses.Updatable[CommandRecorderAMI_v1] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (command.configStatus.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(command.configStatus.get.serializedSize) + command.configStatus.get.serializedSize }
      if (command.bindStatus.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(command.bindStatus.get.serializedSize) + command.bindStatus.get.serializedSize }
      if (command.groupStatus.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(command.groupStatus.get.serializedSize) + command.groupStatus.get.serializedSize }
      if (command.chargeStatus.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(command.chargeStatus.get.serializedSize) + command.chargeStatus.get.serializedSize }
      if (command.systemRequest.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(command.systemRequest.get.serializedSize) + command.systemRequest.get.serializedSize }
      if (command.naviRequest.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(command.naviRequest.get.serializedSize) + command.naviRequest.get.serializedSize }
      if (command.trackRequest.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(command.trackRequest.get.serializedSize) + command.trackRequest.get.serializedSize }
      if (command.monitorRequest.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(command.monitorRequest.get.serializedSize) + command.monitorRequest.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      command.configStatus.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      command.bindStatus.foreach { __v =>
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      command.groupStatus.foreach { __v =>
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      command.chargeStatus.foreach { __v =>
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      command.systemRequest.foreach { __v =>
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      command.naviRequest.foreach { __v =>
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      command.trackRequest.foreach { __v =>
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      command.monitorRequest.foreach { __v =>
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1 = {
      var __command = this.command
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 34 =>
            __command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ConfigStatus(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, command.configStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.defaultInstance)))
          case 42 =>
            __command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.BindStatus(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, command.bindStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.defaultInstance)))
          case 50 =>
            __command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.GroupStatus(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, command.groupStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus.defaultInstance)))
          case 58 =>
            __command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ChargeStatus(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, command.chargeStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus.defaultInstance)))
          case 66 =>
            __command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.SystemRequest(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, command.systemRequest.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.defaultInstance)))
          case 74 =>
            __command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.NaviRequest(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, command.naviRequest.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.defaultInstance)))
          case 82 =>
            __command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.TrackRequest(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, command.trackRequest.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.defaultInstance)))
          case 90 =>
            __command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.MonitorRequest(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, command.monitorRequest.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1(
          command = __command
      )
    }
    def getConfigStatus: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus = command.configStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.defaultInstance)
    def withConfigStatus(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus): CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ConfigStatus(__v))
    def getBindStatus: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus = command.bindStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.defaultInstance)
    def withBindStatus(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus): CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.BindStatus(__v))
    def getGroupStatus: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus = command.groupStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus.defaultInstance)
    def withGroupStatus(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus): CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.GroupStatus(__v))
    def getChargeStatus: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus = command.chargeStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus.defaultInstance)
    def withChargeStatus(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus): CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ChargeStatus(__v))
    def getSystemRequest: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest = command.systemRequest.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.defaultInstance)
    def withSystemRequest(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest): CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.SystemRequest(__v))
    def getNaviRequest: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest = command.naviRequest.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.defaultInstance)
    def withNaviRequest(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest): CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.NaviRequest(__v))
    def getTrackRequest: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest = command.trackRequest.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.defaultInstance)
    def withTrackRequest(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest): CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.TrackRequest(__v))
    def getMonitorRequest: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest = command.monitorRequest.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.defaultInstance)
    def withMonitorRequest(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest): CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.MonitorRequest(__v))
    def clearCommand: CommandRecorderAMI_v1 = copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.Empty)
    def withCommand(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command): CommandRecorderAMI_v1 = copy(command = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 4 => command.configStatus.orNull
        case 5 => command.bindStatus.orNull
        case 6 => command.groupStatus.orNull
        case 7 => command.chargeStatus.orNull
        case 8 => command.systemRequest.orNull
        case 9 => command.naviRequest.orNull
        case 10 => command.trackRequest.orNull
        case 11 => command.monitorRequest.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 4 => command.configStatus.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => command.bindStatus.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => command.groupStatus.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => command.chargeStatus.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => command.systemRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => command.naviRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => command.trackRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => command.monitorRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1
}

object CommandRecorderAMI_v1 extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1 = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1(
      command = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ConfigStatus) orElse
__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.BindStatus) orElse
__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.GroupStatus) orElse
__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ChargeStatus) orElse
__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.SystemRequest) orElse
__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.NaviRequest) orElse
__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.TrackRequest) orElse
__fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.MonitorRequest) getOrElse com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.Empty
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1(
        command = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ConfigStatus) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.BindStatus) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.GroupStatus) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ChargeStatus) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.SystemRequest) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.NaviRequest) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.TrackRequest) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.MonitorRequest) getOrElse com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.Empty
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiRecorderProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiRecorderProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus
      case 5 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus
      case 6 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus
      case 7 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus
      case 8 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest
      case 9 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest
      case 10 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest
      case 11 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1(
  )
  sealed trait Command extends _root_.com.trueaccord.scalapb.GeneratedOneof {
    def isEmpty: Boolean = false
    def isDefined: Boolean = true
    def isConfigStatus: Boolean = false
    def isBindStatus: Boolean = false
    def isGroupStatus: Boolean = false
    def isChargeStatus: Boolean = false
    def isSystemRequest: Boolean = false
    def isNaviRequest: Boolean = false
    def isTrackRequest: Boolean = false
    def isMonitorRequest: Boolean = false
    def configStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus] = None
    def bindStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus] = None
    def groupStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus] = None
    def chargeStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus] = None
    def systemRequest: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest] = None
    def naviRequest: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest] = None
    def trackRequest: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest] = None
    def monitorRequest: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest] = None
  }
  object Command extends {
    @SerialVersionUID(0L)
    case object Empty extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isEmpty: Boolean = true
      override def isDefined: Boolean = false
      override def number: Int = 0
      override def value: scala.Any = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    case class ConfigStatus(value: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isConfigStatus: Boolean = true
      override def configStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus] = Some(value)
      override def number: Int = 4
    }
    @SerialVersionUID(0L)
    case class BindStatus(value: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isBindStatus: Boolean = true
      override def bindStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus] = Some(value)
      override def number: Int = 5
    }
    @SerialVersionUID(0L)
    case class GroupStatus(value: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isGroupStatus: Boolean = true
      override def groupStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus] = Some(value)
      override def number: Int = 6
    }
    @SerialVersionUID(0L)
    case class ChargeStatus(value: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isChargeStatus: Boolean = true
      override def chargeStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus] = Some(value)
      override def number: Int = 7
    }
    @SerialVersionUID(0L)
    case class SystemRequest(value: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isSystemRequest: Boolean = true
      override def systemRequest: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest] = Some(value)
      override def number: Int = 8
    }
    @SerialVersionUID(0L)
    case class NaviRequest(value: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isNaviRequest: Boolean = true
      override def naviRequest: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest] = Some(value)
      override def number: Int = 9
    }
    @SerialVersionUID(0L)
    case class TrackRequest(value: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isTrackRequest: Boolean = true
      override def trackRequest: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest] = Some(value)
      override def number: Int = 10
    }
    @SerialVersionUID(0L)
    case class MonitorRequest(value: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command {
      override def isMonitorRequest: Boolean = true
      override def monitorRequest: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest] = Some(value)
      override def number: Int = 11
    }
  }
  /** * 终端设备配置参数的消息定义。
    *
    * @param mqttUrl
    *  / (必填)MQTT服务器的URL。如："tcp://mqtt.server.com:1883"
    * @param mqttTopic
    *  / (必填)MQTT上报消息的Topic。
    * @param wxStatusUrl
    *  / (必填)查询微信绑定状态的HTTP服务器的URL。
    * @param wxQrCodeUrl
    *  / (必填)返回微信绑定二维码的HTTP服务器的URL。
    * @param adjustTime
    *  / (可选)设备是否需要校准时间。当服务器发现设备上时间可能错误时，需要设置该字段为true，以便设备根据服务器时间校准设备时间。
    * @param bindStatus
    *  / (可选)设备当前绑定的用户信息。只有当设备已绑定用户时，此字段才存在。
    * @param otaStatus
    *  / (可选)OTA版本升级信息。只有当存在升级包时，此字段才存在。
    * @param userConfig
    *  / (可选)设备自定义配置信息。
    */
  @SerialVersionUID(0L)
  final case class ConfigStatus(
      mqttUrl: scala.Option[String] = None,
      mqttTopic: scala.Option[String] = None,
      wxStatusUrl: scala.Option[String] = None,
      wxQrCodeUrl: scala.Option[String] = None,
      adjustTime: scala.Option[Boolean] = None,
      bindStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus] = None,
      otaStatus: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus] = None,
      userConfig: _root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig] = _root_.scala.collection.Seq.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ConfigStatus] with com.trueaccord.lenses.Updatable[ConfigStatus] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (mqttUrl.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, mqttUrl.get) }
        if (mqttTopic.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, mqttTopic.get) }
        if (wxStatusUrl.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, wxStatusUrl.get) }
        if (wxQrCodeUrl.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, wxQrCodeUrl.get) }
        if (adjustTime.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, adjustTime.get) }
        if (bindStatus.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(bindStatus.get.serializedSize) + bindStatus.get.serializedSize }
        if (otaStatus.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(otaStatus.get.serializedSize) + otaStatus.get.serializedSize }
        userConfig.foreach(userConfig => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(userConfig.serializedSize) + userConfig.serializedSize)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        mqttUrl.foreach { __v =>
          _output__.writeString(1, __v)
        };
        mqttTopic.foreach { __v =>
          _output__.writeString(2, __v)
        };
        wxStatusUrl.foreach { __v =>
          _output__.writeString(3, __v)
        };
        wxQrCodeUrl.foreach { __v =>
          _output__.writeString(4, __v)
        };
        adjustTime.foreach { __v =>
          _output__.writeBool(5, __v)
        };
        bindStatus.foreach { __v =>
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        otaStatus.foreach { __v =>
          _output__.writeTag(7, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        userConfig.foreach { __v =>
          _output__.writeTag(8, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus = {
        var __mqttUrl = this.mqttUrl
        var __mqttTopic = this.mqttTopic
        var __wxStatusUrl = this.wxStatusUrl
        var __wxQrCodeUrl = this.wxQrCodeUrl
        var __adjustTime = this.adjustTime
        var __bindStatus = this.bindStatus
        var __otaStatus = this.otaStatus
        val __userConfig = (_root_.scala.collection.immutable.Vector.newBuilder[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig] ++= this.userConfig)
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __mqttUrl = Some(_input__.readString())
            case 18 =>
              __mqttTopic = Some(_input__.readString())
            case 26 =>
              __wxStatusUrl = Some(_input__.readString())
            case 34 =>
              __wxQrCodeUrl = Some(_input__.readString())
            case 40 =>
              __adjustTime = Some(_input__.readBool())
            case 50 =>
              __bindStatus = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __bindStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.defaultInstance)))
            case 58 =>
              __otaStatus = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __otaStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus.defaultInstance)))
            case 66 =>
              __userConfig += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig.defaultInstance)
            case tag => _input__.skipField(tag)
          }
        }
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus(
            mqttUrl = __mqttUrl,
            mqttTopic = __mqttTopic,
            wxStatusUrl = __wxStatusUrl,
            wxQrCodeUrl = __wxQrCodeUrl,
            adjustTime = __adjustTime,
            bindStatus = __bindStatus,
            otaStatus = __otaStatus,
            userConfig = __userConfig.result()
        )
      }
      def getMqttUrl: String = mqttUrl.getOrElse("")
      def clearMqttUrl: ConfigStatus = copy(mqttUrl = None)
      def withMqttUrl(__v: String): ConfigStatus = copy(mqttUrl = Some(__v))
      def getMqttTopic: String = mqttTopic.getOrElse("")
      def clearMqttTopic: ConfigStatus = copy(mqttTopic = None)
      def withMqttTopic(__v: String): ConfigStatus = copy(mqttTopic = Some(__v))
      def getWxStatusUrl: String = wxStatusUrl.getOrElse("")
      def clearWxStatusUrl: ConfigStatus = copy(wxStatusUrl = None)
      def withWxStatusUrl(__v: String): ConfigStatus = copy(wxStatusUrl = Some(__v))
      def getWxQrCodeUrl: String = wxQrCodeUrl.getOrElse("")
      def clearWxQrCodeUrl: ConfigStatus = copy(wxQrCodeUrl = None)
      def withWxQrCodeUrl(__v: String): ConfigStatus = copy(wxQrCodeUrl = Some(__v))
      def getAdjustTime: Boolean = adjustTime.getOrElse(false)
      def clearAdjustTime: ConfigStatus = copy(adjustTime = None)
      def withAdjustTime(__v: Boolean): ConfigStatus = copy(adjustTime = Some(__v))
      def getBindStatus: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus = bindStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.defaultInstance)
      def clearBindStatus: ConfigStatus = copy(bindStatus = None)
      def withBindStatus(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus): ConfigStatus = copy(bindStatus = Some(__v))
      def getOtaStatus: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus = otaStatus.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus.defaultInstance)
      def clearOtaStatus: ConfigStatus = copy(otaStatus = None)
      def withOtaStatus(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus): ConfigStatus = copy(otaStatus = Some(__v))
      def clearUserConfig = copy(userConfig = _root_.scala.collection.Seq.empty)
      def addUserConfig(__vs: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig*): ConfigStatus = addAllUserConfig(__vs)
      def addAllUserConfig(__vs: TraversableOnce[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig]): ConfigStatus = copy(userConfig = userConfig ++ __vs)
      def withUserConfig(__v: _root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig]): ConfigStatus = copy(userConfig = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => mqttUrl.orNull
          case 2 => mqttTopic.orNull
          case 3 => wxStatusUrl.orNull
          case 4 => wxQrCodeUrl.orNull
          case 5 => adjustTime.orNull
          case 6 => bindStatus.orNull
          case 7 => otaStatus.orNull
          case 8 => userConfig
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => mqttUrl.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => mqttTopic.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => wxStatusUrl.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => wxQrCodeUrl.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => adjustTime.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 6 => bindStatus.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 7 => otaStatus.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 8 => _root_.scalapb.descriptors.PRepeated(userConfig.map(_.toPMessage)(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus
  }
  
  object ConfigStatus extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus]],
        __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus]],
        __fieldsMap.getOrElse(__fields.get(7), Nil).asInstanceOf[_root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 6 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus
        case 7 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus
        case 8 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus(
    )
    /** * OTA升级信息的消息定义。
      *
      * @param version
      *  / (必填)软件版本号。
      * @param updateInfo
      *  / (必填)软件更新信息。
      * @param downloadUrl
      *  / (必填)更新下载地址。
      * @param fileSize
      *  / (必填)更新文件大小。
      * @param fileMd5
      *  / (可选)更新文件MD5校验。
      * @param forceUpdate
      *  / (可选)是否强制升级。缺省为false。
      */
    @SerialVersionUID(0L)
    final case class OtaStatus(
        version: scala.Option[String] = None,
        updateInfo: scala.Option[String] = None,
        downloadUrl: scala.Option[String] = None,
        fileSize: scala.Option[Long] = None,
        fileMd5: scala.Option[String] = None,
        forceUpdate: scala.Option[Boolean] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[OtaStatus] with com.trueaccord.lenses.Updatable[OtaStatus] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (version.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, version.get) }
          if (updateInfo.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, updateInfo.get) }
          if (downloadUrl.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, downloadUrl.get) }
          if (fileSize.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(4, fileSize.get) }
          if (fileMd5.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, fileMd5.get) }
          if (forceUpdate.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(6, forceUpdate.get) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          version.foreach { __v =>
            _output__.writeString(1, __v)
          };
          updateInfo.foreach { __v =>
            _output__.writeString(2, __v)
          };
          downloadUrl.foreach { __v =>
            _output__.writeString(3, __v)
          };
          fileSize.foreach { __v =>
            _output__.writeUInt64(4, __v)
          };
          fileMd5.foreach { __v =>
            _output__.writeString(5, __v)
          };
          forceUpdate.foreach { __v =>
            _output__.writeBool(6, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus = {
          var __version = this.version
          var __updateInfo = this.updateInfo
          var __downloadUrl = this.downloadUrl
          var __fileSize = this.fileSize
          var __fileMd5 = this.fileMd5
          var __forceUpdate = this.forceUpdate
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __version = Some(_input__.readString())
              case 18 =>
                __updateInfo = Some(_input__.readString())
              case 26 =>
                __downloadUrl = Some(_input__.readString())
              case 32 =>
                __fileSize = Some(_input__.readUInt64())
              case 42 =>
                __fileMd5 = Some(_input__.readString())
              case 48 =>
                __forceUpdate = Some(_input__.readBool())
              case tag => _input__.skipField(tag)
            }
          }
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus(
              version = __version,
              updateInfo = __updateInfo,
              downloadUrl = __downloadUrl,
              fileSize = __fileSize,
              fileMd5 = __fileMd5,
              forceUpdate = __forceUpdate
          )
        }
        def getVersion: String = version.getOrElse("")
        def clearVersion: OtaStatus = copy(version = None)
        def withVersion(__v: String): OtaStatus = copy(version = Some(__v))
        def getUpdateInfo: String = updateInfo.getOrElse("")
        def clearUpdateInfo: OtaStatus = copy(updateInfo = None)
        def withUpdateInfo(__v: String): OtaStatus = copy(updateInfo = Some(__v))
        def getDownloadUrl: String = downloadUrl.getOrElse("")
        def clearDownloadUrl: OtaStatus = copy(downloadUrl = None)
        def withDownloadUrl(__v: String): OtaStatus = copy(downloadUrl = Some(__v))
        def getFileSize: Long = fileSize.getOrElse(0L)
        def clearFileSize: OtaStatus = copy(fileSize = None)
        def withFileSize(__v: Long): OtaStatus = copy(fileSize = Some(__v))
        def getFileMd5: String = fileMd5.getOrElse("")
        def clearFileMd5: OtaStatus = copy(fileMd5 = None)
        def withFileMd5(__v: String): OtaStatus = copy(fileMd5 = Some(__v))
        def getForceUpdate: Boolean = forceUpdate.getOrElse(false)
        def clearForceUpdate: OtaStatus = copy(forceUpdate = None)
        def withForceUpdate(__v: Boolean): OtaStatus = copy(forceUpdate = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => version.orNull
            case 2 => updateInfo.orNull
            case 3 => downloadUrl.orNull
            case 4 => fileSize.orNull
            case 5 => fileMd5.orNull
            case 6 => forceUpdate.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => version.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => updateInfo.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 3 => downloadUrl.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 4 => fileSize.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 5 => fileMd5.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 6 => forceUpdate.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
        def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus
    }
    
    object OtaStatus extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[Long]],
          __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[Boolean]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[Long]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[Boolean]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus(
      )
      implicit class OtaStatusLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus](_l) {
        def version: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getVersion)((c_, f_) => c_.copy(version = Some(f_)))
        def optionalVersion: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.version)((c_, f_) => c_.copy(version = f_))
        def updateInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getUpdateInfo)((c_, f_) => c_.copy(updateInfo = Some(f_)))
        def optionalUpdateInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.updateInfo)((c_, f_) => c_.copy(updateInfo = f_))
        def downloadUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getDownloadUrl)((c_, f_) => c_.copy(downloadUrl = Some(f_)))
        def optionalDownloadUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.downloadUrl)((c_, f_) => c_.copy(downloadUrl = f_))
        def fileSize: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getFileSize)((c_, f_) => c_.copy(fileSize = Some(f_)))
        def optionalFileSize: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.fileSize)((c_, f_) => c_.copy(fileSize = f_))
        def fileMd5: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getFileMd5)((c_, f_) => c_.copy(fileMd5 = Some(f_)))
        def optionalFileMd5: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.fileMd5)((c_, f_) => c_.copy(fileMd5 = f_))
        def forceUpdate: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getForceUpdate)((c_, f_) => c_.copy(forceUpdate = Some(f_)))
        def optionalForceUpdate: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.forceUpdate)((c_, f_) => c_.copy(forceUpdate = f_))
      }
      final val VERSION_FIELD_NUMBER = 1
      final val UPDATEINFO_FIELD_NUMBER = 2
      final val DOWNLOADURL_FIELD_NUMBER = 3
      final val FILESIZE_FIELD_NUMBER = 4
      final val FILEMD5_FIELD_NUMBER = 5
      final val FORCEUPDATE_FIELD_NUMBER = 6
    }
    
    /** * 设备自定义配置信息的消息定义。
      *
      * @param name
      *  / (必填)设置的名称
      * @param value
      *  / (必填)设置的参数
      */
    @SerialVersionUID(0L)
    final case class UserConfig(
        name: String,
        value: String
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[UserConfig] with com.trueaccord.lenses.Updatable[UserConfig] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, name)
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, value)
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          _output__.writeString(1, name)
          _output__.writeString(2, value)
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig = {
          var __name = this.name
          var __value = this.value
          var __requiredFields0: Long = 0x3L
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __name = _input__.readString()
                __requiredFields0 &= 0xfffffffffffffffeL
              case 18 =>
                __value = _input__.readString()
                __requiredFields0 &= 0xfffffffffffffffdL
              case tag => _input__.skipField(tag)
            }
          }
          if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig(
              name = __name,
              value = __value
          )
        }
        def withName(__v: String): UserConfig = copy(name = __v)
        def withValue(__v: String): UserConfig = copy(value = __v)
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => name
            case 2 => value
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => _root_.scalapb.descriptors.PString(name)
            case 2 => _root_.scalapb.descriptors.PString(value)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
        def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig
    }
    
    object UserConfig extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig(
          __fieldsMap(__fields.get(0)).asInstanceOf[String],
          __fieldsMap(__fields.get(1)).asInstanceOf[String]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String]
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.javaDescriptor.getNestedTypes.get(1)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.scalaDescriptor.nestedMessages(1)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig(
        name = "",
        value = ""
      )
      implicit class UserConfigLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig](_l) {
        def name: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.name)((c_, f_) => c_.copy(name = f_))
        def value: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.value)((c_, f_) => c_.copy(value = f_))
      }
      final val NAME_FIELD_NUMBER = 1
      final val VALUE_FIELD_NUMBER = 2
    }
    
    implicit class ConfigStatusLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus](_l) {
      def mqttUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getMqttUrl)((c_, f_) => c_.copy(mqttUrl = Some(f_)))
      def optionalMqttUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.mqttUrl)((c_, f_) => c_.copy(mqttUrl = f_))
      def mqttTopic: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getMqttTopic)((c_, f_) => c_.copy(mqttTopic = Some(f_)))
      def optionalMqttTopic: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.mqttTopic)((c_, f_) => c_.copy(mqttTopic = f_))
      def wxStatusUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getWxStatusUrl)((c_, f_) => c_.copy(wxStatusUrl = Some(f_)))
      def optionalWxStatusUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.wxStatusUrl)((c_, f_) => c_.copy(wxStatusUrl = f_))
      def wxQrCodeUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getWxQrCodeUrl)((c_, f_) => c_.copy(wxQrCodeUrl = Some(f_)))
      def optionalWxQrCodeUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.wxQrCodeUrl)((c_, f_) => c_.copy(wxQrCodeUrl = f_))
      def adjustTime: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getAdjustTime)((c_, f_) => c_.copy(adjustTime = Some(f_)))
      def optionalAdjustTime: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.adjustTime)((c_, f_) => c_.copy(adjustTime = f_))
      def bindStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus] = field(_.getBindStatus)((c_, f_) => c_.copy(bindStatus = Some(f_)))
      def optionalBindStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus]] = field(_.bindStatus)((c_, f_) => c_.copy(bindStatus = f_))
      def otaStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus] = field(_.getOtaStatus)((c_, f_) => c_.copy(otaStatus = Some(f_)))
      def optionalOtaStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.OtaStatus]] = field(_.otaStatus)((c_, f_) => c_.copy(otaStatus = f_))
      def userConfig: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus.UserConfig]] = field(_.userConfig)((c_, f_) => c_.copy(userConfig = f_))
    }
    final val MQTTURL_FIELD_NUMBER = 1
    final val MQTTTOPIC_FIELD_NUMBER = 2
    final val WXSTATUSURL_FIELD_NUMBER = 3
    final val WXQRCODEURL_FIELD_NUMBER = 4
    final val ADJUSTTIME_FIELD_NUMBER = 5
    final val BINDSTATUS_FIELD_NUMBER = 6
    final val OTASTATUS_FIELD_NUMBER = 7
    final val USERCONFIG_FIELD_NUMBER = 8
  }
  
  /** * 用户绑定/解绑状态通知消息的消息定义。
    *
    * @param bindStatus
    *  / (必填)用户绑定状态。true为已绑定，false为未绑定。
    * @param timestamp
    *  / (可选)绑定/解绑时间。若用户已绑定,则为绑定时间；若已解绑,则为解绑时间；若未绑定，则为空。
    * @param phone
    *  / (可选)绑定用户的手机号码。如果不能获取到，则为空。
    * @param email
    *  / (可选)绑定用户的邮箱。如果不能获取到，则为空。
    * @param qq
    *  / (可选)绑定用户的QQ信息。如果不能获取到，则为空。
    * @param weixin
    *  / (可选)绑定用户的微信信息。如果不能获取到，则为空。
    * @param weibo
    *  / (可选)绑定用户的微博信息。如果不能获取到，则为空。
    * @param other
    *  / (可选)绑定用户的其他信息。如果不能获取到，则为空。
    */
  @SerialVersionUID(0L)
  final case class BindStatus(
      bindStatus: scala.Option[Boolean] = None,
      timestamp: scala.Option[Long] = None,
      phone: scala.Option[String] = None,
      email: scala.Option[String] = None,
      qq: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = None,
      weixin: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = None,
      weibo: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = None,
      other: scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[BindStatus] with com.trueaccord.lenses.Updatable[BindStatus] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (bindStatus.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, bindStatus.get) }
        if (timestamp.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, timestamp.get) }
        if (phone.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, phone.get) }
        if (email.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, email.get) }
        if (qq.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(qq.get.serializedSize) + qq.get.serializedSize }
        if (weixin.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(weixin.get.serializedSize) + weixin.get.serializedSize }
        if (weibo.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(weibo.get.serializedSize) + weibo.get.serializedSize }
        if (other.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(other.get.serializedSize) + other.get.serializedSize }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        bindStatus.foreach { __v =>
          _output__.writeBool(1, __v)
        };
        timestamp.foreach { __v =>
          _output__.writeUInt64(2, __v)
        };
        phone.foreach { __v =>
          _output__.writeString(3, __v)
        };
        email.foreach { __v =>
          _output__.writeString(4, __v)
        };
        qq.foreach { __v =>
          _output__.writeTag(5, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        weixin.foreach { __v =>
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        weibo.foreach { __v =>
          _output__.writeTag(7, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        other.foreach { __v =>
          _output__.writeTag(8, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus = {
        var __bindStatus = this.bindStatus
        var __timestamp = this.timestamp
        var __phone = this.phone
        var __email = this.email
        var __qq = this.qq
        var __weixin = this.weixin
        var __weibo = this.weibo
        var __other = this.other
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __bindStatus = Some(_input__.readBool())
            case 16 =>
              __timestamp = Some(_input__.readUInt64())
            case 26 =>
              __phone = Some(_input__.readString())
            case 34 =>
              __email = Some(_input__.readString())
            case 42 =>
              __qq = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __qq.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo.defaultInstance)))
            case 50 =>
              __weixin = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __weixin.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo.defaultInstance)))
            case 58 =>
              __weibo = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __weibo.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo.defaultInstance)))
            case 66 =>
              __other = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __other.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus(
            bindStatus = __bindStatus,
            timestamp = __timestamp,
            phone = __phone,
            email = __email,
            qq = __qq,
            weixin = __weixin,
            weibo = __weibo,
            other = __other
        )
      }
      def getBindStatus: Boolean = bindStatus.getOrElse(false)
      def clearBindStatus: BindStatus = copy(bindStatus = None)
      def withBindStatus(__v: Boolean): BindStatus = copy(bindStatus = Some(__v))
      def getTimestamp: Long = timestamp.getOrElse(0L)
      def clearTimestamp: BindStatus = copy(timestamp = None)
      def withTimestamp(__v: Long): BindStatus = copy(timestamp = Some(__v))
      def getPhone: String = phone.getOrElse("")
      def clearPhone: BindStatus = copy(phone = None)
      def withPhone(__v: String): BindStatus = copy(phone = Some(__v))
      def getEmail: String = email.getOrElse("")
      def clearEmail: BindStatus = copy(email = None)
      def withEmail(__v: String): BindStatus = copy(email = Some(__v))
      def getQq: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo = qq.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo.defaultInstance)
      def clearQq: BindStatus = copy(qq = None)
      def withQq(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo): BindStatus = copy(qq = Some(__v))
      def getWeixin: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo = weixin.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo.defaultInstance)
      def clearWeixin: BindStatus = copy(weixin = None)
      def withWeixin(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo): BindStatus = copy(weixin = Some(__v))
      def getWeibo: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo = weibo.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo.defaultInstance)
      def clearWeibo: BindStatus = copy(weibo = None)
      def withWeibo(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo): BindStatus = copy(weibo = Some(__v))
      def getOther: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo = other.getOrElse(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo.defaultInstance)
      def clearOther: BindStatus = copy(other = None)
      def withOther(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo): BindStatus = copy(other = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => bindStatus.orNull
          case 2 => timestamp.orNull
          case 3 => phone.orNull
          case 4 => email.orNull
          case 5 => qq.orNull
          case 6 => weixin.orNull
          case 7 => weibo.orNull
          case 8 => other.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => bindStatus.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => timestamp.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => phone.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => email.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => qq.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 6 => weixin.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 7 => weibo.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 8 => other.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus
  }
  
  object BindStatus extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Long]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]],
        __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]],
        __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]],
        __fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Long]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 5 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo
        case 6 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo
        case 7 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo
        case 8 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus(
    )
    /** * 用户信息的消息定义。
      *
      * @param openId
      *  / (可选)公开API返回的用户id。如果不能获取到，则为空。
      * @param nickName
      *  / (可选)用户的昵称。如果不能获取到，则为空。
      * @param avatarUrl
      *  / (可选)用户头像的URL。如果不能获取到，则为空。
      * @param avatarPic
      *  / (可选)用户头像的数据。如果不能获取到，则为空。
      * @param sex
      *  / (可选)用户的性别，'M'为男性，'F'为女性。如果不能获取到，则为空。
      * @param location
      *  / (可选)用户所在的区域。如果不能获取到，则为空。
      * @param language
      *  / (可选)用户使用的语言。如果不能获取到，则为空。
      */
    @SerialVersionUID(0L)
    final case class UserInfo(
        openId: scala.Option[String] = None,
        nickName: scala.Option[String] = None,
        avatarUrl: scala.Option[String] = None,
        avatarPic: scala.Option[_root_.com.google.protobuf.ByteString] = None,
        sex: scala.Option[String] = None,
        location: scala.Option[String] = None,
        language: scala.Option[String] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[UserInfo] with com.trueaccord.lenses.Updatable[UserInfo] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (openId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, openId.get) }
          if (nickName.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, nickName.get) }
          if (avatarUrl.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, avatarUrl.get) }
          if (avatarPic.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, avatarPic.get) }
          if (sex.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, sex.get) }
          if (location.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, location.get) }
          if (language.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, language.get) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          openId.foreach { __v =>
            _output__.writeString(1, __v)
          };
          nickName.foreach { __v =>
            _output__.writeString(2, __v)
          };
          avatarUrl.foreach { __v =>
            _output__.writeString(3, __v)
          };
          avatarPic.foreach { __v =>
            _output__.writeBytes(4, __v)
          };
          sex.foreach { __v =>
            _output__.writeString(5, __v)
          };
          location.foreach { __v =>
            _output__.writeString(6, __v)
          };
          language.foreach { __v =>
            _output__.writeString(7, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo = {
          var __openId = this.openId
          var __nickName = this.nickName
          var __avatarUrl = this.avatarUrl
          var __avatarPic = this.avatarPic
          var __sex = this.sex
          var __location = this.location
          var __language = this.language
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __openId = Some(_input__.readString())
              case 18 =>
                __nickName = Some(_input__.readString())
              case 26 =>
                __avatarUrl = Some(_input__.readString())
              case 34 =>
                __avatarPic = Some(_input__.readBytes())
              case 42 =>
                __sex = Some(_input__.readString())
              case 50 =>
                __location = Some(_input__.readString())
              case 58 =>
                __language = Some(_input__.readString())
              case tag => _input__.skipField(tag)
            }
          }
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo(
              openId = __openId,
              nickName = __nickName,
              avatarUrl = __avatarUrl,
              avatarPic = __avatarPic,
              sex = __sex,
              location = __location,
              language = __language
          )
        }
        def getOpenId: String = openId.getOrElse("")
        def clearOpenId: UserInfo = copy(openId = None)
        def withOpenId(__v: String): UserInfo = copy(openId = Some(__v))
        def getNickName: String = nickName.getOrElse("")
        def clearNickName: UserInfo = copy(nickName = None)
        def withNickName(__v: String): UserInfo = copy(nickName = Some(__v))
        def getAvatarUrl: String = avatarUrl.getOrElse("")
        def clearAvatarUrl: UserInfo = copy(avatarUrl = None)
        def withAvatarUrl(__v: String): UserInfo = copy(avatarUrl = Some(__v))
        def getAvatarPic: _root_.com.google.protobuf.ByteString = avatarPic.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
        def clearAvatarPic: UserInfo = copy(avatarPic = None)
        def withAvatarPic(__v: _root_.com.google.protobuf.ByteString): UserInfo = copy(avatarPic = Some(__v))
        def getSex: String = sex.getOrElse("")
        def clearSex: UserInfo = copy(sex = None)
        def withSex(__v: String): UserInfo = copy(sex = Some(__v))
        def getLocation: String = location.getOrElse("")
        def clearLocation: UserInfo = copy(location = None)
        def withLocation(__v: String): UserInfo = copy(location = Some(__v))
        def getLanguage: String = language.getOrElse("")
        def clearLanguage: UserInfo = copy(language = None)
        def withLanguage(__v: String): UserInfo = copy(language = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => openId.orNull
            case 2 => nickName.orNull
            case 3 => avatarUrl.orNull
            case 4 => avatarPic.orNull
            case 5 => sex.orNull
            case 6 => location.orNull
            case 7 => language.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => openId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => nickName.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 3 => avatarUrl.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 4 => avatarPic.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 5 => sex.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 6 => location.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 7 => language.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
        def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo
    }
    
    object UserInfo extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
          __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[String]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[String]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo(
      )
      implicit class UserInfoLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo](_l) {
        def openId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getOpenId)((c_, f_) => c_.copy(openId = Some(f_)))
        def optionalOpenId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.openId)((c_, f_) => c_.copy(openId = f_))
        def nickName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getNickName)((c_, f_) => c_.copy(nickName = Some(f_)))
        def optionalNickName: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.nickName)((c_, f_) => c_.copy(nickName = f_))
        def avatarUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getAvatarUrl)((c_, f_) => c_.copy(avatarUrl = Some(f_)))
        def optionalAvatarUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.avatarUrl)((c_, f_) => c_.copy(avatarUrl = f_))
        def avatarPic: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getAvatarPic)((c_, f_) => c_.copy(avatarPic = Some(f_)))
        def optionalAvatarPic: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.avatarPic)((c_, f_) => c_.copy(avatarPic = f_))
        def sex: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getSex)((c_, f_) => c_.copy(sex = Some(f_)))
        def optionalSex: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.sex)((c_, f_) => c_.copy(sex = f_))
        def location: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getLocation)((c_, f_) => c_.copy(location = Some(f_)))
        def optionalLocation: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.location)((c_, f_) => c_.copy(location = f_))
        def language: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getLanguage)((c_, f_) => c_.copy(language = Some(f_)))
        def optionalLanguage: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.language)((c_, f_) => c_.copy(language = f_))
      }
      final val OPENID_FIELD_NUMBER = 1
      final val NICKNAME_FIELD_NUMBER = 2
      final val AVATARURL_FIELD_NUMBER = 3
      final val AVATARPIC_FIELD_NUMBER = 4
      final val SEX_FIELD_NUMBER = 5
      final val LOCATION_FIELD_NUMBER = 6
      final val LANGUAGE_FIELD_NUMBER = 7
    }
    
    implicit class BindStatusLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus](_l) {
      def bindStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getBindStatus)((c_, f_) => c_.copy(bindStatus = Some(f_)))
      def optionalBindStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.bindStatus)((c_, f_) => c_.copy(bindStatus = f_))
      def timestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getTimestamp)((c_, f_) => c_.copy(timestamp = Some(f_)))
      def optionalTimestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
      def phone: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPhone)((c_, f_) => c_.copy(phone = Some(f_)))
      def optionalPhone: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.phone)((c_, f_) => c_.copy(phone = f_))
      def email: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getEmail)((c_, f_) => c_.copy(email = Some(f_)))
      def optionalEmail: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.email)((c_, f_) => c_.copy(email = f_))
      def qq: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = field(_.getQq)((c_, f_) => c_.copy(qq = Some(f_)))
      def optionalQq: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]] = field(_.qq)((c_, f_) => c_.copy(qq = f_))
      def weixin: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = field(_.getWeixin)((c_, f_) => c_.copy(weixin = Some(f_)))
      def optionalWeixin: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]] = field(_.weixin)((c_, f_) => c_.copy(weixin = f_))
      def weibo: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = field(_.getWeibo)((c_, f_) => c_.copy(weibo = Some(f_)))
      def optionalWeibo: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]] = field(_.weibo)((c_, f_) => c_.copy(weibo = f_))
      def other: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo] = field(_.getOther)((c_, f_) => c_.copy(other = Some(f_)))
      def optionalOther: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus.UserInfo]] = field(_.other)((c_, f_) => c_.copy(other = f_))
    }
    final val BINDSTATUS_FIELD_NUMBER = 1
    final val TIMESTAMP_FIELD_NUMBER = 2
    final val PHONE_FIELD_NUMBER = 3
    final val EMAIL_FIELD_NUMBER = 4
    final val QQ_FIELD_NUMBER = 5
    final val WEIXIN_FIELD_NUMBER = 6
    final val WEIBO_FIELD_NUMBER = 7
    final val OTHER_FIELD_NUMBER = 8
  }
  
  /** * 群组加入/退出状态通知的消息定义。
    *
    * @param groupStatus
    *  / (必填)群组状态。true为加入群组，false为退出群组。
    * @param groupId
    *  / (可选)群组的id。
    * @param groupName
    *  / (必填)群组的名称。
    */
  @SerialVersionUID(0L)
  final case class GroupStatus(
      groupStatus: scala.Option[Boolean] = None,
      groupId: scala.Option[String] = None,
      groupName: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[GroupStatus] with com.trueaccord.lenses.Updatable[GroupStatus] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (groupStatus.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, groupStatus.get) }
        if (groupId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, groupId.get) }
        if (groupName.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, groupName.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        groupStatus.foreach { __v =>
          _output__.writeBool(1, __v)
        };
        groupId.foreach { __v =>
          _output__.writeString(2, __v)
        };
        groupName.foreach { __v =>
          _output__.writeString(3, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus = {
        var __groupStatus = this.groupStatus
        var __groupId = this.groupId
        var __groupName = this.groupName
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __groupStatus = Some(_input__.readBool())
            case 18 =>
              __groupId = Some(_input__.readString())
            case 26 =>
              __groupName = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus(
            groupStatus = __groupStatus,
            groupId = __groupId,
            groupName = __groupName
        )
      }
      def getGroupStatus: Boolean = groupStatus.getOrElse(false)
      def clearGroupStatus: GroupStatus = copy(groupStatus = None)
      def withGroupStatus(__v: Boolean): GroupStatus = copy(groupStatus = Some(__v))
      def getGroupId: String = groupId.getOrElse("")
      def clearGroupId: GroupStatus = copy(groupId = None)
      def withGroupId(__v: String): GroupStatus = copy(groupId = Some(__v))
      def getGroupName: String = groupName.getOrElse("")
      def clearGroupName: GroupStatus = copy(groupName = None)
      def withGroupName(__v: String): GroupStatus = copy(groupName = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => groupStatus.orNull
          case 2 => groupId.orNull
          case 3 => groupName.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => groupStatus.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => groupId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => groupName.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus
  }
  
  object GroupStatus extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.javaDescriptor.getNestedTypes.get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus(
    )
    implicit class GroupStatusLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus](_l) {
      def groupStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getGroupStatus)((c_, f_) => c_.copy(groupStatus = Some(f_)))
      def optionalGroupStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.groupStatus)((c_, f_) => c_.copy(groupStatus = f_))
      def groupId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getGroupId)((c_, f_) => c_.copy(groupId = Some(f_)))
      def optionalGroupId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.groupId)((c_, f_) => c_.copy(groupId = f_))
      def groupName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getGroupName)((c_, f_) => c_.copy(groupName = Some(f_)))
      def optionalGroupName: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.groupName)((c_, f_) => c_.copy(groupName = f_))
    }
    final val GROUPSTATUS_FIELD_NUMBER = 1
    final val GROUPID_FIELD_NUMBER = 2
    final val GROUPNAME_FIELD_NUMBER = 3
  }
  
  /** * 设备SIM卡计费信息通知的消息定义。
    *
    * @param monthAlert
    *  / (可选)本月流量是否告警。缺省为false。
    * @param monthUsage
    *  / (必填)本月使用流量。单位：KB。
    * @param monthLeft
    *  / (必填)本月剩余流量。单位：KB。
    * @param totalAlert
    *  / (可选)累积流量是否告警。缺省为false。
    * @param totalUsage
    *  / (必填)累积使用流量。单位：KB。
    * @param totalLeft
    *  / (必填)累积剩余流量。单位：KB。
    * @param chargeInfo
    *  / (必填)套餐情况。
    */
  @SerialVersionUID(0L)
  final case class ChargeStatus(
      monthAlert: scala.Option[Boolean] = None,
      monthUsage: scala.Option[Int] = None,
      monthLeft: scala.Option[Int] = None,
      totalAlert: scala.Option[Boolean] = None,
      totalUsage: scala.Option[Int] = None,
      totalLeft: scala.Option[Int] = None,
      chargeInfo: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ChargeStatus] with com.trueaccord.lenses.Updatable[ChargeStatus] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (monthAlert.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, monthAlert.get) }
        if (monthUsage.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(2, monthUsage.get) }
        if (monthLeft.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(3, monthLeft.get) }
        if (totalAlert.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, totalAlert.get) }
        if (totalUsage.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(5, totalUsage.get) }
        if (totalLeft.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(6, totalLeft.get) }
        if (chargeInfo.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, chargeInfo.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        monthAlert.foreach { __v =>
          _output__.writeBool(1, __v)
        };
        monthUsage.foreach { __v =>
          _output__.writeUInt32(2, __v)
        };
        monthLeft.foreach { __v =>
          _output__.writeUInt32(3, __v)
        };
        totalAlert.foreach { __v =>
          _output__.writeBool(4, __v)
        };
        totalUsage.foreach { __v =>
          _output__.writeUInt32(5, __v)
        };
        totalLeft.foreach { __v =>
          _output__.writeUInt32(6, __v)
        };
        chargeInfo.foreach { __v =>
          _output__.writeString(7, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus = {
        var __monthAlert = this.monthAlert
        var __monthUsage = this.monthUsage
        var __monthLeft = this.monthLeft
        var __totalAlert = this.totalAlert
        var __totalUsage = this.totalUsage
        var __totalLeft = this.totalLeft
        var __chargeInfo = this.chargeInfo
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __monthAlert = Some(_input__.readBool())
            case 16 =>
              __monthUsage = Some(_input__.readUInt32())
            case 24 =>
              __monthLeft = Some(_input__.readUInt32())
            case 32 =>
              __totalAlert = Some(_input__.readBool())
            case 40 =>
              __totalUsage = Some(_input__.readUInt32())
            case 48 =>
              __totalLeft = Some(_input__.readUInt32())
            case 58 =>
              __chargeInfo = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus(
            monthAlert = __monthAlert,
            monthUsage = __monthUsage,
            monthLeft = __monthLeft,
            totalAlert = __totalAlert,
            totalUsage = __totalUsage,
            totalLeft = __totalLeft,
            chargeInfo = __chargeInfo
        )
      }
      def getMonthAlert: Boolean = monthAlert.getOrElse(false)
      def clearMonthAlert: ChargeStatus = copy(monthAlert = None)
      def withMonthAlert(__v: Boolean): ChargeStatus = copy(monthAlert = Some(__v))
      def getMonthUsage: Int = monthUsage.getOrElse(0)
      def clearMonthUsage: ChargeStatus = copy(monthUsage = None)
      def withMonthUsage(__v: Int): ChargeStatus = copy(monthUsage = Some(__v))
      def getMonthLeft: Int = monthLeft.getOrElse(0)
      def clearMonthLeft: ChargeStatus = copy(monthLeft = None)
      def withMonthLeft(__v: Int): ChargeStatus = copy(monthLeft = Some(__v))
      def getTotalAlert: Boolean = totalAlert.getOrElse(false)
      def clearTotalAlert: ChargeStatus = copy(totalAlert = None)
      def withTotalAlert(__v: Boolean): ChargeStatus = copy(totalAlert = Some(__v))
      def getTotalUsage: Int = totalUsage.getOrElse(0)
      def clearTotalUsage: ChargeStatus = copy(totalUsage = None)
      def withTotalUsage(__v: Int): ChargeStatus = copy(totalUsage = Some(__v))
      def getTotalLeft: Int = totalLeft.getOrElse(0)
      def clearTotalLeft: ChargeStatus = copy(totalLeft = None)
      def withTotalLeft(__v: Int): ChargeStatus = copy(totalLeft = Some(__v))
      def getChargeInfo: String = chargeInfo.getOrElse("")
      def clearChargeInfo: ChargeStatus = copy(chargeInfo = None)
      def withChargeInfo(__v: String): ChargeStatus = copy(chargeInfo = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => monthAlert.orNull
          case 2 => monthUsage.orNull
          case 3 => monthLeft.orNull
          case 4 => totalAlert.orNull
          case 5 => totalUsage.orNull
          case 6 => totalLeft.orNull
          case 7 => chargeInfo.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => monthAlert.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => monthUsage.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => monthLeft.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => totalAlert.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => totalUsage.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 6 => totalLeft.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 7 => chargeInfo.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus
  }
  
  object ChargeStatus extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.javaDescriptor.getNestedTypes.get(3)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.scalaDescriptor.nestedMessages(3)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus(
    )
    implicit class ChargeStatusLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus](_l) {
      def monthAlert: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getMonthAlert)((c_, f_) => c_.copy(monthAlert = Some(f_)))
      def optionalMonthAlert: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.monthAlert)((c_, f_) => c_.copy(monthAlert = f_))
      def monthUsage: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMonthUsage)((c_, f_) => c_.copy(monthUsage = Some(f_)))
      def optionalMonthUsage: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.monthUsage)((c_, f_) => c_.copy(monthUsage = f_))
      def monthLeft: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMonthLeft)((c_, f_) => c_.copy(monthLeft = Some(f_)))
      def optionalMonthLeft: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.monthLeft)((c_, f_) => c_.copy(monthLeft = f_))
      def totalAlert: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getTotalAlert)((c_, f_) => c_.copy(totalAlert = Some(f_)))
      def optionalTotalAlert: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.totalAlert)((c_, f_) => c_.copy(totalAlert = f_))
      def totalUsage: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getTotalUsage)((c_, f_) => c_.copy(totalUsage = Some(f_)))
      def optionalTotalUsage: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.totalUsage)((c_, f_) => c_.copy(totalUsage = f_))
      def totalLeft: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getTotalLeft)((c_, f_) => c_.copy(totalLeft = Some(f_)))
      def optionalTotalLeft: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.totalLeft)((c_, f_) => c_.copy(totalLeft = f_))
      def chargeInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getChargeInfo)((c_, f_) => c_.copy(chargeInfo = Some(f_)))
      def optionalChargeInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.chargeInfo)((c_, f_) => c_.copy(chargeInfo = f_))
    }
    final val MONTHALERT_FIELD_NUMBER = 1
    final val MONTHUSAGE_FIELD_NUMBER = 2
    final val MONTHLEFT_FIELD_NUMBER = 3
    final val TOTALALERT_FIELD_NUMBER = 4
    final val TOTALUSAGE_FIELD_NUMBER = 5
    final val TOTALLEFT_FIELD_NUMBER = 6
    final val CHARGEINFO_FIELD_NUMBER = 7
  }
  
  /** * 系统操作请求的消息定义。
    *
    * @param requestId
    *  / (必填)请求消息ID。上行的请求应答消息必须使用此ID。
    * @param requestType
    *  / (必填)请求类型。
    * @param paramName
    *  / (可选)请求的参数名称。
    * @param paramValue
    *  / (可选)请求的参数数据。
    */
  @SerialVersionUID(0L)
  final case class SystemRequest(
      requestId: Long,
      requestType: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType,
      paramName: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty,
      paramValue: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[SystemRequest] with com.trueaccord.lenses.Updatable[SystemRequest] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, requestId)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, requestType.value)
        paramName.foreach(paramName => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, paramName))
        paramValue.foreach(paramValue => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, paramValue))
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeUInt64(1, requestId)
        _output__.writeEnum(2, requestType.value)
        paramName.foreach { __v =>
          _output__.writeString(3, __v)
        };
        paramValue.foreach { __v =>
          _output__.writeString(4, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest = {
        var __requestId = this.requestId
        var __requestType = this.requestType
        val __paramName = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.paramName)
        val __paramValue = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.paramValue)
        var __requiredFields0: Long = 0x3L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __requestId = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 16 =>
              __requestType = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType.fromValue(_input__.readEnum())
              __requiredFields0 &= 0xfffffffffffffffdL
            case 26 =>
              __paramName += _input__.readString()
            case 34 =>
              __paramValue += _input__.readString()
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest(
            requestId = __requestId,
            requestType = __requestType,
            paramName = __paramName.result(),
            paramValue = __paramValue.result()
        )
      }
      def withRequestId(__v: Long): SystemRequest = copy(requestId = __v)
      def withRequestType(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType): SystemRequest = copy(requestType = __v)
      def clearParamName = copy(paramName = _root_.scala.collection.Seq.empty)
      def addParamName(__vs: String*): SystemRequest = addAllParamName(__vs)
      def addAllParamName(__vs: TraversableOnce[String]): SystemRequest = copy(paramName = paramName ++ __vs)
      def withParamName(__v: _root_.scala.collection.Seq[String]): SystemRequest = copy(paramName = __v)
      def clearParamValue = copy(paramValue = _root_.scala.collection.Seq.empty)
      def addParamValue(__vs: String*): SystemRequest = addAllParamValue(__vs)
      def addAllParamValue(__vs: TraversableOnce[String]): SystemRequest = copy(paramValue = paramValue ++ __vs)
      def withParamValue(__v: _root_.scala.collection.Seq[String]): SystemRequest = copy(paramValue = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => requestId
          case 2 => requestType.javaValueDescriptor
          case 3 => paramName
          case 4 => paramValue
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PLong(requestId)
          case 2 => _root_.scalapb.descriptors.PEnum(requestType.scalaValueDescriptor)
          case 3 => _root_.scalapb.descriptors.PRepeated(paramName.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
          case 4 => _root_.scalapb.descriptors.PRepeated(paramValue.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest
  }
  
  object SystemRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest(
        __fieldsMap(__fields.get(0)).asInstanceOf[Long],
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType.fromValue(__fieldsMap(__fields.get(1)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
        __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[String]],
        __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Long],
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.javaDescriptor.getNestedTypes.get(4)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.scalaDescriptor.nestedMessages(4)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType
      }
    }
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest(
      requestId = 0L,
      requestType = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType.REQ_RESTART
    )
    sealed trait ReqType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = ReqType
      def isReqRestart: Boolean = false
      def isReqReboot: Boolean = false
      def isReqRestore: Boolean = false
      def isReqSetValue: Boolean = false
      def isReqGetValue: Boolean = false
      def isReqShowAlert: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ReqType] = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType
    }
    
    object ReqType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ReqType] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ReqType] = this
      @SerialVersionUID(0L)
      case object REQ_RESTART extends ReqType {
        val value = 0
        val index = 0
        val name = "REQ_RESTART"
        override def isReqRestart: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object REQ_REBOOT extends ReqType {
        val value = 1
        val index = 1
        val name = "REQ_REBOOT"
        override def isReqReboot: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object REQ_RESTORE extends ReqType {
        val value = 2
        val index = 2
        val name = "REQ_RESTORE"
        override def isReqRestore: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object REQ_SET_VALUE extends ReqType {
        val value = 3
        val index = 3
        val name = "REQ_SET_VALUE"
        override def isReqSetValue: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object REQ_GET_VALUE extends ReqType {
        val value = 4
        val index = 4
        val name = "REQ_GET_VALUE"
        override def isReqGetValue: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object REQ_SHOW_ALERT extends ReqType {
        val value = 5
        val index = 5
        val name = "REQ_SHOW_ALERT"
        override def isReqShowAlert: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends ReqType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(REQ_RESTART, REQ_REBOOT, REQ_RESTORE, REQ_SET_VALUE, REQ_GET_VALUE, REQ_SHOW_ALERT)
      def fromValue(value: Int): ReqType = value match {
        case 0 => REQ_RESTART
        case 1 => REQ_REBOOT
        case 2 => REQ_RESTORE
        case 3 => REQ_SET_VALUE
        case 4 => REQ_GET_VALUE
        case 5 => REQ_SHOW_ALERT
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.javaDescriptor.getEnumTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.scalaDescriptor.enums(0)
    }
    implicit class SystemRequestLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest](_l) {
      def requestId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
      def requestType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest.ReqType] = field(_.requestType)((c_, f_) => c_.copy(requestType = f_))
      def paramName: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.paramName)((c_, f_) => c_.copy(paramName = f_))
      def paramValue: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.paramValue)((c_, f_) => c_.copy(paramValue = f_))
    }
    final val REQUESTID_FIELD_NUMBER = 1
    final val REQUESTTYPE_FIELD_NUMBER = 2
    final val PARAMNAME_FIELD_NUMBER = 3
    final val PARAMVALUE_FIELD_NUMBER = 4
  }
  
  /** * 导航设置请求的消息定义。
    *
    * @param requestId
    *  / (必填)请求消息ID。上行的请求应答消息必须使用此ID。
    * @param groupName
    *  / (可选)群组名称。如果不是群组导航消息，则为空。
    * @param destArray
    *  / (必填)目标点数值。
    */
  @SerialVersionUID(0L)
  final case class NaviRequest(
      requestId: Long,
      groupName: scala.Option[String] = None,
      destArray: _root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo] = _root_.scala.collection.Seq.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[NaviRequest] with com.trueaccord.lenses.Updatable[NaviRequest] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, requestId)
        if (groupName.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, groupName.get) }
        destArray.foreach(destArray => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(destArray.serializedSize) + destArray.serializedSize)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeUInt64(1, requestId)
        groupName.foreach { __v =>
          _output__.writeString(2, __v)
        };
        destArray.foreach { __v =>
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest = {
        var __requestId = this.requestId
        var __groupName = this.groupName
        val __destArray = (_root_.scala.collection.immutable.Vector.newBuilder[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo] ++= this.destArray)
        var __requiredFields0: Long = 0x1L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __requestId = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __groupName = Some(_input__.readString())
            case 26 =>
              __destArray += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo.defaultInstance)
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest(
            requestId = __requestId,
            groupName = __groupName,
            destArray = __destArray.result()
        )
      }
      def withRequestId(__v: Long): NaviRequest = copy(requestId = __v)
      def getGroupName: String = groupName.getOrElse("")
      def clearGroupName: NaviRequest = copy(groupName = None)
      def withGroupName(__v: String): NaviRequest = copy(groupName = Some(__v))
      def clearDestArray = copy(destArray = _root_.scala.collection.Seq.empty)
      def addDestArray(__vs: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo*): NaviRequest = addAllDestArray(__vs)
      def addAllDestArray(__vs: TraversableOnce[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo]): NaviRequest = copy(destArray = destArray ++ __vs)
      def withDestArray(__v: _root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo]): NaviRequest = copy(destArray = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => requestId
          case 2 => groupName.orNull
          case 3 => destArray
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PLong(requestId)
          case 2 => groupName.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => _root_.scalapb.descriptors.PRepeated(destArray.map(_.toPMessage)(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest
  }
  
  object NaviRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest(
        __fieldsMap(__fields.get(0)).asInstanceOf[Long],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
        __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Long],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.javaDescriptor.getNestedTypes.get(5)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.scalaDescriptor.nestedMessages(5)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 3 => __out = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest(
      requestId = 0L
    )
    /** * 导航目标点的消息定义。
      *
      * @param address
      *  / (可选)目标点名称。
      * @param latitude
      *  / (必填)目标点纬度数据。ddd.ddddd格式，负数：南纬；正数：北纬。
      * @param longitude
      *  / (必填)目标点经度数据。ddd.ddddd格式，负数：西经；正数：东经。
      */
    @SerialVersionUID(0L)
    final case class DestInfo(
        address: scala.Option[String] = None,
        latitude: scala.Option[Double] = None,
        longitude: scala.Option[Double] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[DestInfo] with com.trueaccord.lenses.Updatable[DestInfo] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (address.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, address.get) }
          if (latitude.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(2, latitude.get) }
          if (longitude.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(3, longitude.get) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          address.foreach { __v =>
            _output__.writeString(1, __v)
          };
          latitude.foreach { __v =>
            _output__.writeDouble(2, __v)
          };
          longitude.foreach { __v =>
            _output__.writeDouble(3, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo = {
          var __address = this.address
          var __latitude = this.latitude
          var __longitude = this.longitude
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __address = Some(_input__.readString())
              case 17 =>
                __latitude = Some(_input__.readDouble())
              case 25 =>
                __longitude = Some(_input__.readDouble())
              case tag => _input__.skipField(tag)
            }
          }
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo(
              address = __address,
              latitude = __latitude,
              longitude = __longitude
          )
        }
        def getAddress: String = address.getOrElse("")
        def clearAddress: DestInfo = copy(address = None)
        def withAddress(__v: String): DestInfo = copy(address = Some(__v))
        def getLatitude: Double = latitude.getOrElse(0.0)
        def clearLatitude: DestInfo = copy(latitude = None)
        def withLatitude(__v: Double): DestInfo = copy(latitude = Some(__v))
        def getLongitude: Double = longitude.getOrElse(0.0)
        def clearLongitude: DestInfo = copy(longitude = None)
        def withLongitude(__v: Double): DestInfo = copy(longitude = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => address.orNull
            case 2 => latitude.orNull
            case 3 => longitude.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => address.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => latitude.map(_root_.scalapb.descriptors.PDouble).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 3 => longitude.map(_root_.scalapb.descriptors.PDouble).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
        def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo
    }
    
    object DestInfo extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Double]],
          __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Double]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Double]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Double]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo(
      )
      implicit class DestInfoLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo](_l) {
        def address: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getAddress)((c_, f_) => c_.copy(address = Some(f_)))
        def optionalAddress: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.address)((c_, f_) => c_.copy(address = f_))
        def latitude: _root_.com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.getLatitude)((c_, f_) => c_.copy(latitude = Some(f_)))
        def optionalLatitude: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Double]] = field(_.latitude)((c_, f_) => c_.copy(latitude = f_))
        def longitude: _root_.com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.getLongitude)((c_, f_) => c_.copy(longitude = Some(f_)))
        def optionalLongitude: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Double]] = field(_.longitude)((c_, f_) => c_.copy(longitude = f_))
      }
      final val ADDRESS_FIELD_NUMBER = 1
      final val LATITUDE_FIELD_NUMBER = 2
      final val LONGITUDE_FIELD_NUMBER = 3
    }
    
    implicit class NaviRequestLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest](_l) {
      def requestId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
      def groupName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getGroupName)((c_, f_) => c_.copy(groupName = Some(f_)))
      def optionalGroupName: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.groupName)((c_, f_) => c_.copy(groupName = f_))
      def destArray: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest.DestInfo]] = field(_.destArray)((c_, f_) => c_.copy(destArray = f_))
    }
    final val REQUESTID_FIELD_NUMBER = 1
    final val GROUPNAME_FIELD_NUMBER = 2
    final val DESTARRAY_FIELD_NUMBER = 3
  }
  
  /** * 跟踪模式请求的消息定义。
    *
    * @param requestId
    *  / (必填)请求消息ID。上行的请求应答消息必须使用此ID。
    * @param enterTrack
    *  / (必填)是否为进入跟踪模式。true为请求设备进入跟踪模式；false为请求设备退出跟踪模式。
    * @param gatherInterval
    *  / (请求类型为进入跟踪模式时必填)采集时间间隔。单位：秒。如果为退出跟踪请求，则为空。
    * @param reportInterval
    *  / (请求类型为进入跟踪模式时必填)上报时间间隔。单位：秒。如果为退出跟踪请求，则为空。
    */
  @SerialVersionUID(0L)
  final case class TrackRequest(
      requestId: Long,
      enterTrack: Boolean,
      gatherInterval: scala.Option[Int] = None,
      reportInterval: scala.Option[Int] = None,
      start: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.Empty,
      stop: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.Empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[TrackRequest] with com.trueaccord.lenses.Updatable[TrackRequest] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, requestId)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, enterTrack)
        if (gatherInterval.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(3, gatherInterval.get) }
        if (reportInterval.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(4, reportInterval.get) }
        if (start.startTime.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(5, start.startTime.get) }
        if (start.startInterval.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(6, start.startInterval.get) }
        if (stop.stopTime.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(7, stop.stopTime.get) }
        if (stop.stopInterval.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(8, stop.stopInterval.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeUInt64(1, requestId)
        _output__.writeBool(2, enterTrack)
        gatherInterval.foreach { __v =>
          _output__.writeUInt32(3, __v)
        };
        reportInterval.foreach { __v =>
          _output__.writeUInt32(4, __v)
        };
        start.startTime.foreach { __v =>
          _output__.writeUInt64(5, __v)
        };
        start.startInterval.foreach { __v =>
          _output__.writeUInt32(6, __v)
        };
        stop.stopTime.foreach { __v =>
          _output__.writeUInt64(7, __v)
        };
        stop.stopInterval.foreach { __v =>
          _output__.writeUInt32(8, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest = {
        var __requestId = this.requestId
        var __enterTrack = this.enterTrack
        var __gatherInterval = this.gatherInterval
        var __reportInterval = this.reportInterval
        var __requiredFields0: Long = 0x3L
        var __start = this.start
        var __stop = this.stop
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __requestId = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 16 =>
              __enterTrack = _input__.readBool()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 24 =>
              __gatherInterval = Some(_input__.readUInt32())
            case 32 =>
              __reportInterval = Some(_input__.readUInt32())
            case 40 =>
              __start = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartTime(_input__.readUInt64())
            case 48 =>
              __start = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartInterval(_input__.readUInt32())
            case 56 =>
              __stop = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopTime(_input__.readUInt64())
            case 64 =>
              __stop = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopInterval(_input__.readUInt32())
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest(
            requestId = __requestId,
            enterTrack = __enterTrack,
            gatherInterval = __gatherInterval,
            reportInterval = __reportInterval,
            start = __start,
            stop = __stop
        )
      }
      def withRequestId(__v: Long): TrackRequest = copy(requestId = __v)
      def withEnterTrack(__v: Boolean): TrackRequest = copy(enterTrack = __v)
      def getGatherInterval: Int = gatherInterval.getOrElse(0)
      def clearGatherInterval: TrackRequest = copy(gatherInterval = None)
      def withGatherInterval(__v: Int): TrackRequest = copy(gatherInterval = Some(__v))
      def getReportInterval: Int = reportInterval.getOrElse(0)
      def clearReportInterval: TrackRequest = copy(reportInterval = None)
      def withReportInterval(__v: Int): TrackRequest = copy(reportInterval = Some(__v))
      def getStartTime: Long = start.startTime.getOrElse(0L)
      def withStartTime(__v: Long): TrackRequest = copy(start = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartTime(__v))
      def getStartInterval: Int = start.startInterval.getOrElse(0)
      def withStartInterval(__v: Int): TrackRequest = copy(start = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartInterval(__v))
      def getStopTime: Long = stop.stopTime.getOrElse(0L)
      def withStopTime(__v: Long): TrackRequest = copy(stop = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopTime(__v))
      def getStopInterval: Int = stop.stopInterval.getOrElse(0)
      def withStopInterval(__v: Int): TrackRequest = copy(stop = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopInterval(__v))
      def clearStart: TrackRequest = copy(start = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.Empty)
      def withStart(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start): TrackRequest = copy(start = __v)
      def clearStop: TrackRequest = copy(stop = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.Empty)
      def withStop(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop): TrackRequest = copy(stop = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => requestId
          case 2 => enterTrack
          case 3 => gatherInterval.orNull
          case 4 => reportInterval.orNull
          case 5 => start.startTime.orNull
          case 6 => start.startInterval.orNull
          case 7 => stop.stopTime.orNull
          case 8 => stop.stopInterval.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PLong(requestId)
          case 2 => _root_.scalapb.descriptors.PBoolean(enterTrack)
          case 3 => gatherInterval.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => reportInterval.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => start.startTime.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 6 => start.startInterval.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 7 => stop.stopTime.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 8 => stop.stopInterval.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest
  }
  
  object TrackRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest(
        __fieldsMap(__fields.get(0)).asInstanceOf[Long],
        __fieldsMap(__fields.get(1)).asInstanceOf[Boolean],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[Int]],
        start = __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Long]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartTime) orElse
__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[Int]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartInterval) getOrElse com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.Empty,
        stop = __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[Long]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopTime) orElse
__fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[Int]].map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopInterval) getOrElse com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.Empty
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Long],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[Boolean],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[Int]]),
          start = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[Long]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartTime) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[Int]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartInterval) getOrElse com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.Empty,
          stop = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[Long]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopTime) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[Int]]).map(com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopInterval) getOrElse com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.Empty
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.javaDescriptor.getNestedTypes.get(6)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.scalaDescriptor.nestedMessages(6)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest(
      requestId = 0L,
      enterTrack = false
    )
    sealed trait Start extends _root_.com.trueaccord.scalapb.GeneratedOneof {
      def isEmpty: Boolean = false
      def isDefined: Boolean = true
      def isStartTime: Boolean = false
      def isStartInterval: Boolean = false
      def startTime: scala.Option[Long] = None
      def startInterval: scala.Option[Int] = None
    }
    object Start extends {
      @SerialVersionUID(0L)
      case object Empty extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start {
        override def isEmpty: Boolean = true
        override def isDefined: Boolean = false
        override def number: Int = 0
        override def value: scala.Any = throw new java.util.NoSuchElementException("Empty.value")
      }
    
      @SerialVersionUID(0L)
      case class StartTime(value: Long) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start {
        override def isStartTime: Boolean = true
        override def startTime: scala.Option[Long] = Some(value)
        override def number: Int = 5
      }
      @SerialVersionUID(0L)
      case class StartInterval(value: Int) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start {
        override def isStartInterval: Boolean = true
        override def startInterval: scala.Option[Int] = Some(value)
        override def number: Int = 6
      }
    }
    sealed trait Stop extends _root_.com.trueaccord.scalapb.GeneratedOneof {
      def isEmpty: Boolean = false
      def isDefined: Boolean = true
      def isStopTime: Boolean = false
      def isStopInterval: Boolean = false
      def stopTime: scala.Option[Long] = None
      def stopInterval: scala.Option[Int] = None
    }
    object Stop extends {
      @SerialVersionUID(0L)
      case object Empty extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop {
        override def isEmpty: Boolean = true
        override def isDefined: Boolean = false
        override def number: Int = 0
        override def value: scala.Any = throw new java.util.NoSuchElementException("Empty.value")
      }
    
      @SerialVersionUID(0L)
      case class StopTime(value: Long) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop {
        override def isStopTime: Boolean = true
        override def stopTime: scala.Option[Long] = Some(value)
        override def number: Int = 7
      }
      @SerialVersionUID(0L)
      case class StopInterval(value: Int) extends com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop {
        override def isStopInterval: Boolean = true
        override def stopInterval: scala.Option[Int] = Some(value)
        override def number: Int = 8
      }
    }
    implicit class TrackRequestLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest](_l) {
      def requestId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
      def enterTrack: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.enterTrack)((c_, f_) => c_.copy(enterTrack = f_))
      def gatherInterval: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getGatherInterval)((c_, f_) => c_.copy(gatherInterval = Some(f_)))
      def optionalGatherInterval: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.gatherInterval)((c_, f_) => c_.copy(gatherInterval = f_))
      def reportInterval: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getReportInterval)((c_, f_) => c_.copy(reportInterval = Some(f_)))
      def optionalReportInterval: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.reportInterval)((c_, f_) => c_.copy(reportInterval = f_))
      def startTime: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getStartTime)((c_, f_) => c_.copy(start = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartTime(f_)))
      def startInterval: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getStartInterval)((c_, f_) => c_.copy(start = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start.StartInterval(f_)))
      def stopTime: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getStopTime)((c_, f_) => c_.copy(stop = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopTime(f_)))
      def stopInterval: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getStopInterval)((c_, f_) => c_.copy(stop = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop.StopInterval(f_)))
      def start: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Start] = field(_.start)((c_, f_) => c_.copy(start = f_))
      def stop: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest.Stop] = field(_.stop)((c_, f_) => c_.copy(stop = f_))
    }
    final val REQUESTID_FIELD_NUMBER = 1
    final val ENTERTRACK_FIELD_NUMBER = 2
    final val GATHERINTERVAL_FIELD_NUMBER = 3
    final val REPORTINTERVAL_FIELD_NUMBER = 4
    final val STARTTIME_FIELD_NUMBER = 5
    final val STARTINTERVAL_FIELD_NUMBER = 6
    final val STOPTIME_FIELD_NUMBER = 7
    final val STOPINTERVAL_FIELD_NUMBER = 8
  }
  
  /** * 上传监控请求的消息定义。
    *
    * @param requestId
    *  / (必填)请求消息ID。上行的请求应答消息必须使用此ID。
    * @param mediaType
    *  / (必填)请求类型。
    * @param requestNum
    *  / (可选)请求的数量。对应图片，为上传图片数量；对应视频/音频/视频流，为上传视频/音频时间的秒数。
    * @param uploadType
    *  / (可选)终端上传文件时的上传类型。缺省为：UPLOAD_MONITOR。
    * @param cameraIndex
    *  / (可选)请求视频/视频流时采用的摄像头。缺省为：0。
    */
  @SerialVersionUID(0L)
  final case class MonitorRequest(
      requestId: Long,
      mediaType: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType,
      requestNum: scala.Option[Int] = None,
      uploadType: scala.Option[com.chargerlink.gateway.bean.common.UploadType] = None,
      cameraIndex: scala.Option[Int] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[MonitorRequest] with com.trueaccord.lenses.Updatable[MonitorRequest] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, requestId)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, mediaType.value)
        if (requestNum.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, requestNum.get) }
        if (uploadType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, uploadType.get.value) }
        if (cameraIndex.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(5, cameraIndex.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeUInt64(1, requestId)
        _output__.writeEnum(2, mediaType.value)
        requestNum.foreach { __v =>
          _output__.writeInt32(3, __v)
        };
        uploadType.foreach { __v =>
          _output__.writeEnum(4, __v.value)
        };
        cameraIndex.foreach { __v =>
          _output__.writeUInt32(5, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest = {
        var __requestId = this.requestId
        var __mediaType = this.mediaType
        var __requestNum = this.requestNum
        var __uploadType = this.uploadType
        var __cameraIndex = this.cameraIndex
        var __requiredFields0: Long = 0x3L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __requestId = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 16 =>
              __mediaType = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType.fromValue(_input__.readEnum())
              __requiredFields0 &= 0xfffffffffffffffdL
            case 24 =>
              __requestNum = Some(_input__.readInt32())
            case 32 =>
              __uploadType = Some(com.chargerlink.gateway.bean.common.UploadType.fromValue(_input__.readEnum()))
            case 40 =>
              __cameraIndex = Some(_input__.readUInt32())
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest(
            requestId = __requestId,
            mediaType = __mediaType,
            requestNum = __requestNum,
            uploadType = __uploadType,
            cameraIndex = __cameraIndex
        )
      }
      def withRequestId(__v: Long): MonitorRequest = copy(requestId = __v)
      def withMediaType(__v: com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType): MonitorRequest = copy(mediaType = __v)
      def getRequestNum: Int = requestNum.getOrElse(0)
      def clearRequestNum: MonitorRequest = copy(requestNum = None)
      def withRequestNum(__v: Int): MonitorRequest = copy(requestNum = Some(__v))
      def getUploadType: com.chargerlink.gateway.bean.common.UploadType = uploadType.getOrElse(com.chargerlink.gateway.bean.common.UploadType.UPLOAD_TRACK)
      def clearUploadType: MonitorRequest = copy(uploadType = None)
      def withUploadType(__v: com.chargerlink.gateway.bean.common.UploadType): MonitorRequest = copy(uploadType = Some(__v))
      def getCameraIndex: Int = cameraIndex.getOrElse(0)
      def clearCameraIndex: MonitorRequest = copy(cameraIndex = None)
      def withCameraIndex(__v: Int): MonitorRequest = copy(cameraIndex = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => requestId
          case 2 => mediaType.javaValueDescriptor
          case 3 => requestNum.orNull
          case 4 => uploadType.map(_.javaValueDescriptor).orNull
          case 5 => cameraIndex.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PLong(requestId)
          case 2 => _root_.scalapb.descriptors.PEnum(mediaType.scalaValueDescriptor)
          case 3 => requestNum.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => uploadType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => cameraIndex.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest
  }
  
  object MonitorRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest(
        __fieldsMap(__fields.get(0)).asInstanceOf[Long],
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType.fromValue(__fieldsMap(__fields.get(1)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.chargerlink.gateway.bean.common.UploadType.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Int]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Long],
          com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.chargerlink.gateway.bean.common.UploadType.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[Int]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.javaDescriptor.getNestedTypes.get(7)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.scalaDescriptor.nestedMessages(7)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType
        case 4 => com.chargerlink.gateway.bean.common.UploadType
      }
    }
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest(
      requestId = 0L,
      mediaType = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType.MEDIA_PHOTO
    )
    sealed trait MediaType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = MediaType
      def isMediaPhoto: Boolean = false
      def isMediaVideo: Boolean = false
      def isMediaVoice: Boolean = false
      def isMediaStream: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MediaType] = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType
    }
    
    object MediaType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MediaType] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MediaType] = this
      @SerialVersionUID(0L)
      case object MEDIA_PHOTO extends MediaType {
        val value = 0
        val index = 0
        val name = "MEDIA_PHOTO"
        override def isMediaPhoto: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object MEDIA_VIDEO extends MediaType {
        val value = 1
        val index = 1
        val name = "MEDIA_VIDEO"
        override def isMediaVideo: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object MEDIA_VOICE extends MediaType {
        val value = 2
        val index = 2
        val name = "MEDIA_VOICE"
        override def isMediaVoice: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object MEDIA_STREAM extends MediaType {
        val value = 3
        val index = 3
        val name = "MEDIA_STREAM"
        override def isMediaStream: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends MediaType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(MEDIA_PHOTO, MEDIA_VIDEO, MEDIA_VOICE, MEDIA_STREAM)
      def fromValue(value: Int): MediaType = value match {
        case 0 => MEDIA_PHOTO
        case 1 => MEDIA_VIDEO
        case 2 => MEDIA_VOICE
        case 3 => MEDIA_STREAM
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.javaDescriptor.getEnumTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.scalaDescriptor.enums(0)
    }
    implicit class MonitorRequestLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest](_l) {
      def requestId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
      def mediaType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest.MediaType] = field(_.mediaType)((c_, f_) => c_.copy(mediaType = f_))
      def requestNum: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getRequestNum)((c_, f_) => c_.copy(requestNum = Some(f_)))
      def optionalRequestNum: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.requestNum)((c_, f_) => c_.copy(requestNum = f_))
      def uploadType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.common.UploadType] = field(_.getUploadType)((c_, f_) => c_.copy(uploadType = Some(f_)))
      def optionalUploadType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.common.UploadType]] = field(_.uploadType)((c_, f_) => c_.copy(uploadType = f_))
      def cameraIndex: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getCameraIndex)((c_, f_) => c_.copy(cameraIndex = Some(f_)))
      def optionalCameraIndex: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.cameraIndex)((c_, f_) => c_.copy(cameraIndex = f_))
    }
    final val REQUESTID_FIELD_NUMBER = 1
    final val MEDIATYPE_FIELD_NUMBER = 2
    final val REQUESTNUM_FIELD_NUMBER = 3
    final val UPLOADTYPE_FIELD_NUMBER = 4
    final val CAMERAINDEX_FIELD_NUMBER = 5
  }
  
  implicit class CommandRecorderAMI_v1Lens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1](_l) {
    def configStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ConfigStatus] = field(_.getConfigStatus)((c_, f_) => c_.copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ConfigStatus(f_)))
    def bindStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.BindStatus] = field(_.getBindStatus)((c_, f_) => c_.copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.BindStatus(f_)))
    def groupStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.GroupStatus] = field(_.getGroupStatus)((c_, f_) => c_.copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.GroupStatus(f_)))
    def chargeStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.ChargeStatus] = field(_.getChargeStatus)((c_, f_) => c_.copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.ChargeStatus(f_)))
    def systemRequest: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.SystemRequest] = field(_.getSystemRequest)((c_, f_) => c_.copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.SystemRequest(f_)))
    def naviRequest: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.NaviRequest] = field(_.getNaviRequest)((c_, f_) => c_.copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.NaviRequest(f_)))
    def trackRequest: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.TrackRequest] = field(_.getTrackRequest)((c_, f_) => c_.copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.TrackRequest(f_)))
    def monitorRequest: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.MonitorRequest] = field(_.getMonitorRequest)((c_, f_) => c_.copy(command = com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command.MonitorRequest(f_)))
    def command: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandRecorderAMI_v1.Command] = field(_.command)((c_, f_) => c_.copy(command = f_))
  }
  final val CONFIG_STATUS_FIELD_NUMBER = 4
  final val BIND_STATUS_FIELD_NUMBER = 5
  final val GROUP_STATUS_FIELD_NUMBER = 6
  final val CHARGE_STATUS_FIELD_NUMBER = 7
  final val SYSTEM_REQUEST_FIELD_NUMBER = 8
  final val NAVI_REQUEST_FIELD_NUMBER = 9
  final val TRACK_REQUEST_FIELD_NUMBER = 10
  final val MONITOR_REQUEST_FIELD_NUMBER = 11
}
