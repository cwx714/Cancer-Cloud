// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.common



sealed trait ChgMeasureType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
  type EnumType = ChgMeasureType
  def isChgMeasureVendorExtension: Boolean = false
  def isChgMeasureWorkingStatus: Boolean = false
  def isChgMeasureTemperature: Boolean = false
  def isChgMeasureVoltage: Boolean = false
  def isChgMeasureMilliVol: Boolean = false
  def isChgMeasureCurrent: Boolean = false
  def isChgMeasurePowerWatts: Boolean = false
  def isChgMeasureRpm: Boolean = false
  def isChgMeasureSoc: Boolean = false
  def isChgMeasureGeneralInput: Boolean = false
  def isChgMeasureGeneralAdc: Boolean = false
  def isChgMeasureGuidanceVoltage: Boolean = false
  def isChgMeasureContactorStatus: Boolean = false
  def isChgMeasureLockStatus: Boolean = false
  def isChgMeasureCpStatus: Boolean = false
  def isChgMeasureCcStatus: Boolean = false
  def isChgMeasureCc1Status: Boolean = false
  def isChgMeasureGunPosition: Boolean = false
  def isChgMeasureDoorStatus: Boolean = false
  def isChgMeasureInputVoltage: Boolean = false
  def isChgMeasureInputVoltageA: Boolean = false
  def isChgMeasureInputVoltageB: Boolean = false
  def isChgMeasureInputVoltageC: Boolean = false
  def isChgMeasureInputCurrent: Boolean = false
  def isChgMeasureInputCurrentA: Boolean = false
  def isChgMeasureInputCurrentB: Boolean = false
  def isChgMeasureInputCurrentC: Boolean = false
  def isChgMeasureOutputVoltage: Boolean = false
  def isChgMeasureOutputCurrent: Boolean = false
  def isChgMeasureWifiRssi: Boolean = false
  def isChgMeasureWirelessSignal: Boolean = false
  def isChgMeasureCpuUsage: Boolean = false
  def isChgMeasureMemoryFree: Boolean = false
  def isChgMeasureStorageFree: Boolean = false
  def isChgMeasureParkingStatus: Boolean = false
  def isChgMeasureParklockStatus: Boolean = false
  def isChgMeasureElectricity: Boolean = false
  def isChgMeasurePieceElectricity: Boolean = false
  def isChgMeasureVoltageA: Boolean = false
  def isChgMeasureVoltageB: Boolean = false
  def isChgMeasureVoltageC: Boolean = false
  def isChgMeasureCurrentA: Boolean = false
  def isChgMeasureCurrentB: Boolean = false
  def isChgMeasureCurrentC: Boolean = false
  def isChgMeasurePowerKilowatts: Boolean = false
  def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ChgMeasureType] = com.chargerlink.gateway.bean.common.ChgMeasureType
}

object ChgMeasureType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ChgMeasureType] {
  implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ChgMeasureType] = this
  @SerialVersionUID(0L)
  case object CHG_MEASURE_VENDOR_EXTENSION extends ChgMeasureType {
    val value = 0
    val index = 0
    val name = "CHG_MEASURE_VENDOR_EXTENSION"
    override def isChgMeasureVendorExtension: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_WORKING_STATUS extends ChgMeasureType {
    val value = 1
    val index = 1
    val name = "CHG_MEASURE_WORKING_STATUS"
    override def isChgMeasureWorkingStatus: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_TEMPERATURE extends ChgMeasureType {
    val value = 100
    val index = 2
    val name = "CHG_MEASURE_TEMPERATURE"
    override def isChgMeasureTemperature: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_VOLTAGE extends ChgMeasureType {
    val value = 101
    val index = 3
    val name = "CHG_MEASURE_VOLTAGE"
    override def isChgMeasureVoltage: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_MILLI_VOL extends ChgMeasureType {
    val value = 102
    val index = 4
    val name = "CHG_MEASURE_MILLI_VOL"
    override def isChgMeasureMilliVol: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CURRENT extends ChgMeasureType {
    val value = 103
    val index = 5
    val name = "CHG_MEASURE_CURRENT"
    override def isChgMeasureCurrent: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_POWER_WATTS extends ChgMeasureType {
    val value = 104
    val index = 6
    val name = "CHG_MEASURE_POWER_WATTS"
    override def isChgMeasurePowerWatts: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_RPM extends ChgMeasureType {
    val value = 105
    val index = 7
    val name = "CHG_MEASURE_RPM"
    override def isChgMeasureRpm: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_SOC extends ChgMeasureType {
    val value = 106
    val index = 8
    val name = "CHG_MEASURE_SOC"
    override def isChgMeasureSoc: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_GENERAL_INPUT extends ChgMeasureType {
    val value = 107
    val index = 9
    val name = "CHG_MEASURE_GENERAL_INPUT"
    override def isChgMeasureGeneralInput: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_GENERAL_ADC extends ChgMeasureType {
    val value = 108
    val index = 10
    val name = "CHG_MEASURE_GENERAL_ADC"
    override def isChgMeasureGeneralAdc: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_GUIDANCE_VOLTAGE extends ChgMeasureType {
    val value = 109
    val index = 11
    val name = "CHG_MEASURE_GUIDANCE_VOLTAGE"
    override def isChgMeasureGuidanceVoltage: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CONTACTOR_STATUS extends ChgMeasureType {
    val value = 110
    val index = 12
    val name = "CHG_MEASURE_CONTACTOR_STATUS"
    override def isChgMeasureContactorStatus: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_LOCK_STATUS extends ChgMeasureType {
    val value = 111
    val index = 13
    val name = "CHG_MEASURE_LOCK_STATUS"
    override def isChgMeasureLockStatus: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CP_STATUS extends ChgMeasureType {
    val value = 112
    val index = 14
    val name = "CHG_MEASURE_CP_STATUS"
    override def isChgMeasureCpStatus: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CC_STATUS extends ChgMeasureType {
    val value = 113
    val index = 15
    val name = "CHG_MEASURE_CC_STATUS"
    override def isChgMeasureCcStatus: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CC1_STATUS extends ChgMeasureType {
    val value = 114
    val index = 16
    val name = "CHG_MEASURE_CC1_STATUS"
    override def isChgMeasureCc1Status: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_GUN_POSITION extends ChgMeasureType {
    val value = 115
    val index = 17
    val name = "CHG_MEASURE_GUN_POSITION"
    override def isChgMeasureGunPosition: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_DOOR_STATUS extends ChgMeasureType {
    val value = 116
    val index = 18
    val name = "CHG_MEASURE_DOOR_STATUS"
    override def isChgMeasureDoorStatus: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_INPUT_VOLTAGE extends ChgMeasureType {
    val value = 117
    val index = 19
    val name = "CHG_MEASURE_INPUT_VOLTAGE"
    override def isChgMeasureInputVoltage: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_INPUT_VOLTAGE_A extends ChgMeasureType {
    val value = 118
    val index = 20
    val name = "CHG_MEASURE_INPUT_VOLTAGE_A"
    override def isChgMeasureInputVoltageA: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_INPUT_VOLTAGE_B extends ChgMeasureType {
    val value = 119
    val index = 21
    val name = "CHG_MEASURE_INPUT_VOLTAGE_B"
    override def isChgMeasureInputVoltageB: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_INPUT_VOLTAGE_C extends ChgMeasureType {
    val value = 120
    val index = 22
    val name = "CHG_MEASURE_INPUT_VOLTAGE_C"
    override def isChgMeasureInputVoltageC: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_INPUT_CURRENT extends ChgMeasureType {
    val value = 121
    val index = 23
    val name = "CHG_MEASURE_INPUT_CURRENT"
    override def isChgMeasureInputCurrent: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_INPUT_CURRENT_A extends ChgMeasureType {
    val value = 122
    val index = 24
    val name = "CHG_MEASURE_INPUT_CURRENT_A"
    override def isChgMeasureInputCurrentA: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_INPUT_CURRENT_B extends ChgMeasureType {
    val value = 123
    val index = 25
    val name = "CHG_MEASURE_INPUT_CURRENT_B"
    override def isChgMeasureInputCurrentB: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_INPUT_CURRENT_C extends ChgMeasureType {
    val value = 124
    val index = 26
    val name = "CHG_MEASURE_INPUT_CURRENT_C"
    override def isChgMeasureInputCurrentC: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_OUTPUT_VOLTAGE extends ChgMeasureType {
    val value = 125
    val index = 27
    val name = "CHG_MEASURE_OUTPUT_VOLTAGE"
    override def isChgMeasureOutputVoltage: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_OUTPUT_CURRENT extends ChgMeasureType {
    val value = 126
    val index = 28
    val name = "CHG_MEASURE_OUTPUT_CURRENT"
    override def isChgMeasureOutputCurrent: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_WIFI_RSSI extends ChgMeasureType {
    val value = 127
    val index = 29
    val name = "CHG_MEASURE_WIFI_RSSI"
    override def isChgMeasureWifiRssi: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_WIRELESS_SIGNAL extends ChgMeasureType {
    val value = 128
    val index = 30
    val name = "CHG_MEASURE_WIRELESS_SIGNAL"
    override def isChgMeasureWirelessSignal: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CPU_USAGE extends ChgMeasureType {
    val value = 129
    val index = 31
    val name = "CHG_MEASURE_CPU_USAGE"
    override def isChgMeasureCpuUsage: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_MEMORY_FREE extends ChgMeasureType {
    val value = 130
    val index = 32
    val name = "CHG_MEASURE_MEMORY_FREE"
    override def isChgMeasureMemoryFree: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_STORAGE_FREE extends ChgMeasureType {
    val value = 131
    val index = 33
    val name = "CHG_MEASURE_STORAGE_FREE"
    override def isChgMeasureStorageFree: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_PARKING_STATUS extends ChgMeasureType {
    val value = 132
    val index = 34
    val name = "CHG_MEASURE_PARKING_STATUS"
    override def isChgMeasureParkingStatus: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_PARKLOCK_STATUS extends ChgMeasureType {
    val value = 133
    val index = 35
    val name = "CHG_MEASURE_PARKLOCK_STATUS"
    override def isChgMeasureParklockStatus: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_ELECTRICITY extends ChgMeasureType {
    val value = 134
    val index = 36
    val name = "CHG_MEASURE_ELECTRICITY"
    override def isChgMeasureElectricity: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_PIECE_ELECTRICITY extends ChgMeasureType {
    val value = 135
    val index = 37
    val name = "CHG_MEASURE_PIECE_ELECTRICITY"
    override def isChgMeasurePieceElectricity: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_VOLTAGE_A extends ChgMeasureType {
    val value = 136
    val index = 38
    val name = "CHG_MEASURE_VOLTAGE_A"
    override def isChgMeasureVoltageA: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_VOLTAGE_B extends ChgMeasureType {
    val value = 137
    val index = 39
    val name = "CHG_MEASURE_VOLTAGE_B"
    override def isChgMeasureVoltageB: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_VOLTAGE_C extends ChgMeasureType {
    val value = 138
    val index = 40
    val name = "CHG_MEASURE_VOLTAGE_C"
    override def isChgMeasureVoltageC: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CURRENT_A extends ChgMeasureType {
    val value = 139
    val index = 41
    val name = "CHG_MEASURE_CURRENT_A"
    override def isChgMeasureCurrentA: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CURRENT_B extends ChgMeasureType {
    val value = 140
    val index = 42
    val name = "CHG_MEASURE_CURRENT_B"
    override def isChgMeasureCurrentB: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_CURRENT_C extends ChgMeasureType {
    val value = 141
    val index = 43
    val name = "CHG_MEASURE_CURRENT_C"
    override def isChgMeasureCurrentC: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CHG_MEASURE_POWER_KILOWATTS extends ChgMeasureType {
    val value = 142
    val index = 44
    val name = "CHG_MEASURE_POWER_KILOWATTS"
    override def isChgMeasurePowerKilowatts: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case class Unrecognized(value: Int) extends ChgMeasureType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.Seq(CHG_MEASURE_VENDOR_EXTENSION, CHG_MEASURE_WORKING_STATUS, CHG_MEASURE_TEMPERATURE, CHG_MEASURE_VOLTAGE, CHG_MEASURE_MILLI_VOL, CHG_MEASURE_CURRENT, CHG_MEASURE_POWER_WATTS, CHG_MEASURE_RPM, CHG_MEASURE_SOC, CHG_MEASURE_GENERAL_INPUT, CHG_MEASURE_GENERAL_ADC, CHG_MEASURE_GUIDANCE_VOLTAGE, CHG_MEASURE_CONTACTOR_STATUS, CHG_MEASURE_LOCK_STATUS, CHG_MEASURE_CP_STATUS, CHG_MEASURE_CC_STATUS, CHG_MEASURE_CC1_STATUS, CHG_MEASURE_GUN_POSITION, CHG_MEASURE_DOOR_STATUS, CHG_MEASURE_INPUT_VOLTAGE, CHG_MEASURE_INPUT_VOLTAGE_A, CHG_MEASURE_INPUT_VOLTAGE_B, CHG_MEASURE_INPUT_VOLTAGE_C, CHG_MEASURE_INPUT_CURRENT, CHG_MEASURE_INPUT_CURRENT_A, CHG_MEASURE_INPUT_CURRENT_B, CHG_MEASURE_INPUT_CURRENT_C, CHG_MEASURE_OUTPUT_VOLTAGE, CHG_MEASURE_OUTPUT_CURRENT, CHG_MEASURE_WIFI_RSSI, CHG_MEASURE_WIRELESS_SIGNAL, CHG_MEASURE_CPU_USAGE, CHG_MEASURE_MEMORY_FREE, CHG_MEASURE_STORAGE_FREE, CHG_MEASURE_PARKING_STATUS, CHG_MEASURE_PARKLOCK_STATUS, CHG_MEASURE_ELECTRICITY, CHG_MEASURE_PIECE_ELECTRICITY, CHG_MEASURE_VOLTAGE_A, CHG_MEASURE_VOLTAGE_B, CHG_MEASURE_VOLTAGE_C, CHG_MEASURE_CURRENT_A, CHG_MEASURE_CURRENT_B, CHG_MEASURE_CURRENT_C, CHG_MEASURE_POWER_KILOWATTS)
  def fromValue(value: Int): ChgMeasureType = value match {
    case 0 => CHG_MEASURE_VENDOR_EXTENSION
    case 1 => CHG_MEASURE_WORKING_STATUS
    case 100 => CHG_MEASURE_TEMPERATURE
    case 101 => CHG_MEASURE_VOLTAGE
    case 102 => CHG_MEASURE_MILLI_VOL
    case 103 => CHG_MEASURE_CURRENT
    case 104 => CHG_MEASURE_POWER_WATTS
    case 105 => CHG_MEASURE_RPM
    case 106 => CHG_MEASURE_SOC
    case 107 => CHG_MEASURE_GENERAL_INPUT
    case 108 => CHG_MEASURE_GENERAL_ADC
    case 109 => CHG_MEASURE_GUIDANCE_VOLTAGE
    case 110 => CHG_MEASURE_CONTACTOR_STATUS
    case 111 => CHG_MEASURE_LOCK_STATUS
    case 112 => CHG_MEASURE_CP_STATUS
    case 113 => CHG_MEASURE_CC_STATUS
    case 114 => CHG_MEASURE_CC1_STATUS
    case 115 => CHG_MEASURE_GUN_POSITION
    case 116 => CHG_MEASURE_DOOR_STATUS
    case 117 => CHG_MEASURE_INPUT_VOLTAGE
    case 118 => CHG_MEASURE_INPUT_VOLTAGE_A
    case 119 => CHG_MEASURE_INPUT_VOLTAGE_B
    case 120 => CHG_MEASURE_INPUT_VOLTAGE_C
    case 121 => CHG_MEASURE_INPUT_CURRENT
    case 122 => CHG_MEASURE_INPUT_CURRENT_A
    case 123 => CHG_MEASURE_INPUT_CURRENT_B
    case 124 => CHG_MEASURE_INPUT_CURRENT_C
    case 125 => CHG_MEASURE_OUTPUT_VOLTAGE
    case 126 => CHG_MEASURE_OUTPUT_CURRENT
    case 127 => CHG_MEASURE_WIFI_RSSI
    case 128 => CHG_MEASURE_WIRELESS_SIGNAL
    case 129 => CHG_MEASURE_CPU_USAGE
    case 130 => CHG_MEASURE_MEMORY_FREE
    case 131 => CHG_MEASURE_STORAGE_FREE
    case 132 => CHG_MEASURE_PARKING_STATUS
    case 133 => CHG_MEASURE_PARKLOCK_STATUS
    case 134 => CHG_MEASURE_ELECTRICITY
    case 135 => CHG_MEASURE_PIECE_ELECTRICITY
    case 136 => CHG_MEASURE_VOLTAGE_A
    case 137 => CHG_MEASURE_VOLTAGE_B
    case 138 => CHG_MEASURE_VOLTAGE_C
    case 139 => CHG_MEASURE_CURRENT_A
    case 140 => CHG_MEASURE_CURRENT_B
    case 141 => CHG_MEASURE_CURRENT_C
    case 142 => CHG_MEASURE_POWER_KILOWATTS
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = EnumChargerProto.javaDescriptor.getEnumTypes.get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = EnumChargerProto.scalaDescriptor.enums(11)
}