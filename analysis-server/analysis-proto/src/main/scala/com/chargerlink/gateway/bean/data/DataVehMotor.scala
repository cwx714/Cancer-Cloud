// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.data



/** * 发动机数据的消息定义。对应电动车国标'0x04发动机数据'。
  *
  * @param motorStatus
  *  / (必填，国标字段)发动机状态。0x01：启动状态，0x02：关闭状态，0xFE：异常，0xFF：无效。
  * @param motorSpeed
  *  / (必填，国标字段)发动机曲轴转速。单位：1rpm，范围：0rpm～60000rpm，0xFFFE：异常，0xFFFF：无效。
  * @param consumeRate
  *  / (必填，国标字段)燃料消耗率。单位：0.01L/100km，范围：0.00L/100km～600.00L/100km，0xFFFE：异常，0xFFFF：无效。
  */
@SerialVersionUID(0L)
final case class DataVehMotor(
    motorStatus: Int,
    motorSpeed: Int,
    consumeRate: Int
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[DataVehMotor] with com.trueaccord.lenses.Updatable[DataVehMotor] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, motorStatus)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(2, motorSpeed)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(3, consumeRate)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeUInt32(1, motorStatus)
      _output__.writeUInt32(2, motorSpeed)
      _output__.writeUInt32(3, consumeRate)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.data.DataVehMotor = {
      var __motorStatus = this.motorStatus
      var __motorSpeed = this.motorSpeed
      var __consumeRate = this.consumeRate
      var __requiredFields0: Long = 0x7L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __motorStatus = _input__.readUInt32()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 16 =>
            __motorSpeed = _input__.readUInt32()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 24 =>
            __consumeRate = _input__.readUInt32()
            __requiredFields0 &= 0xfffffffffffffffbL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.chargerlink.gateway.bean.data.DataVehMotor(
          motorStatus = __motorStatus,
          motorSpeed = __motorSpeed,
          consumeRate = __consumeRate
      )
    }
    def withMotorStatus(__v: Int): DataVehMotor = copy(motorStatus = __v)
    def withMotorSpeed(__v: Int): DataVehMotor = copy(motorSpeed = __v)
    def withConsumeRate(__v: Int): DataVehMotor = copy(consumeRate = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => motorStatus
        case 2 => motorSpeed
        case 3 => consumeRate
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(motorStatus)
        case 2 => _root_.scalapb.descriptors.PInt(motorSpeed)
        case 3 => _root_.scalapb.descriptors.PInt(consumeRate)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.data.DataVehMotor
}

object DataVehMotor extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.data.DataVehMotor] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.data.DataVehMotor] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.data.DataVehMotor = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.data.DataVehMotor(
      __fieldsMap(__fields.get(0)).asInstanceOf[Int],
      __fieldsMap(__fields.get(1)).asInstanceOf[Int],
      __fieldsMap(__fields.get(2)).asInstanceOf[Int]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.data.DataVehMotor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.data.DataVehMotor(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[Int]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DataVehicleProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DataVehicleProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.chargerlink.gateway.bean.data.DataVehMotor(
    motorStatus = 0,
    motorSpeed = 0,
    consumeRate = 0
  )
  implicit class DataVehMotorLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.data.DataVehMotor]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.data.DataVehMotor](_l) {
    def motorStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.motorStatus)((c_, f_) => c_.copy(motorStatus = f_))
    def motorSpeed: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.motorSpeed)((c_, f_) => c_.copy(motorSpeed = f_))
    def consumeRate: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.consumeRate)((c_, f_) => c_.copy(consumeRate = f_))
  }
  final val MOTOR_STATUS_FIELD_NUMBER = 1
  final val MOTOR_SPEED_FIELD_NUMBER = 2
  final val CONSUME_RATE_FIELD_NUMBER = 3
}
