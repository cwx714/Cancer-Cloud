// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.api



/** * 接入平台/终端设备返回的命令应答的消息定义。其中：应答消息详情的定义分别在以下文件中：ApiVehicle.proto、ApiCharger.proto、ApiRecorder.proto。
  *
  * @param deviceType
  *  / (必填)终端设备类型。
  * @param deviceId
  *  / (必填)终端设备ID。
  * @param commandId
  *  / (可选)原始命令请求的命令唯一ID。
  */
@SerialVersionUID(0L)
final case class CommandResult(
    deviceType: com.chargerlink.gateway.bean.common.DeviceType,
    deviceId: String,
    commandId: scala.Option[String] = None,
    detail: com.chargerlink.gateway.bean.api.CommandResult.Detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.Empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CommandResult] with com.trueaccord.lenses.Updatable[CommandResult] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, deviceType.value)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, deviceId)
      if (commandId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, commandId.get) }
      if (detail.error.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(detail.error.get.serializedSize) + detail.error.get.serializedSize }
      if (detail.success.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(detail.success.get.serializedSize) + detail.success.get.serializedSize }
      if (detail.vehicleGbV1.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(detail.vehicleGbV1.get.serializedSize) + detail.vehicleGbV1.get.serializedSize }
      if (detail.recorderAmiV1.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(detail.recorderAmiV1.get.serializedSize) + detail.recorderAmiV1.get.serializedSize }
      if (detail.chargerClV2.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(detail.chargerClV2.get.serializedSize) + detail.chargerClV2.get.serializedSize }
      if (detail.parkingClV2.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(detail.parkingClV2.get.serializedSize) + detail.parkingClV2.get.serializedSize }
      if (detail.otherDevice.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(detail.otherDevice.get.serializedSize) + detail.otherDevice.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeEnum(1, deviceType.value)
      _output__.writeString(2, deviceId)
      commandId.foreach { __v =>
        _output__.writeString(3, __v)
      };
      detail.error.foreach { __v =>
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      detail.success.foreach { __v =>
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      detail.vehicleGbV1.foreach { __v =>
        _output__.writeTag(100, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      detail.recorderAmiV1.foreach { __v =>
        _output__.writeTag(200, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      detail.chargerClV2.foreach { __v =>
        _output__.writeTag(300, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      detail.parkingClV2.foreach { __v =>
        _output__.writeTag(400, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      detail.otherDevice.foreach { __v =>
        _output__.writeTag(999, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandResult = {
      var __deviceType = this.deviceType
      var __deviceId = this.deviceId
      var __commandId = this.commandId
      var __requiredFields0: Long = 0x3L
      var __detail = this.detail
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __deviceType = com.chargerlink.gateway.bean.common.DeviceType.fromValue(_input__.readEnum())
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __deviceId = _input__.readString()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 26 =>
            __commandId = Some(_input__.readString())
          case 82 =>
            __detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.Error(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, detail.error.getOrElse(com.chargerlink.gateway.bean.api.CommandResult.ResultError.defaultInstance)))
          case 90 =>
            __detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.Success(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, detail.success.getOrElse(com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess.defaultInstance)))
          case 802 =>
            __detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.VehicleGbV1(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, detail.vehicleGbV1.getOrElse(com.chargerlink.gateway.bean.api.ResultVehicleGB_v1.defaultInstance)))
          case 1602 =>
            __detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.RecorderAmiV1(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, detail.recorderAmiV1.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.defaultInstance)))
          case 2402 =>
            __detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.ChargerClV2(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, detail.chargerClV2.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.defaultInstance)))
          case 3202 =>
            __detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.ParkingClV2(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, detail.parkingClV2.getOrElse(com.chargerlink.gateway.bean.api.ResultParkingCL_v2.defaultInstance)))
          case 7994 =>
            __detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.OtherDevice(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, detail.otherDevice.getOrElse(com.google.protobuf.any.Any.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.chargerlink.gateway.bean.api.CommandResult(
          deviceType = __deviceType,
          deviceId = __deviceId,
          commandId = __commandId,
          detail = __detail
      )
    }
    def withDeviceType(__v: com.chargerlink.gateway.bean.common.DeviceType): CommandResult = copy(deviceType = __v)
    def withDeviceId(__v: String): CommandResult = copy(deviceId = __v)
    def getCommandId: String = commandId.getOrElse("")
    def clearCommandId: CommandResult = copy(commandId = None)
    def withCommandId(__v: String): CommandResult = copy(commandId = Some(__v))
    def getError: com.chargerlink.gateway.bean.api.CommandResult.ResultError = detail.error.getOrElse(com.chargerlink.gateway.bean.api.CommandResult.ResultError.defaultInstance)
    def withError(__v: com.chargerlink.gateway.bean.api.CommandResult.ResultError): CommandResult = copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.Error(__v))
    def getSuccess: com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess = detail.success.getOrElse(com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess.defaultInstance)
    def withSuccess(__v: com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess): CommandResult = copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.Success(__v))
    def getVehicleGbV1: com.chargerlink.gateway.bean.api.ResultVehicleGB_v1 = detail.vehicleGbV1.getOrElse(com.chargerlink.gateway.bean.api.ResultVehicleGB_v1.defaultInstance)
    def withVehicleGbV1(__v: com.chargerlink.gateway.bean.api.ResultVehicleGB_v1): CommandResult = copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.VehicleGbV1(__v))
    def getRecorderAmiV1: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1 = detail.recorderAmiV1.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.defaultInstance)
    def withRecorderAmiV1(__v: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1): CommandResult = copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.RecorderAmiV1(__v))
    def getChargerClV2: com.chargerlink.gateway.bean.api.ResultChargerCL_v2 = detail.chargerClV2.getOrElse(com.chargerlink.gateway.bean.api.ResultChargerCL_v2.defaultInstance)
    def withChargerClV2(__v: com.chargerlink.gateway.bean.api.ResultChargerCL_v2): CommandResult = copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.ChargerClV2(__v))
    def getParkingClV2: com.chargerlink.gateway.bean.api.ResultParkingCL_v2 = detail.parkingClV2.getOrElse(com.chargerlink.gateway.bean.api.ResultParkingCL_v2.defaultInstance)
    def withParkingClV2(__v: com.chargerlink.gateway.bean.api.ResultParkingCL_v2): CommandResult = copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.ParkingClV2(__v))
    def getOtherDevice: com.google.protobuf.any.Any = detail.otherDevice.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def withOtherDevice(__v: com.google.protobuf.any.Any): CommandResult = copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.OtherDevice(__v))
    def clearDetail: CommandResult = copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.Empty)
    def withDetail(__v: com.chargerlink.gateway.bean.api.CommandResult.Detail): CommandResult = copy(detail = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => deviceType.javaValueDescriptor
        case 2 => deviceId
        case 3 => commandId.orNull
        case 10 => detail.error.orNull
        case 11 => detail.success.orNull
        case 100 => detail.vehicleGbV1.orNull
        case 200 => detail.recorderAmiV1.orNull
        case 300 => detail.chargerClV2.orNull
        case 400 => detail.parkingClV2.orNull
        case 999 => detail.otherDevice.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(deviceType.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PString(deviceId)
        case 3 => commandId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => detail.error.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => detail.success.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 100 => detail.vehicleGbV1.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 200 => detail.recorderAmiV1.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 300 => detail.chargerClV2.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 400 => detail.parkingClV2.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 999 => detail.otherDevice.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.api.CommandResult
}

object CommandResult extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandResult] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandResult] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandResult = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.api.CommandResult(
      com.chargerlink.gateway.bean.common.DeviceType.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap(__fields.get(1)).asInstanceOf[String],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
      detail = __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandResult.ResultError]].map(com.chargerlink.gateway.bean.api.CommandResult.Detail.Error) orElse
__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess]].map(com.chargerlink.gateway.bean.api.CommandResult.Detail.Success) orElse
__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultVehicleGB_v1]].map(com.chargerlink.gateway.bean.api.CommandResult.Detail.VehicleGbV1) orElse
__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1]].map(com.chargerlink.gateway.bean.api.CommandResult.Detail.RecorderAmiV1) orElse
__fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2]].map(com.chargerlink.gateway.bean.api.CommandResult.Detail.ChargerClV2) orElse
__fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultParkingCL_v2]].map(com.chargerlink.gateway.bean.api.CommandResult.Detail.ParkingClV2) orElse
__fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[com.google.protobuf.any.Any]].map(com.chargerlink.gateway.bean.api.CommandResult.Detail.OtherDevice) getOrElse com.chargerlink.gateway.bean.api.CommandResult.Detail.Empty
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandResult] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.api.CommandResult(
        com.chargerlink.gateway.bean.common.DeviceType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
        detail = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandResult.ResultError]]).map(com.chargerlink.gateway.bean.api.CommandResult.Detail.Error) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess]]).map(com.chargerlink.gateway.bean.api.CommandResult.Detail.Success) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(100).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultVehicleGB_v1]]).map(com.chargerlink.gateway.bean.api.CommandResult.Detail.VehicleGbV1) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(200).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1]]).map(com.chargerlink.gateway.bean.api.CommandResult.Detail.RecorderAmiV1) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(300).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2]]).map(com.chargerlink.gateway.bean.api.CommandResult.Detail.ChargerClV2) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(400).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultParkingCL_v2]]).map(com.chargerlink.gateway.bean.api.CommandResult.Detail.ParkingClV2) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(999).get).flatMap(_.as[scala.Option[com.google.protobuf.any.Any]]).map(com.chargerlink.gateway.bean.api.CommandResult.Detail.OtherDevice) getOrElse com.chargerlink.gateway.bean.api.CommandResult.Detail.Empty
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiBaseProto.javaDescriptor.getMessageTypes.get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiBaseProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 10 => __out = com.chargerlink.gateway.bean.api.CommandResult.ResultError
      case 11 => __out = com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess
      case 100 => __out = com.chargerlink.gateway.bean.api.ResultVehicleGB_v1
      case 200 => __out = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1
      case 300 => __out = com.chargerlink.gateway.bean.api.ResultChargerCL_v2
      case 400 => __out = com.chargerlink.gateway.bean.api.ResultParkingCL_v2
      case 999 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => com.chargerlink.gateway.bean.common.DeviceType
    }
  }
  lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandResult(
    deviceType = com.chargerlink.gateway.bean.common.DeviceType.DEVICE_VEHICLE_GB_V1,
    deviceId = ""
  )
  sealed trait ErrorCode extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = ErrorCode
    def isAuthorityInvalid: Boolean = false
    def isDeviceUnknown: Boolean = false
    def isDeviceInvalid: Boolean = false
    def isRequestUnknown: Boolean = false
    def isRequestInvalid: Boolean = false
    def isRequestTimeout: Boolean = false
    def isResponseTimeout: Boolean = false
    def isResponseError: Boolean = false
    def isGenericError: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ErrorCode] = com.chargerlink.gateway.bean.api.CommandResult.ErrorCode
  }
  
  object ErrorCode extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ErrorCode] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ErrorCode] = this
    @SerialVersionUID(0L)
    case object AUTHORITY_INVALID extends ErrorCode {
      val value = 10
      val index = 0
      val name = "AUTHORITY_INVALID"
      override def isAuthorityInvalid: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DEVICE_UNKNOWN extends ErrorCode {
      val value = 11
      val index = 1
      val name = "DEVICE_UNKNOWN"
      override def isDeviceUnknown: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DEVICE_INVALID extends ErrorCode {
      val value = 12
      val index = 2
      val name = "DEVICE_INVALID"
      override def isDeviceInvalid: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object REQUEST_UNKNOWN extends ErrorCode {
      val value = 20
      val index = 3
      val name = "REQUEST_UNKNOWN"
      override def isRequestUnknown: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object REQUEST_INVALID extends ErrorCode {
      val value = 21
      val index = 4
      val name = "REQUEST_INVALID"
      override def isRequestInvalid: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object REQUEST_TIMEOUT extends ErrorCode {
      val value = 22
      val index = 5
      val name = "REQUEST_TIMEOUT"
      override def isRequestTimeout: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESPONSE_TIMEOUT extends ErrorCode {
      val value = 30
      val index = 6
      val name = "RESPONSE_TIMEOUT"
      override def isResponseTimeout: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESPONSE_ERROR extends ErrorCode {
      val value = 31
      val index = 7
      val name = "RESPONSE_ERROR"
      override def isResponseError: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object GENERIC_ERROR extends ErrorCode {
      val value = 100
      val index = 8
      val name = "GENERIC_ERROR"
      override def isGenericError: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends ErrorCode with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(AUTHORITY_INVALID, DEVICE_UNKNOWN, DEVICE_INVALID, REQUEST_UNKNOWN, REQUEST_INVALID, REQUEST_TIMEOUT, RESPONSE_TIMEOUT, RESPONSE_ERROR, GENERIC_ERROR)
    def fromValue(value: Int): ErrorCode = value match {
      case 10 => AUTHORITY_INVALID
      case 11 => DEVICE_UNKNOWN
      case 12 => DEVICE_INVALID
      case 20 => REQUEST_UNKNOWN
      case 21 => REQUEST_INVALID
      case 22 => REQUEST_TIMEOUT
      case 30 => RESPONSE_TIMEOUT
      case 31 => RESPONSE_ERROR
      case 100 => GENERIC_ERROR
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.CommandResult.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.chargerlink.gateway.bean.api.CommandResult.scalaDescriptor.enums(0)
  }
  sealed trait Detail extends _root_.com.trueaccord.scalapb.GeneratedOneof {
    def isEmpty: Boolean = false
    def isDefined: Boolean = true
    def isError: Boolean = false
    def isSuccess: Boolean = false
    def isVehicleGbV1: Boolean = false
    def isRecorderAmiV1: Boolean = false
    def isChargerClV2: Boolean = false
    def isParkingClV2: Boolean = false
    def isOtherDevice: Boolean = false
    def error: scala.Option[com.chargerlink.gateway.bean.api.CommandResult.ResultError] = None
    def success: scala.Option[com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess] = None
    def vehicleGbV1: scala.Option[com.chargerlink.gateway.bean.api.ResultVehicleGB_v1] = None
    def recorderAmiV1: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1] = None
    def chargerClV2: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2] = None
    def parkingClV2: scala.Option[com.chargerlink.gateway.bean.api.ResultParkingCL_v2] = None
    def otherDevice: scala.Option[com.google.protobuf.any.Any] = None
  }
  object Detail extends {
    @SerialVersionUID(0L)
    case object Empty extends com.chargerlink.gateway.bean.api.CommandResult.Detail {
      override def isEmpty: Boolean = true
      override def isDefined: Boolean = false
      override def number: Int = 0
      override def value: scala.Any = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    case class Error(value: com.chargerlink.gateway.bean.api.CommandResult.ResultError) extends com.chargerlink.gateway.bean.api.CommandResult.Detail {
      override def isError: Boolean = true
      override def error: scala.Option[com.chargerlink.gateway.bean.api.CommandResult.ResultError] = Some(value)
      override def number: Int = 10
    }
    @SerialVersionUID(0L)
    case class Success(value: com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess) extends com.chargerlink.gateway.bean.api.CommandResult.Detail {
      override def isSuccess: Boolean = true
      override def success: scala.Option[com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess] = Some(value)
      override def number: Int = 11
    }
    @SerialVersionUID(0L)
    case class VehicleGbV1(value: com.chargerlink.gateway.bean.api.ResultVehicleGB_v1) extends com.chargerlink.gateway.bean.api.CommandResult.Detail {
      override def isVehicleGbV1: Boolean = true
      override def vehicleGbV1: scala.Option[com.chargerlink.gateway.bean.api.ResultVehicleGB_v1] = Some(value)
      override def number: Int = 100
    }
    @SerialVersionUID(0L)
    case class RecorderAmiV1(value: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1) extends com.chargerlink.gateway.bean.api.CommandResult.Detail {
      override def isRecorderAmiV1: Boolean = true
      override def recorderAmiV1: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1] = Some(value)
      override def number: Int = 200
    }
    @SerialVersionUID(0L)
    case class ChargerClV2(value: com.chargerlink.gateway.bean.api.ResultChargerCL_v2) extends com.chargerlink.gateway.bean.api.CommandResult.Detail {
      override def isChargerClV2: Boolean = true
      override def chargerClV2: scala.Option[com.chargerlink.gateway.bean.api.ResultChargerCL_v2] = Some(value)
      override def number: Int = 300
    }
    @SerialVersionUID(0L)
    case class ParkingClV2(value: com.chargerlink.gateway.bean.api.ResultParkingCL_v2) extends com.chargerlink.gateway.bean.api.CommandResult.Detail {
      override def isParkingClV2: Boolean = true
      override def parkingClV2: scala.Option[com.chargerlink.gateway.bean.api.ResultParkingCL_v2] = Some(value)
      override def number: Int = 400
    }
    @SerialVersionUID(0L)
    case class OtherDevice(value: com.google.protobuf.any.Any) extends com.chargerlink.gateway.bean.api.CommandResult.Detail {
      override def isOtherDevice: Boolean = true
      override def otherDevice: scala.Option[com.google.protobuf.any.Any] = Some(value)
      override def number: Int = 999
    }
  }
  /** * 接入平台返回的错误应答的消息定义。
    *
    * @param errorCode
    *  / (必填)错误代码。
    * @param errorMsg
    *  / (可选)错误信息。
    * @param extraCode
    *  / (可选)附加的其他错误代码。如果错误代码为RESPONSE_ERROR，则为终端设备返回的错误代码。
    * @param extraMsg
    *  / (可选)附加的其他错误信息。如果错误代码为RESPONSE_ERROR，则为终端设备返回的错误信息。
    */
  @SerialVersionUID(0L)
  final case class ResultError(
      errorCode: com.chargerlink.gateway.bean.api.CommandResult.ErrorCode,
      errorMsg: scala.Option[String] = None,
      extraCode: scala.Option[Int] = None,
      extraMsg: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultError] with com.trueaccord.lenses.Updatable[ResultError] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, errorCode.value)
        if (errorMsg.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, errorMsg.get) }
        if (extraCode.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, extraCode.get) }
        if (extraMsg.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, extraMsg.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeEnum(1, errorCode.value)
        errorMsg.foreach { __v =>
          _output__.writeString(2, __v)
        };
        extraCode.foreach { __v =>
          _output__.writeInt32(3, __v)
        };
        extraMsg.foreach { __v =>
          _output__.writeString(4, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandResult.ResultError = {
        var __errorCode = this.errorCode
        var __errorMsg = this.errorMsg
        var __extraCode = this.extraCode
        var __extraMsg = this.extraMsg
        var __requiredFields0: Long = 0x1L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __errorCode = com.chargerlink.gateway.bean.api.CommandResult.ErrorCode.fromValue(_input__.readEnum())
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __errorMsg = Some(_input__.readString())
            case 24 =>
              __extraCode = Some(_input__.readInt32())
            case 34 =>
              __extraMsg = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.CommandResult.ResultError(
            errorCode = __errorCode,
            errorMsg = __errorMsg,
            extraCode = __extraCode,
            extraMsg = __extraMsg
        )
      }
      def withErrorCode(__v: com.chargerlink.gateway.bean.api.CommandResult.ErrorCode): ResultError = copy(errorCode = __v)
      def getErrorMsg: String = errorMsg.getOrElse("")
      def clearErrorMsg: ResultError = copy(errorMsg = None)
      def withErrorMsg(__v: String): ResultError = copy(errorMsg = Some(__v))
      def getExtraCode: Int = extraCode.getOrElse(0)
      def clearExtraCode: ResultError = copy(extraCode = None)
      def withExtraCode(__v: Int): ResultError = copy(extraCode = Some(__v))
      def getExtraMsg: String = extraMsg.getOrElse("")
      def clearExtraMsg: ResultError = copy(extraMsg = None)
      def withExtraMsg(__v: String): ResultError = copy(extraMsg = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => errorCode.javaValueDescriptor
          case 2 => errorMsg.orNull
          case 3 => extraCode.orNull
          case 4 => extraMsg.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PEnum(errorCode.scalaValueDescriptor)
          case 2 => errorMsg.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => extraCode.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => extraMsg.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandResult.ResultError
  }
  
  object ResultError extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandResult.ResultError] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandResult.ResultError] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandResult.ResultError = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandResult.ResultError(
        com.chargerlink.gateway.bean.api.CommandResult.ErrorCode.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandResult.ResultError] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandResult.ResultError(
          com.chargerlink.gateway.bean.api.CommandResult.ErrorCode.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandResult.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandResult.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => com.chargerlink.gateway.bean.api.CommandResult.ErrorCode
      }
    }
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandResult.ResultError(
      errorCode = com.chargerlink.gateway.bean.api.CommandResult.ErrorCode.AUTHORITY_INVALID
    )
    implicit class ResultErrorLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult.ResultError]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult.ResultError](_l) {
      def errorCode: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult.ErrorCode] = field(_.errorCode)((c_, f_) => c_.copy(errorCode = f_))
      def errorMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getErrorMsg)((c_, f_) => c_.copy(errorMsg = Some(f_)))
      def optionalErrorMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.errorMsg)((c_, f_) => c_.copy(errorMsg = f_))
      def extraCode: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getExtraCode)((c_, f_) => c_.copy(extraCode = Some(f_)))
      def optionalExtraCode: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.extraCode)((c_, f_) => c_.copy(extraCode = f_))
      def extraMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getExtraMsg)((c_, f_) => c_.copy(extraMsg = Some(f_)))
      def optionalExtraMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.extraMsg)((c_, f_) => c_.copy(extraMsg = f_))
    }
    final val ERROR_CODE_FIELD_NUMBER = 1
    final val ERROR_MSG_FIELD_NUMBER = 2
    final val EXTRA_CODE_FIELD_NUMBER = 3
    final val EXTRA_MSG_FIELD_NUMBER = 4
  }
  
  /** * 接入平台返回的成功应答的消息定义。
    */
  @SerialVersionUID(0L)
  final case class ResultSuccess(
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultSuccess] with com.trueaccord.lenses.Updatable[ResultSuccess] {
      final override def serializedSize: Int = 0
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess = {
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case tag => _input__.skipField(tag)
          }
        }
        com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess(
        )
      }
      def getFieldByNumber(__fieldNumber: Int): scala.Any = throw new MatchError(__fieldNumber)
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess
  }
  
  object ResultSuccess extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess(
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess(
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandResult.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.CommandResult.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess(
    )
    implicit class ResultSuccessLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess](_l) {
    }
  }
  
  implicit class CommandResultLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult](_l) {
    def deviceType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.common.DeviceType] = field(_.deviceType)((c_, f_) => c_.copy(deviceType = f_))
    def deviceId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.deviceId)((c_, f_) => c_.copy(deviceId = f_))
    def commandId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getCommandId)((c_, f_) => c_.copy(commandId = Some(f_)))
    def optionalCommandId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.commandId)((c_, f_) => c_.copy(commandId = f_))
    def error: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult.ResultError] = field(_.getError)((c_, f_) => c_.copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.Error(f_)))
    def success: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult.ResultSuccess] = field(_.getSuccess)((c_, f_) => c_.copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.Success(f_)))
    def vehicleGbV1: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultVehicleGB_v1] = field(_.getVehicleGbV1)((c_, f_) => c_.copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.VehicleGbV1(f_)))
    def recorderAmiV1: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1] = field(_.getRecorderAmiV1)((c_, f_) => c_.copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.RecorderAmiV1(f_)))
    def chargerClV2: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultChargerCL_v2] = field(_.getChargerClV2)((c_, f_) => c_.copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.ChargerClV2(f_)))
    def parkingClV2: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultParkingCL_v2] = field(_.getParkingClV2)((c_, f_) => c_.copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.ParkingClV2(f_)))
    def otherDevice: _root_.com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getOtherDevice)((c_, f_) => c_.copy(detail = com.chargerlink.gateway.bean.api.CommandResult.Detail.OtherDevice(f_)))
    def detail: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.CommandResult.Detail] = field(_.detail)((c_, f_) => c_.copy(detail = f_))
  }
  final val DEVICE_TYPE_FIELD_NUMBER = 1
  final val DEVICE_ID_FIELD_NUMBER = 2
  final val COMMAND_ID_FIELD_NUMBER = 3
  final val ERROR_FIELD_NUMBER = 10
  final val SUCCESS_FIELD_NUMBER = 11
  final val VEHICLE_GB_V1_FIELD_NUMBER = 100
  final val RECORDER_AMI_V1_FIELD_NUMBER = 200
  final val CHARGER_CL_V2_FIELD_NUMBER = 300
  final val PARKING_CL_V2_FIELD_NUMBER = 400
  final val OTHER_DEVICE_FIELD_NUMBER = 999
}
