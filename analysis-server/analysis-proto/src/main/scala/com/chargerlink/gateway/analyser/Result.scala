// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.chargerlink.gateway.analyser



/** * 接口返回结果的消息定义。
  *
  * @param code
  *  / (必填)操作结果。
  * @param extraCode
  *  / (可选)操作附加返回值。当操作结果为失败时，可以用于返回其他附加错误代码。
  * @param extraMsg
  *  / (可选)操作附加返回信息。当操作结果为失败时，可以用于返回其他附加错误信息。
  */
@SerialVersionUID(0L)
final case class Result(
    code: com.chargerlink.gateway.analyser.Result.ResultCode = com.chargerlink.gateway.analyser.Result.ResultCode.RESULT_SUCCESS,
    extraCode: Int = 0,
    extraMsg: String = ""
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Result] with com.trueaccord.lenses.Updatable[Result] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (code != com.chargerlink.gateway.analyser.Result.ResultCode.RESULT_SUCCESS) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, code.value) }
      if (extraCode != 0) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, extraCode) }
      if (extraMsg != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, extraMsg) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = code
        if (__v != com.chargerlink.gateway.analyser.Result.ResultCode.RESULT_SUCCESS) {
          _output__.writeEnum(1, __v.value)
        }
      };
      {
        val __v = extraCode
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = extraMsg
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.analyser.Result = {
      var __code = this.code
      var __extraCode = this.extraCode
      var __extraMsg = this.extraMsg
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __code = com.chargerlink.gateway.analyser.Result.ResultCode.fromValue(_input__.readEnum())
          case 16 =>
            __extraCode = _input__.readInt32()
          case 26 =>
            __extraMsg = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      com.chargerlink.gateway.analyser.Result(
          code = __code,
          extraCode = __extraCode,
          extraMsg = __extraMsg
      )
    }
    def withCode(__v: com.chargerlink.gateway.analyser.Result.ResultCode): Result = copy(code = __v)
    def withExtraCode(__v: Int): Result = copy(extraCode = __v)
    def withExtraMsg(__v: String): Result = copy(extraMsg = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = code.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = extraCode
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = extraMsg
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(code.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PInt(extraCode)
        case 3 => _root_.scalapb.descriptors.PString(extraMsg)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.analyser.Result
}

object Result extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.analyser.Result] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.analyser.Result] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.analyser.Result = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.analyser.Result(
      com.chargerlink.gateway.analyser.Result.ResultCode.fromValue(__fieldsMap.getOrElse(__fields.get(0), com.chargerlink.gateway.analyser.Result.ResultCode.RESULT_SUCCESS.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(1), 0).asInstanceOf[Int],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.analyser.Result] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.analyser.Result(
        com.chargerlink.gateway.analyser.Result.ResultCode.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.chargerlink.gateway.analyser.Result.ResultCode.RESULT_SUCCESS.scalaValueDescriptor).number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = CommonProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = CommonProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => com.chargerlink.gateway.analyser.Result.ResultCode
    }
  }
  lazy val defaultInstance = com.chargerlink.gateway.analyser.Result(
  )
  sealed trait ResultCode extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = ResultCode
    def isResultSuccess: Boolean = false
    def isResultUnauthorized: Boolean = false
    def isResultInvalidDevice: Boolean = false
    def isResultInvalidParam: Boolean = false
    def isResultProcessError: Boolean = false
    def isResultProcessTimeout: Boolean = false
    def isResultGenericError: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] = com.chargerlink.gateway.analyser.Result.ResultCode
  }
  
  object ResultCode extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] = this
    @SerialVersionUID(0L)
    case object RESULT_SUCCESS extends ResultCode {
      val value = 0
      val index = 0
      val name = "RESULT_SUCCESS"
      override def isResultSuccess: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_UNAUTHORIZED extends ResultCode {
      val value = 10
      val index = 1
      val name = "RESULT_UNAUTHORIZED"
      override def isResultUnauthorized: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_INVALID_DEVICE extends ResultCode {
      val value = 11
      val index = 2
      val name = "RESULT_INVALID_DEVICE"
      override def isResultInvalidDevice: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_INVALID_PARAM extends ResultCode {
      val value = 12
      val index = 3
      val name = "RESULT_INVALID_PARAM"
      override def isResultInvalidParam: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_PROCESS_ERROR extends ResultCode {
      val value = 20
      val index = 4
      val name = "RESULT_PROCESS_ERROR"
      override def isResultProcessError: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_PROCESS_TIMEOUT extends ResultCode {
      val value = 21
      val index = 5
      val name = "RESULT_PROCESS_TIMEOUT"
      override def isResultProcessTimeout: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RESULT_GENERIC_ERROR extends ResultCode {
      val value = 100
      val index = 6
      val name = "RESULT_GENERIC_ERROR"
      override def isResultGenericError: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends ResultCode with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(RESULT_SUCCESS, RESULT_UNAUTHORIZED, RESULT_INVALID_DEVICE, RESULT_INVALID_PARAM, RESULT_PROCESS_ERROR, RESULT_PROCESS_TIMEOUT, RESULT_GENERIC_ERROR)
    def fromValue(value: Int): ResultCode = value match {
      case 0 => RESULT_SUCCESS
      case 10 => RESULT_UNAUTHORIZED
      case 11 => RESULT_INVALID_DEVICE
      case 12 => RESULT_INVALID_PARAM
      case 20 => RESULT_PROCESS_ERROR
      case 21 => RESULT_PROCESS_TIMEOUT
      case 100 => RESULT_GENERIC_ERROR
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.chargerlink.gateway.analyser.Result.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.chargerlink.gateway.analyser.Result.scalaDescriptor.enums(0)
  }
  implicit class ResultLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.analyser.Result]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.analyser.Result](_l) {
    def code: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.analyser.Result.ResultCode] = field(_.code)((c_, f_) => c_.copy(code = f_))
    def extraCode: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.extraCode)((c_, f_) => c_.copy(extraCode = f_))
    def extraMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.extraMsg)((c_, f_) => c_.copy(extraMsg = f_))
  }
  final val CODE_FIELD_NUMBER = 1
  final val EXTRA_CODE_FIELD_NUMBER = 2
  final val EXTRA_MSG_FIELD_NUMBER = 3
}
