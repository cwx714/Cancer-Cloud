// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.api



/** * 查询终端设备上传媒体信息的请求消息定义。目前只支持行车记录仪/后视镜设备。
  *
  * @param deviceType
  *  / (必填)终端设备类型。目前只支持行车记录仪/后视镜设备。
  * @param deviceId
  *  / (必填)终端设备ID。格式由对应类型设备自行定义, 设备类型和设备ID组成设备的全局唯一标识。
  * @param sessionId
  *  / (必填)上传媒体的唯一标识。
  */
@SerialVersionUID(0L)
final case class QueryMediaInfo(
    deviceType: com.chargerlink.gateway.bean.common.DeviceType,
    deviceId: String,
    sessionId: Long
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[QueryMediaInfo] with com.trueaccord.lenses.Updatable[QueryMediaInfo] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, deviceType.value)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, deviceId)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, sessionId)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeEnum(1, deviceType.value)
      _output__.writeString(2, deviceId)
      _output__.writeInt64(3, sessionId)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.QueryMediaInfo = {
      var __deviceType = this.deviceType
      var __deviceId = this.deviceId
      var __sessionId = this.sessionId
      var __requiredFields0: Long = 0x7L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __deviceType = com.chargerlink.gateway.bean.common.DeviceType.fromValue(_input__.readEnum())
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __deviceId = _input__.readString()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 24 =>
            __sessionId = _input__.readInt64()
            __requiredFields0 &= 0xfffffffffffffffbL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.chargerlink.gateway.bean.api.QueryMediaInfo(
          deviceType = __deviceType,
          deviceId = __deviceId,
          sessionId = __sessionId
      )
    }
    def withDeviceType(__v: com.chargerlink.gateway.bean.common.DeviceType): QueryMediaInfo = copy(deviceType = __v)
    def withDeviceId(__v: String): QueryMediaInfo = copy(deviceId = __v)
    def withSessionId(__v: Long): QueryMediaInfo = copy(sessionId = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => deviceType.javaValueDescriptor
        case 2 => deviceId
        case 3 => sessionId
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(deviceType.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PString(deviceId)
        case 3 => _root_.scalapb.descriptors.PLong(sessionId)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.api.QueryMediaInfo
}

object QueryMediaInfo extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.QueryMediaInfo] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.QueryMediaInfo] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.QueryMediaInfo = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.api.QueryMediaInfo(
      com.chargerlink.gateway.bean.common.DeviceType.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap(__fields.get(1)).asInstanceOf[String],
      __fieldsMap(__fields.get(2)).asInstanceOf[Long]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.QueryMediaInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.api.QueryMediaInfo(
        com.chargerlink.gateway.bean.common.DeviceType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[Long]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiBaseProto.javaDescriptor.getMessageTypes.get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiBaseProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => com.chargerlink.gateway.bean.common.DeviceType
    }
  }
  lazy val defaultInstance = com.chargerlink.gateway.bean.api.QueryMediaInfo(
    deviceType = com.chargerlink.gateway.bean.common.DeviceType.DEVICE_VEHICLE_GB_V1,
    deviceId = "",
    sessionId = 0L
  )
  implicit class QueryMediaInfoLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.QueryMediaInfo]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.QueryMediaInfo](_l) {
    def deviceType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.common.DeviceType] = field(_.deviceType)((c_, f_) => c_.copy(deviceType = f_))
    def deviceId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.deviceId)((c_, f_) => c_.copy(deviceId = f_))
    def sessionId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.sessionId)((c_, f_) => c_.copy(sessionId = f_))
  }
  final val DEVICE_TYPE_FIELD_NUMBER = 1
  final val DEVICE_ID_FIELD_NUMBER = 2
  final val SESSION_ID_FIELD_NUMBER = 3
}
