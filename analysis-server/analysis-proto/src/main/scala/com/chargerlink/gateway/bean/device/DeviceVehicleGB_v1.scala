// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.device



/** * 国标GB/T32960-2016的电动车TBOX设备信息的消息定义。设备类型：DEVICE_VEHICLE_GB_V1，设备ID：固定17位车辆VIN码的字符串。
  *
  * @param vinCode
  *  / (必填)车辆识别代号VIN码。
  * @param simIccid
  *  / (必填)SIM卡ICCID号。
  * @param batteryList
  *  / (必填)动力蓄电池编码数组。
  */
@SerialVersionUID(0L)
final case class DeviceVehicleGB_v1(
    vinCode: String,
    simIccid: String,
    batteryList: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[DeviceVehicleGB_v1] with com.trueaccord.lenses.Updatable[DeviceVehicleGB_v1] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, vinCode)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, simIccid)
      batteryList.foreach(batteryList => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, batteryList))
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeString(1, vinCode)
      _output__.writeString(2, simIccid)
      batteryList.foreach { __v =>
        _output__.writeString(3, __v)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1 = {
      var __vinCode = this.vinCode
      var __simIccid = this.simIccid
      val __batteryList = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.batteryList)
      var __requiredFields0: Long = 0x3L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __vinCode = _input__.readString()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __simIccid = _input__.readString()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 26 =>
            __batteryList += _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1(
          vinCode = __vinCode,
          simIccid = __simIccid,
          batteryList = __batteryList.result()
      )
    }
    def withVinCode(__v: String): DeviceVehicleGB_v1 = copy(vinCode = __v)
    def withSimIccid(__v: String): DeviceVehicleGB_v1 = copy(simIccid = __v)
    def clearBatteryList = copy(batteryList = _root_.scala.collection.Seq.empty)
    def addBatteryList(__vs: String*): DeviceVehicleGB_v1 = addAllBatteryList(__vs)
    def addAllBatteryList(__vs: TraversableOnce[String]): DeviceVehicleGB_v1 = copy(batteryList = batteryList ++ __vs)
    def withBatteryList(__v: _root_.scala.collection.Seq[String]): DeviceVehicleGB_v1 = copy(batteryList = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => vinCode
        case 2 => simIccid
        case 3 => batteryList
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(vinCode)
        case 2 => _root_.scalapb.descriptors.PString(simIccid)
        case 3 => _root_.scalapb.descriptors.PRepeated(batteryList.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1
}

object DeviceVehicleGB_v1 extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1 = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1(
      __fieldsMap(__fields.get(0)).asInstanceOf[String],
      __fieldsMap(__fields.get(1)).asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[String]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DeviceVehicleProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DeviceVehicleProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1(
    vinCode = "",
    simIccid = ""
  )
  implicit class DeviceVehicleGB_v1Lens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.device.DeviceVehicleGB_v1](_l) {
    def vinCode: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.vinCode)((c_, f_) => c_.copy(vinCode = f_))
    def simIccid: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.simIccid)((c_, f_) => c_.copy(simIccid = f_))
    def batteryList: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.batteryList)((c_, f_) => c_.copy(batteryList = f_))
  }
  final val VIN_CODE_FIELD_NUMBER = 1
  final val SIM_ICCID_FIELD_NUMBER = 2
  final val BATTERY_LIST_FIELD_NUMBER = 3
}
