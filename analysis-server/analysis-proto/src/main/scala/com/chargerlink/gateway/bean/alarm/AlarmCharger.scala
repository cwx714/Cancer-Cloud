// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.alarm



/** * 充电桩TCU设备的报警数据类的消息定义。报警代码：20000～30000。必须与报警代码字典表的数据一致。
  *
  * @param alarmData
  *  / (必填)报警时充电桩TCU设备实时报警的数据。
  * @param chargerData
  *  / (可选)报警时充电桩TCU设备实时上报的数据。
  * @param extendData
  *  / (可选)自定义扩展的报警数据。
  */
@SerialVersionUID(0L)
final case class AlarmCharger(
    alarmData: com.chargerlink.gateway.bean.data.DataChgAlarm,
    chargerData: scala.Option[com.chargerlink.gateway.bean.data.DataCharger] = None,
    extendData: scala.Option[com.google.protobuf.any.Any] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[AlarmCharger] with com.trueaccord.lenses.Updatable[AlarmCharger] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(alarmData.serializedSize) + alarmData.serializedSize
      if (chargerData.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(chargerData.get.serializedSize) + chargerData.get.serializedSize }
      if (extendData.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(extendData.get.serializedSize) + extendData.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeTag(1, 2)
      _output__.writeUInt32NoTag(alarmData.serializedSize)
      alarmData.writeTo(_output__)
      chargerData.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      extendData.foreach { __v =>
        _output__.writeTag(100, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.alarm.AlarmCharger = {
      var __alarmData = this.alarmData
      var __chargerData = this.chargerData
      var __extendData = this.extendData
      var __requiredFields0: Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __alarmData = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __alarmData)
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __chargerData = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __chargerData.getOrElse(com.chargerlink.gateway.bean.data.DataCharger.defaultInstance)))
          case 802 =>
            __extendData = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __extendData.getOrElse(com.google.protobuf.any.Any.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.chargerlink.gateway.bean.alarm.AlarmCharger(
          alarmData = __alarmData,
          chargerData = __chargerData,
          extendData = __extendData
      )
    }
    def withAlarmData(__v: com.chargerlink.gateway.bean.data.DataChgAlarm): AlarmCharger = copy(alarmData = __v)
    def getChargerData: com.chargerlink.gateway.bean.data.DataCharger = chargerData.getOrElse(com.chargerlink.gateway.bean.data.DataCharger.defaultInstance)
    def clearChargerData: AlarmCharger = copy(chargerData = None)
    def withChargerData(__v: com.chargerlink.gateway.bean.data.DataCharger): AlarmCharger = copy(chargerData = Some(__v))
    def getExtendData: com.google.protobuf.any.Any = extendData.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearExtendData: AlarmCharger = copy(extendData = None)
    def withExtendData(__v: com.google.protobuf.any.Any): AlarmCharger = copy(extendData = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => alarmData
        case 2 => chargerData.orNull
        case 100 => extendData.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => alarmData.toPMessage
        case 2 => chargerData.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 100 => extendData.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.alarm.AlarmCharger
}

object AlarmCharger extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.alarm.AlarmCharger] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.alarm.AlarmCharger] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.alarm.AlarmCharger = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.alarm.AlarmCharger(
      __fieldsMap(__fields.get(0)).asInstanceOf[com.chargerlink.gateway.bean.data.DataChgAlarm],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.data.DataCharger]],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[com.google.protobuf.any.Any]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.alarm.AlarmCharger] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.alarm.AlarmCharger(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[com.chargerlink.gateway.bean.data.DataChgAlarm],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.data.DataCharger]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(100).get).flatMap(_.as[scala.Option[com.google.protobuf.any.Any]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AlarmChargerProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AlarmChargerProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => __out = com.chargerlink.gateway.bean.data.DataChgAlarm
      case 2 => __out = com.chargerlink.gateway.bean.data.DataCharger
      case 100 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.chargerlink.gateway.bean.alarm.AlarmCharger(
    alarmData = com.chargerlink.gateway.bean.data.DataChgAlarm.defaultInstance
  )
  implicit class AlarmChargerLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.alarm.AlarmCharger]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.alarm.AlarmCharger](_l) {
    def alarmData: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.data.DataChgAlarm] = field(_.alarmData)((c_, f_) => c_.copy(alarmData = f_))
    def chargerData: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.data.DataCharger] = field(_.getChargerData)((c_, f_) => c_.copy(chargerData = Some(f_)))
    def optionalChargerData: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.chargerlink.gateway.bean.data.DataCharger]] = field(_.chargerData)((c_, f_) => c_.copy(chargerData = f_))
    def extendData: _root_.com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getExtendData)((c_, f_) => c_.copy(extendData = Some(f_)))
    def optionalExtendData: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.google.protobuf.any.Any]] = field(_.extendData)((c_, f_) => c_.copy(extendData = f_))
  }
  final val ALARM_DATA_FIELD_NUMBER = 1
  final val CHARGER_DATA_FIELD_NUMBER = 2
  final val EXTEND_DATA_FIELD_NUMBER = 100
}
