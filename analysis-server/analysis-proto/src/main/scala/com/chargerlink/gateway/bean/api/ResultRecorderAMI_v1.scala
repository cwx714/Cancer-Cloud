// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.chargerlink.gateway.bean.api



/** * Amitek的行车记录仪的命令应答的消息定义。
  */
@SerialVersionUID(0L)
final case class ResultRecorderAMI_v1(
    result: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.Empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ResultRecorderAMI_v1] with com.trueaccord.lenses.Updatable[ResultRecorderAMI_v1] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (result.systemResult.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.systemResult.get.serializedSize) + result.systemResult.get.serializedSize }
      if (result.naviResult.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.naviResult.get.serializedSize) + result.naviResult.get.serializedSize }
      if (result.trackResult.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.trackResult.get.serializedSize) + result.trackResult.get.serializedSize }
      if (result.monitorResult.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(result.monitorResult.get.serializedSize) + result.monitorResult.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      result.systemResult.foreach { __v =>
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.naviResult.foreach { __v =>
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.trackResult.foreach { __v =>
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      result.monitorResult.foreach { __v =>
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1 = {
      var __result = this.result
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 66 =>
            __result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.SystemResult(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.systemResult.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult.defaultInstance)))
          case 74 =>
            __result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.NaviResult(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.naviResult.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult.defaultInstance)))
          case 82 =>
            __result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.TrackResult(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.trackResult.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult.defaultInstance)))
          case 90 =>
            __result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.MonitorResult(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, result.monitorResult.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1(
          result = __result
      )
    }
    def getSystemResult: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult = result.systemResult.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult.defaultInstance)
    def withSystemResult(__v: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult): ResultRecorderAMI_v1 = copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.SystemResult(__v))
    def getNaviResult: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult = result.naviResult.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult.defaultInstance)
    def withNaviResult(__v: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult): ResultRecorderAMI_v1 = copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.NaviResult(__v))
    def getTrackResult: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult = result.trackResult.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult.defaultInstance)
    def withTrackResult(__v: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult): ResultRecorderAMI_v1 = copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.TrackResult(__v))
    def getMonitorResult: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult = result.monitorResult.getOrElse(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult.defaultInstance)
    def withMonitorResult(__v: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult): ResultRecorderAMI_v1 = copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.MonitorResult(__v))
    def clearResult: ResultRecorderAMI_v1 = copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.Empty)
    def withResult(__v: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result): ResultRecorderAMI_v1 = copy(result = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 8 => result.systemResult.orNull
        case 9 => result.naviResult.orNull
        case 10 => result.trackResult.orNull
        case 11 => result.monitorResult.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 8 => result.systemResult.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => result.naviResult.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => result.trackResult.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => result.monitorResult.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1
}

object ResultRecorderAMI_v1 extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1 = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1(
      result = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult]].map(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.SystemResult) orElse
__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult]].map(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.NaviResult) orElse
__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult]].map(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.TrackResult) orElse
__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult]].map(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.MonitorResult) getOrElse com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.Empty
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1(
        result = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult]]).map(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.SystemResult) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult]]).map(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.NaviResult) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult]]).map(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.TrackResult) orElse
__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult]]).map(com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.MonitorResult) getOrElse com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.Empty
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiRecorderProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiRecorderProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 8 => __out = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult
      case 9 => __out = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult
      case 10 => __out = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult
      case 11 => __out = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1(
  )
  sealed trait Result extends _root_.com.trueaccord.scalapb.GeneratedOneof {
    def isEmpty: Boolean = false
    def isDefined: Boolean = true
    def isSystemResult: Boolean = false
    def isNaviResult: Boolean = false
    def isTrackResult: Boolean = false
    def isMonitorResult: Boolean = false
    def systemResult: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = None
    def naviResult: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = None
    def trackResult: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = None
    def monitorResult: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult] = None
  }
  object Result extends {
    @SerialVersionUID(0L)
    case object Empty extends com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result {
      override def isEmpty: Boolean = true
      override def isDefined: Boolean = false
      override def number: Int = 0
      override def value: scala.Any = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    case class SystemResult(value: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult) extends com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result {
      override def isSystemResult: Boolean = true
      override def systemResult: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = Some(value)
      override def number: Int = 8
    }
    @SerialVersionUID(0L)
    case class NaviResult(value: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult) extends com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result {
      override def isNaviResult: Boolean = true
      override def naviResult: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = Some(value)
      override def number: Int = 9
    }
    @SerialVersionUID(0L)
    case class TrackResult(value: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult) extends com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result {
      override def isTrackResult: Boolean = true
      override def trackResult: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = Some(value)
      override def number: Int = 10
    }
    @SerialVersionUID(0L)
    case class MonitorResult(value: com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult) extends com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result {
      override def isMonitorResult: Boolean = true
      override def monitorResult: scala.Option[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult] = Some(value)
      override def number: Int = 11
    }
  }
  /** * 下行请求执行应答的消息定义。
    *
    * @param requestId
    *  / (必填)请求消息的ID。必须跟对应的下发请求消息的ID一致。
    * @param resultCode
    *  / (必填)请求结果代码。0：成功，其他：错误代码。
    * @param resultMsg
    *  / (可选)请求结果描述。
    * @param paramName
    *  / (可选)返回的参数名称。
    * @param paramValue
    *  / (可选)返回的参数数据。
    */
  @SerialVersionUID(0L)
  final case class RequestResult(
      requestId: Long,
      resultCode: scala.Option[Int] = None,
      resultMsg: scala.Option[String] = None,
      paramName: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty,
      paramValue: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[RequestResult] with com.trueaccord.lenses.Updatable[RequestResult] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, requestId)
        if (resultCode.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, resultCode.get) }
        if (resultMsg.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, resultMsg.get) }
        paramName.foreach(paramName => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, paramName))
        paramValue.foreach(paramValue => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, paramValue))
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeUInt64(1, requestId)
        resultCode.foreach { __v =>
          _output__.writeInt32(2, __v)
        };
        resultMsg.foreach { __v =>
          _output__.writeString(3, __v)
        };
        paramName.foreach { __v =>
          _output__.writeString(4, __v)
        };
        paramValue.foreach { __v =>
          _output__.writeString(5, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult = {
        var __requestId = this.requestId
        var __resultCode = this.resultCode
        var __resultMsg = this.resultMsg
        val __paramName = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.paramName)
        val __paramValue = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.paramValue)
        var __requiredFields0: Long = 0x1L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __requestId = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 16 =>
              __resultCode = Some(_input__.readInt32())
            case 26 =>
              __resultMsg = Some(_input__.readString())
            case 34 =>
              __paramName += _input__.readString()
            case 42 =>
              __paramValue += _input__.readString()
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult(
            requestId = __requestId,
            resultCode = __resultCode,
            resultMsg = __resultMsg,
            paramName = __paramName.result(),
            paramValue = __paramValue.result()
        )
      }
      def withRequestId(__v: Long): RequestResult = copy(requestId = __v)
      def getResultCode: Int = resultCode.getOrElse(0)
      def clearResultCode: RequestResult = copy(resultCode = None)
      def withResultCode(__v: Int): RequestResult = copy(resultCode = Some(__v))
      def getResultMsg: String = resultMsg.getOrElse("")
      def clearResultMsg: RequestResult = copy(resultMsg = None)
      def withResultMsg(__v: String): RequestResult = copy(resultMsg = Some(__v))
      def clearParamName = copy(paramName = _root_.scala.collection.Seq.empty)
      def addParamName(__vs: String*): RequestResult = addAllParamName(__vs)
      def addAllParamName(__vs: TraversableOnce[String]): RequestResult = copy(paramName = paramName ++ __vs)
      def withParamName(__v: _root_.scala.collection.Seq[String]): RequestResult = copy(paramName = __v)
      def clearParamValue = copy(paramValue = _root_.scala.collection.Seq.empty)
      def addParamValue(__vs: String*): RequestResult = addAllParamValue(__vs)
      def addAllParamValue(__vs: TraversableOnce[String]): RequestResult = copy(paramValue = paramValue ++ __vs)
      def withParamValue(__v: _root_.scala.collection.Seq[String]): RequestResult = copy(paramValue = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => requestId
          case 2 => resultCode.orNull
          case 3 => resultMsg.orNull
          case 4 => paramName
          case 5 => paramValue
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PLong(requestId)
          case 2 => resultCode.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => resultMsg.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => _root_.scalapb.descriptors.PRepeated(paramName.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
          case 5 => _root_.scalapb.descriptors.PRepeated(paramValue.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult
  }
  
  object RequestResult extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult(
        __fieldsMap(__fields.get(0)).asInstanceOf[Long],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
        __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[String]],
        __fieldsMap.getOrElse(__fields.get(4), Nil).asInstanceOf[_root_.scala.collection.Seq[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Long],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult(
      requestId = 0L
    )
    implicit class RequestResultLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult](_l) {
      def requestId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
      def resultCode: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getResultCode)((c_, f_) => c_.copy(resultCode = Some(f_)))
      def optionalResultCode: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.resultCode)((c_, f_) => c_.copy(resultCode = f_))
      def resultMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getResultMsg)((c_, f_) => c_.copy(resultMsg = Some(f_)))
      def optionalResultMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.resultMsg)((c_, f_) => c_.copy(resultMsg = f_))
      def paramName: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.paramName)((c_, f_) => c_.copy(paramName = f_))
      def paramValue: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.paramValue)((c_, f_) => c_.copy(paramValue = f_))
    }
    final val REQUESTID_FIELD_NUMBER = 1
    final val RESULTCODE_FIELD_NUMBER = 2
    final val RESULTMSG_FIELD_NUMBER = 3
    final val PARAMNAME_FIELD_NUMBER = 4
    final val PARAMVALUE_FIELD_NUMBER = 5
  }
  
  /** * 上传监控请求应答的消息定义。
    *
    * @param requestId
    *  / (必填)请求消息的ID。必须跟对应的下发请求消息的ID一致。
    * @param uploadType
    *  / (必填)上传类型。
    * @param fileType
    *  / (可选)媒体文件类型。使用文件名后缀，以区别文件类型，如："jpg"。只有在预先约定好文件类型的情况下，此字段才可为空。
    * @param fileLength
    *  / (必填)媒体文件总长度。
    * @param offset
    *  / (必填)当前内容的偏移量。
    * @param content
    *  / (必填)当前内容的数据。
    */
  @SerialVersionUID(0L)
  final case class MonitorResult(
      requestId: Long,
      uploadType: com.chargerlink.gateway.bean.common.UploadType,
      fileType: scala.Option[String] = None,
      fileLength: Long,
      offset: Long,
      content: _root_.com.google.protobuf.ByteString
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[MonitorResult] with com.trueaccord.lenses.Updatable[MonitorResult] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, requestId)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, uploadType.value)
        if (fileType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, fileType.get) }
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(4, fileLength)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(5, offset)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(6, content)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeUInt64(1, requestId)
        _output__.writeEnum(2, uploadType.value)
        fileType.foreach { __v =>
          _output__.writeString(3, __v)
        };
        _output__.writeUInt64(4, fileLength)
        _output__.writeUInt64(5, offset)
        _output__.writeBytes(6, content)
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult = {
        var __requestId = this.requestId
        var __uploadType = this.uploadType
        var __fileType = this.fileType
        var __fileLength = this.fileLength
        var __offset = this.offset
        var __content = this.content
        var __requiredFields0: Long = 0x1fL
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __requestId = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 16 =>
              __uploadType = com.chargerlink.gateway.bean.common.UploadType.fromValue(_input__.readEnum())
              __requiredFields0 &= 0xfffffffffffffffdL
            case 26 =>
              __fileType = Some(_input__.readString())
            case 32 =>
              __fileLength = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffbL
            case 40 =>
              __offset = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffff7L
            case 50 =>
              __content = _input__.readBytes()
              __requiredFields0 &= 0xffffffffffffffefL
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult(
            requestId = __requestId,
            uploadType = __uploadType,
            fileType = __fileType,
            fileLength = __fileLength,
            offset = __offset,
            content = __content
        )
      }
      def withRequestId(__v: Long): MonitorResult = copy(requestId = __v)
      def withUploadType(__v: com.chargerlink.gateway.bean.common.UploadType): MonitorResult = copy(uploadType = __v)
      def getFileType: String = fileType.getOrElse("")
      def clearFileType: MonitorResult = copy(fileType = None)
      def withFileType(__v: String): MonitorResult = copy(fileType = Some(__v))
      def withFileLength(__v: Long): MonitorResult = copy(fileLength = __v)
      def withOffset(__v: Long): MonitorResult = copy(offset = __v)
      def withContent(__v: _root_.com.google.protobuf.ByteString): MonitorResult = copy(content = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => requestId
          case 2 => uploadType.javaValueDescriptor
          case 3 => fileType.orNull
          case 4 => fileLength
          case 5 => offset
          case 6 => content
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PLong(requestId)
          case 2 => _root_.scalapb.descriptors.PEnum(uploadType.scalaValueDescriptor)
          case 3 => fileType.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => _root_.scalapb.descriptors.PLong(fileLength)
          case 5 => _root_.scalapb.descriptors.PLong(offset)
          case 6 => _root_.scalapb.descriptors.PByteString(content)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult
  }
  
  object MonitorResult extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult(
        __fieldsMap(__fields.get(0)).asInstanceOf[Long],
        com.chargerlink.gateway.bean.common.UploadType.fromValue(__fieldsMap(__fields.get(1)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
        __fieldsMap(__fields.get(3)).asInstanceOf[Long],
        __fieldsMap(__fields.get(4)).asInstanceOf[Long],
        __fieldsMap(__fields.get(5)).asInstanceOf[_root_.com.google.protobuf.ByteString]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Long],
          com.chargerlink.gateway.bean.common.UploadType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).get.as[Long],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).get.as[Long],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).get.as[_root_.com.google.protobuf.ByteString]
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => com.chargerlink.gateway.bean.common.UploadType
      }
    }
    lazy val defaultInstance = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult(
      requestId = 0L,
      uploadType = com.chargerlink.gateway.bean.common.UploadType.UPLOAD_TRACK,
      fileLength = 0L,
      offset = 0L,
      content = _root_.com.google.protobuf.ByteString.EMPTY
    )
    implicit class MonitorResultLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult](_l) {
      def requestId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
      def uploadType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.common.UploadType] = field(_.uploadType)((c_, f_) => c_.copy(uploadType = f_))
      def fileType: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getFileType)((c_, f_) => c_.copy(fileType = Some(f_)))
      def optionalFileType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.fileType)((c_, f_) => c_.copy(fileType = f_))
      def fileLength: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.fileLength)((c_, f_) => c_.copy(fileLength = f_))
      def offset: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.offset)((c_, f_) => c_.copy(offset = f_))
      def content: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.content)((c_, f_) => c_.copy(content = f_))
    }
    final val REQUESTID_FIELD_NUMBER = 1
    final val UPLOADTYPE_FIELD_NUMBER = 2
    final val FILETYPE_FIELD_NUMBER = 3
    final val FILELENGTH_FIELD_NUMBER = 4
    final val OFFSET_FIELD_NUMBER = 5
    final val CONTENT_FIELD_NUMBER = 6
  }
  
  implicit class ResultRecorderAMI_v1Lens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1](_l) {
    def systemResult: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = field(_.getSystemResult)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.SystemResult(f_)))
    def naviResult: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = field(_.getNaviResult)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.NaviResult(f_)))
    def trackResult: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.RequestResult] = field(_.getTrackResult)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.TrackResult(f_)))
    def monitorResult: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.MonitorResult] = field(_.getMonitorResult)((c_, f_) => c_.copy(result = com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result.MonitorResult(f_)))
    def result: _root_.com.trueaccord.lenses.Lens[UpperPB, com.chargerlink.gateway.bean.api.ResultRecorderAMI_v1.Result] = field(_.result)((c_, f_) => c_.copy(result = f_))
  }
  final val SYSTEM_RESULT_FIELD_NUMBER = 8
  final val NAVI_RESULT_FIELD_NUMBER = 9
  final val TRACK_RESULT_FIELD_NUMBER = 10
  final val MONITOR_RESULT_FIELD_NUMBER = 11
}
